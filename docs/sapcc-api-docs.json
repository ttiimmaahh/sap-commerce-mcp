{"openapi":"3.0.1","info":{"title":"Commerce Webservices","description":"These services manage all of the common commerce functionality, and also include customizations from installed AddOns. The implementing extension is called commercewebservices.","license":{"name":"Use of this file is subject to the terms of your agreement with SAP SE or its affiliates respecting the use of the SAP product for which this file relates.","url":""},"version":"2.2.1"},"externalDocs":{"description":"SAP Commerce Cloud","url":"https://www.sap.com"},"servers":[{"url":"https://localhost:9002/occ/v2","description":"Generated server url"}],"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}],"tags":[{"name":"PunchOut","description":"PunchOut"}],"paths":{"/basesites":{"get":{"tags":["Base Sites"],"summary":"Retrieves the base sites.","description":"Retrieves the base sites and the details of the corresponding base stores.","operationId":"getBaseSites","parameters":[{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/BaseSiteList"}},"application/json":{"schema":{"$ref":"#/components/schemas/BaseSiteList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/accessCode/publicKey":{"get":{"tags":["Access Code"],"summary":"Retrieves the public key to verify the access code.","description":"Retrieves the public key used to verify the authenticity and integrity of the generated accessCode. AccessCodes are used to securely enable access to resources supporting the generation of an accessCode.","operationId":"getAccessCodePublicKey","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SAPAccessCodePublicKey"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/basestores/{baseStoreUid}":{"get":{"tags":["Base Stores"],"summary":"Retrieves a base store.","description":"Retrieves the details of the base store.","operationId":"getBaseStore","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"baseStoreUid","in":"path","description":"Base store identifier.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/BaseStore"}},"application/json":{"schema":{"$ref":"#/components/schemas/BaseStore"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/cardtypes":{"get":{"tags":["Miscs"],"summary":"Retrieves a list of supported payment card types.","description":"Retrieves the payment card types defined for the base store.","operationId":"getCardTypes","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CardTypeList"}},"application/json":{"schema":{"$ref":"#/components/schemas/CardTypeList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/catalogs":{"get":{"tags":["Catalogs"],"summary":"Retrieves a list of catalogs.","operationId":"getCatalogs","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CatalogList"}},"application/json":{"schema":{"$ref":"#/components/schemas/CatalogList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/catalogs/{catalogId}":{"get":{"tags":["Catalogs"],"summary":"Retrieves a catalog.","description":"Retrieves information about the catalog using catalog identifier.","operationId":"getCatalog","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"catalogId","in":"path","description":"Catalog identifier.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Catalog"}},"application/json":{"schema":{"$ref":"#/components/schemas/Catalog"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/catalogs/{catalogId}/{catalogVersionId}":{"get":{"tags":["Catalogs"],"summary":"Retrieves information about the catalog version.","description":"Retrieves information about the catalog version using catalog identifier and catalog version identifier.","operationId":"getCatalogVersion","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"catalogId","in":"path","description":"Catalog identifier.","required":true,"schema":{"type":"string"}},{"name":"catalogVersionId","in":"path","description":"Catalog version identifier.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CatalogVersion"}},"application/json":{"schema":{"$ref":"#/components/schemas/CatalogVersion"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/catalogs/{catalogId}/{catalogVersionId}/categories/{categoryId}":{"get":{"tags":["Catalogs"],"summary":"Retrieves information about the category.","description":"Retrieves information about the category that exists in a catalog version available.","operationId":"getCategories","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"catalogId","in":"path","description":"Catalog identifier.","required":true,"schema":{"type":"string"}},{"name":"catalogVersionId","in":"path","description":"Catalog version identifier.","required":true,"schema":{"type":"string"}},{"name":"categoryId","in":"path","description":"Category identifier.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CategoryHierarchy"}},"application/json":{"schema":{"$ref":"#/components/schemas/CategoryHierarchy"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/categories/{categoryId}/products":{"get":{"tags":["B2B Categories"],"summary":"Retrieves a list of products for a category.","description":"Retrieves a list of products and related product search data, such as available facets, available sorting, and spelling suggestions, for a category. To enable spelling suggestions, you need to have indexed properties configured to be used for spell checking.","operationId":"getProductsByCategory","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"categoryId","in":"path","description":"Category identifier.","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20}},{"name":"query","in":"query","description":"Formatted query string. It contains query criteria like free text search, facet. The format is <freeTextSearch>:<sort>:<facetKey1>:<facetValue1>:...:<facetKeyN>:<facetValueN>.","required":false,"schema":{"type":"string"}},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ProductSearchPage"}},"application/json":{"schema":{"$ref":"#/components/schemas/ProductSearchPage"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/ccpconfigurator/{configId}":{"get":{"tags":["Product Configurator CCP"],"summary":"Gets a product configuration","description":"Returns a product configuration, specified by its identifier. If the call is done in the context of a logged-in session, it ensures that the configuration is only returned if the user is authorized to view the configuration.","operationId":"getProductConfiguration","parameters":[{"name":"attributeKeyRequiresDomain","in":"query","description":"If this parameter is provided, the system will provide the domain values for the specified attribute.","required":false,"schema":{"type":"string"}},{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"configId","in":"path","description":"Configuration identifier.","required":true,"schema":{"type":"string"}},{"name":"expMode","in":"query","description":"If this parameter is provided and its value is true, the system tries to execute the request in expert mode (only possible if the current user belongs to group 'sapproductconfigexpmodegroup'.","required":false,"schema":{"type":"boolean","default":false}},{"name":"groupId","in":"query","description":"If the parameter is provided, only the attributes of the requested group are returned. If the parameter is not provided, attributes for all groups are returned.","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CCPConfiguration"}},"application/json":{"schema":{"$ref":"#/components/schemas/CCPConfiguration"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"patch":{"tags":["Product Configurator CCP"],"summary":"Updates a product configuration","description":"Updates a product configuration. It's possible to send only the changed parts of the configuration, for example a single value change for an attribute. These changes must include their entire path through the configuration (the group they belong to and its parent groups)","operationId":"updateProductConfiguration","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"configId","in":"path","description":"Configuration identifier","required":true,"schema":{"type":"string"}},{"name":"expMode","in":"query","description":"If this parameter is provided and its value is true, the system tries to execute the request in expert mode (only possible if the current user belongs to group 'sapproductconfigexpmodegroup'","required":false,"schema":{"type":"boolean"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CCPConfiguration"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CCPConfiguration"}},"application/json":{"schema":{"$ref":"#/components/schemas/CCPConfiguration"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/ccpconfigurator/{configId}/configurationOverview":{"get":{"tags":["Product Configurator CCP"],"summary":"Gets a product configuration overview","description":"Gets a configuration overview, a simplified and condensed read-only view on the product configuration. Only the selected attribute values are displayed here","operationId":"getProductConfigurationOverview","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"configId","in":"path","description":"Configuration identifier","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CCPConfigurationOverview"}},"application/json":{"schema":{"$ref":"#/components/schemas/CCPConfigurationOverview"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"patch":{"tags":["Product Configurator CCP"],"summary":"Updates the product configuration overview","description":"Updates the configuration overview, a simplified and condensed read-only view on the product configuration. Only the selected attribute values are displayed here.","operationId":"updateProductConfigurationOverview","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"configId","in":"path","description":"Configuration identifier","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CCPConfigurationOverview"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CCPConfigurationOverview"}},"application/json":{"schema":{"$ref":"#/components/schemas/CCPConfigurationOverview"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/ccpconfigurator/{configId}/pricing":{"get":{"tags":["Product Configurator CCP"],"summary":"Gets prices for a product configuration","description":"Gets price elements on configuration level and on attribute value level if present. These price elements include, for example, the configuration base price and the sum of selected options.","operationId":"getProductConfigurationPricing","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"configId","in":"path","description":"Configuration identifier","required":true,"schema":{"type":"string"}},{"name":"groupId","in":"query","description":"Specifies the group for which the value prices are requested; if not specified, no value prices are returned.","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CCPConfigurationPricing"}},"application/json":{"schema":{"$ref":"#/components/schemas/CCPConfigurationPricing"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/ccpconfigurator/{configId}/variants":{"get":{"tags":["Product Configurator CCP Variant Search"],"summary":"Gets variants for a product configuration","description":"Gets variants that match the current configuration attributes.","operationId":"getProductConfigurationVariantSearch","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"configId","in":"path","description":"Configuration identifier","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CCPConfigurationProductVariant"}}},"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CCPConfigurationProductVariant"}}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/cities/{cityId}/districts":{"get":{"tags":["Cities"],"summary":"Retrieves a list of districts for a city.","operationId":"getDistricts","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cityId","in":"path","description":"City identifier.","required":true,"schema":{"type":"string"},"example":"00000001"}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/DistrictList"}},"application/json":{"schema":{"$ref":"#/components/schemas/DistrictList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/cms/components":{"get":{"tags":["Components"],"summary":"Retrieves the component data.","description":"Retrieves the CMS components using the specified identifiers. If you don't provide any component identifiers, all of the components will be retrieved. \nThe components list is filtered by the specified catalog, product, or category restrictions. The result is sorted according to the sort parameter.","operationId":"getComponentsByIds","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"catalogCode","in":"query","description":"Catalog code","required":false,"schema":{"type":"string"},"example":"electronics"},{"name":"categoryCode","in":"query","description":"Category code","required":false,"schema":{"type":"string"},"example":576},{"name":"componentIds","in":"query","description":"List of Component identifiers","required":false,"schema":{"type":"array","items":{"type":"string"}},"example":"FacebookLink,ContactUsLink"},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC, DEFAULT, FULL.","required":false,"schema":{"type":"string","enum":["BASIC","DEFAULT","FULL"]}},{"name":"pageSize","in":"query","description":"Number of results returned per page. Default value: 10.","required":false,"schema":{"type":"integer","format":"int32","default":10}},{"name":"productCode","in":"query","description":"Product code","required":false,"schema":{"type":"string"},"example":553637},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string"},"example":"uid:asc"}],"responses":{"200":{"description":"ComponentIDListWsDTO","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ComponentList"}},"application/json":{"schema":{"$ref":"#/components/schemas/ComponentList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"deprecated":true,"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Components"],"summary":"Retrieves the component data.","operationId":"searchComponentsByIds","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"catalogCode","in":"query","description":"Catalog code","required":false,"schema":{"type":"string"},"example":"electronics"},{"name":"categoryCode","in":"query","description":"Category code","required":false,"schema":{"type":"string"},"example":576},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC, DEFAULT, FULL.","required":false,"schema":{"type":"string","enum":["BASIC","DEFAULT","FULL"]}},{"name":"pageSize","in":"query","description":"Number of results returned per page. Default value: 10.","required":false,"schema":{"type":"integer","format":"int32","default":10}},{"name":"productCode","in":"query","description":"Product code","required":false,"schema":{"type":"string"},"example":553637},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string"},"example":"uid:asc"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ComponentIDList"}}},"required":true},"responses":{"200":{"description":"ComponentIDListWsDTO","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ComponentList"}},"application/json":{"schema":{"$ref":"#/components/schemas/ComponentList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"deprecated":true,"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/cms/components/{componentId}":{"get":{"tags":["Components"],"summary":"Retrieves the component data.","description":"Retrieves the CMS component data.","operationId":"getComponentById","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"catalogCode","in":"query","description":"Catalog code","required":false,"schema":{"type":"string"},"example":"electronics"},{"name":"categoryCode","in":"query","description":"Category code","required":false,"schema":{"type":"string"},"example":576},{"name":"componentId","in":"path","description":"Component identifier","required":true,"schema":{"type":"string"},"example":"PageTitleComponent"},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC, DEFAULT, FULL.","required":false,"schema":{"type":"string","enum":["BASIC","DEFAULT","FULL"]}},{"name":"productCode","in":"query","description":"Product code","required":false,"schema":{"type":"string"},"example":553637}],"responses":{"200":{"description":"ComponentWsDTO","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Component"}},"application/json":{"schema":{"$ref":"#/components/schemas/Component"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"deprecated":true,"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/cms/pages":{"get":{"tags":["Pages"],"summary":"Retrieves the page data and the CMS content slots.","description":"Retrieves the page data and CMS content slots using the pageLabel/pageId or the code parameter. If you don't provide a value for one of these parameters, the homepage CMS content slots are retrieved. \nContent pages can be filtered using pageLabel/pageId while the other page types can be filtered using the specified code.","operationId":"getPage","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"code","in":"query","description":"Page code. Examples: homepage, electronics, cameras, 585.","required":false,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC, DEFAULT, FULL.","required":false,"schema":{"type":"string","enum":["BASIC","DEFAULT","FULL"]}},{"name":"pageId","in":"query","description":"Page id. When pageId is provided, pageLabelOrId will be ignored.","schema":{"type":"string"},"example":"cartPage"},{"name":"pageLabel","in":"query","description":"Page label. If no page has a label that matches the page label exactly, try to find pages whose label starts with a section of the page label.\nNote: URL encoding on the page label should be applied when the label contains special characters. When pageLabel is provided, pageLabelOrId will be ignored.","schema":{"type":"string"},"example":"/cart"},{"name":"pageLabelOrId","in":"query","description":"Page Label or Id. If no page has a label that matches the page label exactly, try to find pages whose label starts with a section of the page label. Otherwise, try to find the page by id.\nWhen label and ID values can match, passing in the pageId parameter may result in obtaining variation pages with the same pageLabel but different pageId. Therefore, it is advisable to use both the pageId and pageLabel parameters to ensure accuracy.Note: URL encoding on the page label should be applied when the label contains special characters.","required":false,"schema":{"type":"string","deprecated":true},"example":"/cart"},{"name":"pageType","in":"query","description":"Page type","required":false,"schema":{"type":"string","enum":["ContentPage","ProductPage","CategoryPage","CatalogPage"]}}],"responses":{"200":{"description":"CMSPageWsDTO","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CMSPage"}},"application/json":{"schema":{"$ref":"#/components/schemas/CMSPage"}}}},"400":{"description":"Should not pass both pageLabel and pageId simultaneously. (InvalidPageQualifierException)","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"deprecated":true,"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/cms/pages/{pageId}":{"get":{"tags":["Pages"],"summary":"Retrieves the page data and CMS content slots using the page identifier.","description":"Retrieves the page data and CMS content slots, each of which contains a list of CMS component data. The page identifier is required.","operationId":"getPageById","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"categoryCode","in":"query","description":"Category code","schema":{"type":"string"},"example":576},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC, DEFAULT, FULL.","required":false,"schema":{"type":"string","enum":["BASIC","DEFAULT","FULL"]}},{"name":"pageId","in":"path","description":"Page Id","required":true,"schema":{"type":"string"},"example":"cartPage"},{"name":"productCode","in":"query","description":"Product code","schema":{"type":"string"},"example":553637}],"responses":{"200":{"description":"CMSPageWsDTO","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CMSPage"}},"application/json":{"schema":{"$ref":"#/components/schemas/CMSPage"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"deprecated":true,"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/cms/sitepages":{"get":{"tags":["Pages"],"summary":"Retrieves the page data.","operationId":"getAllPages","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC, DEFAULT, FULL.","required":false,"schema":{"type":"string","enum":["BASIC","DEFAULT","FULL"]}},{"name":"pageSize","in":"query","description":"Number of results returned per page. Default value: 10.","required":false,"schema":{"type":"integer","format":"int32","default":10}},{"name":"pageType","in":"query","description":"Page type.","required":false,"schema":{"type":"string","enum":["ContentPage","ProductPage","CategoryPage","CatalogPage"]}},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string"},"example":"uid:asc"}],"responses":{"200":{"description":"CMSPageListWsDTO","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CMSPageList"}},"application/json":{"schema":{"$ref":"#/components/schemas/CMSPageList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"deprecated":true,"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/costcenters":{"get":{"tags":["B2B Cost Centers"],"summary":"Retrieves active cost centers.","operationId":"getActiveCostCenters","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/B2BCostCenterList"}},"application/json":{"schema":{"$ref":"#/components/schemas/B2BCostCenterList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["B2B Cost Centers"],"summary":"Creates a cost center.","operationId":"createCostCenter","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/B2BCostCenter"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/B2BCostCenter"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/costcenters/{costCenterCode}":{"get":{"tags":["B2B Cost Centers"],"summary":"Retrieves the cost center.","description":"Retrieves the cost center details.","operationId":"getCostCenter","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"costCenterCode","in":"path","description":"Cost center identifier.","required":true,"schema":{"type":"string"},"example":"Pronto Goods"},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/B2BCostCenter"}},"application/json":{"schema":{"$ref":"#/components/schemas/B2BCostCenter"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"patch":{"tags":["B2B Cost Centers"],"summary":"Updates the cost center.","description":"Updates the cost center. Only the attributes provided in the request body will be changed.","operationId":"updateCostCenter","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"costCenterCode","in":"path","description":"Cost center identifier.","required":true,"schema":{"type":"string"},"example":"Pronto Goods"},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/B2BCostCenter"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/B2BCostCenter"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/costcenters/{costCenterCode}/budgets":{"get":{"tags":["B2B Cost Centers"],"summary":"Retrieves all budgets and certain budgets associated with the specified cost center.","operationId":"getBudgetsForCostCenter","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"costCenterCode","in":"path","description":"Cost center identifier.","required":true,"schema":{"type":"string"},"example":"Pronto Goods"},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20},"example":20},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string"},"example":"name"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BudgetList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["B2B Cost Centers"],"summary":"Creates a budget for the cost center.","operationId":"doAddBudgetToCostCenter","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"budgetCode","in":"query","description":"Budget that will be added to a specific cost center.","required":true,"schema":{"type":"string"},"example":"Weekly_2_5K_USD"},{"name":"costCenterCode","in":"path","description":"Cost center to which the budget will be added.","required":true,"schema":{"type":"string"},"example":"Pronto Services"},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/B2BSelectionData"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/costcenters/{costCenterCode}/budgets/{budgetCode}":{"delete":{"tags":["B2B Cost Centers"],"summary":"Deletes the budget from a cost center.","operationId":"removeBudgetFromCostCenter","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"budgetCode","in":"path","description":"Budget that will be removed from a specific cost center.","required":true,"schema":{"type":"string"},"example":"Weekly_2_5K_USD"},{"name":"costCenterCode","in":"path","description":"Cost center from which the budget will be removed.","required":true,"schema":{"type":"string"},"example":"Pronto Services"},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/B2BSelectionData"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/costcentersall":{"get":{"tags":["B2B Cost Centers"],"summary":"Retrieves the cost centers.","description":"Retrieves a list of cost centers.","operationId":"getCostCenters","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20},"example":20},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string"},"example":"name"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/B2BCostCenterList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/countries":{"get":{"tags":["Countries"],"summary":"Retrieves a list of countries.","description":"Retrieves a list of shipping or billing countries. Set the type parameter to SHIPPING to retrieve the shipping countries. Set the type parameter to BILLING to retrieve the billing countries. Leave the type parameter blank to retrieve all of the countries. The list is sorted alphabetically.","operationId":"getCountries","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"type","in":"query","description":"The type of countries.","required":false,"schema":{"type":"string","enum":["SHIPPING","BILLING"]}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CountryList"}},"application/json":{"schema":{"$ref":"#/components/schemas/CountryList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/countries/{countyIsoCode}/regions":{"get":{"tags":["Countries"],"summary":"Retrieves a list of regions.","description":"Retrieves the list of regions in a country.","operationId":"getCountryRegions","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"countyIsoCode","in":"path","description":"An ISO code for a country","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/RegionList"}},"application/json":{"schema":{"$ref":"#/components/schemas/RegionList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/currencies":{"get":{"tags":["Miscs"],"summary":"Retrieves a list of available currencies.","description":"Retrieves a list of available currencies for the current base store. If the currency list is empty, all of the currencies available in the system are returned.","operationId":"getCurrencies","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CurrencyList"}},"application/json":{"schema":{"$ref":"#/components/schemas/CurrencyList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/customergroups":{"get":{"tags":["Customer Groups"],"summary":"Retrieves the subgroups of a customer group.","description":"Retrieves the subgroup information of a customer group. To perform this call, you must be an authorized member of the customermanagergroup.","operationId":"getCustomerGroups","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"BASIC"}},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/UserGroupList"}},"application/json":{"schema":{"$ref":"#/components/schemas/UserGroupList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Customer Groups"],"summary":"Creates a new customer group.","description":"Creates a new customer group that is a direct subgroup of a customergroup.\nTo try out the methods of the Customer Groups controller, you must authorize a user who belongs to the “customermanagergroup”.\n","operationId":"createCustomerGroup","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/UserGroup"}},"application/json":{"schema":{"$ref":"#/components/schemas/UserGroup"}}},"required":true},"responses":{"201":{"description":"Created"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/customergroups/{groupId}":{"get":{"tags":["Customer Groups"],"summary":"Retrieves a customer group.","description":"Retrieves a customer group. To try out the methods of the customer groups controller, authorize a customer who belongs to the customermanagergroup.","operationId":"getCustomerGroup","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"BASIC"}},{"name":"groupId","in":"path","description":"Group identifier.","required":true,"schema":{"type":"string"},"example":"CustomerForSiteA"}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/UserGroup"}},"application/json":{"schema":{"$ref":"#/components/schemas/UserGroup"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/customergroups/{groupId}/members":{"put":{"tags":["Customer Groups"],"summary":"Sets members for a user group.","description":"Sets members for a user group. The list of existing members is overwritten with a new one.\nTo try out the methods of the Customer Groups controller, you must authorize a user who belongs to the “customermanagergroup”.\n","operationId":"replaceUsersForCustomerGroup","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"groupId","in":"path","description":"Group identifier. ","required":true,"schema":{"type":"string"},"example":"CustomerForSiteA"}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/MemberList"}},"application/json":{"schema":{"$ref":"#/components/schemas/MemberList"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"patch":{"tags":["Customer Groups"],"summary":"Assigns members to a customer group.","description":"Assigns members to a customer group. To perform this call, you must be an authorized member of the customermanagergroup.","operationId":"updateCustomerGroupWithUsers","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"groupId","in":"path","description":"Group identifier. ","required":true,"schema":{"type":"string"},"example":"CustomerForSiteA"}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/MemberList"}},"application/json":{"schema":{"$ref":"#/components/schemas/MemberList"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/customergroups/{groupId}/members/{userId}":{"delete":{"tags":["Customer Groups"],"summary":"Deletes the customer from a customer group.","description":"Deletes the customer from a customer group. To try out the methods in the customer groups controller, authorize a customer who belongs to the customermanagergroup.","operationId":"removeUsersFromCustomerGroup","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"groupId","in":"path","description":"Group identifier.","required":true,"schema":{"type":"string"},"example":"CustomerForSiteA"},{"name":"userId","in":"path","description":"User identifier or one of the literals: ‘current’ for currently authenticated user, ‘anonymous’ for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/deliverycountries":{"get":{"tags":["Miscs"],"summary":"Retrieves a list of shipping countries.","description":"Retrieves a list of the supported delivery countries for the current store. The list is sorted alphabetically.","operationId":"getDeliveryCountries","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CountryList"}},"application/json":{"schema":{"$ref":"#/components/schemas/CountryList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"deprecated":true,"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/export/products":{"get":{"tags":["Export"],"summary":"Retrieves a list of exported products.","description":"Retrieves all of the products or only the products that were modified after the time in the timestamp parameter.","operationId":"getExportedProducts","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"catalog","in":"query","description":"Only products from this catalog are returned. The catalog must be provided along with the version.","required":false,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20}},{"name":"timestamp","in":"query","description":"Only products that are more recent than the given parameter are returned. The value should be in ISO-8601 format: 2018-01-09T16:28:45+0000.","required":false,"schema":{"type":"string"}},{"name":"version","in":"query","description":"Only products from this catalog version are returned. The catalog version must be provided along with the catalog.","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ProductList"}},"application/json":{"schema":{"$ref":"#/components/schemas/ProductList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/feeds/orders/statusfeed":{"get":{"tags":["Feeds"],"summary":"Retrieves a list of orders with status updates.","description":"Retrieves the orders that have changed status. Only the properties from the current baseSite that have been updated after the specified timestamp are returned.","operationId":"getOrderStatusFeed","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"timestamp","in":"query","description":"Only items newer than the given parameter are retrieved. This parameter should be in ISO-8601 format (for example, 2018-01-09T16:28:45+0000).","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/OrderStatusUpdateElementList"}},"application/json":{"schema":{"$ref":"#/components/schemas/OrderStatusUpdateElementList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/forgottenpasswordtokens":{"post":{"tags":["Forgotten Passwords"],"summary":"Creates a token to restore a forgotten password.","description":"Creates a token so that customers can restore their forgotten passwords. This endpoint is deprecated in the 2211.24 update and its deletion is planned. Please use the POST /{baseSiteId}/passwordRestoreToken instead.","operationId":"doRestorePassword","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"userId","in":"query","description":"Customer's user id. Customer user id is case insensitive.","required":true,"schema":{"type":"string"}}],"responses":{"202":{"description":"Accepted"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"deprecated":true,"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/integration/merchant_callback":{"post":{"tags":["Merchant Callback"],"summary":"Validates the decision of the merchant.","description":"Validates the decision of the merchant.\n\nNote: The execution of the “Try it out” button always returns an error because the merchant callback controller handles parameters differently depending on which payment provider is used.\n","operationId":"doHandleMerchantCallback","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/integration/users/{userId}/carts/{cartId}/payment/sop/response":{"post":{"tags":["Merchant Callback"],"summary":"Validates the decision of the merchant for a SOP payment related to a cart.","description":"Handles and validates the decision of the merchant for a cart. The PaymentSubscriptionResult is stored for the cart.\n\nNote: The execution of the “Try it out” button always returns an error because the merchant callback controller handles parameters differently, depending on which payment provider is used.\n","operationId":"doHandleCartMerchantCallback","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/languages":{"get":{"tags":["Miscs"],"summary":"Retrieves a list of available languages.","description":"Retrieves a list of the available languages of the base store. If the language list is empty, all of the languages available in the system are returned.","operationId":"getLanguages","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/LanguageList"}},"application/json":{"schema":{"$ref":"#/components/schemas/LanguageList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/messagecenter/im/conversations":{"post":{"tags":["Message Center"],"summary":"Sends a message.","description":"Sends a message, which creates a conversation and returns the conversation data.","operationId":"sendMessage","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/conversationMessageList"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/conversation"}},"application/json":{"schema":{"$ref":"#/components/schemas/conversation"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/messagecenter/im/conversations/agentconversations":{"get":{"tags":["Message Center"],"summary":"Retrieves the unassigned or open conversations.","description":"Retrieves the unassigned or open conversations of the current customer service agent.","operationId":"getConversationsForAgent","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"status","in":"query","description":"Conversation status.","required":true,"schema":{"type":"string","enum":["open","unassigned"]}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/conversationList"}},"application/json":{"schema":{"$ref":"#/components/schemas/conversationList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/messagecenter/im/conversations/customerconversations":{"get":{"tags":["Message Center"],"summary":"Retrieves the conversations.","description":"Retrieves the conversations of the current customer.","operationId":"getConversationsForCustomer","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/conversationList"}},"application/json":{"schema":{"$ref":"#/components/schemas/conversationList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/messagecenter/im/conversations/{conversationId}/close":{"patch":{"tags":["Message Center"],"summary":"Closes an open conversation.","description":"Closes an open conversation and returns the conversation data.","operationId":"closeConversation","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"conversationId","in":"path","description":"Conversation identifier.","required":true,"schema":{"type":"string"},"example":"00001000"}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/conversation"}},"application/json":{"schema":{"$ref":"#/components/schemas/conversation"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/messagecenter/im/conversations/{conversationId}/messages":{"get":{"tags":["Message Center"],"summary":"Retrieves the messages of a specific conversation.","description":"Retrieves the messages of a specific conversation for the current customer or current customer support agent.","operationId":"getMessagesForConversation","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"conversationId","in":"path","description":"Conversation identifier.","required":true,"schema":{"type":"string"},"example":"00001000"}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/conversationMessageList"}},"application/json":{"schema":{"$ref":"#/components/schemas/conversationMessageList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/messagecenter/im/conversations/{conversationId}/pick":{"patch":{"tags":["Message Center"],"summary":"Picks an unassigned conversation.","description":"Picks an unassigned conversation and returns the conversation data.","operationId":"pickConversation","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"conversationId","in":"path","description":"Conversation identifier","required":true,"schema":{"type":"string"},"example":"00001000"}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/conversation"}},"application/json":{"schema":{"$ref":"#/components/schemas/conversation"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/orderApprovalPermissionTypes":{"get":{"tags":["Order Approval Permission Types"],"summary":"Retrieves the order approval permission types.","operationId":"getOrderApprovalPermissionTypes","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderApprovalPermissionTypeList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/orderforms":{"get":{"tags":["Order Forms"],"summary":"Retrieves all order forms.","description":"Retrieves all order forms for current user.","operationId":"retrieveAllOrderForms","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/OrderFormList"}},"application/json":{"schema":{"$ref":"#/components/schemas/OrderFormList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Order Forms"],"summary":"Creates an order form.","description":"Creates an order form. The following parameters are required: code, currency and entries.","operationId":"createAnOrderForm","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/OrderForm"}},"application/json":{"schema":{"$ref":"#/components/schemas/OrderForm"}}},"required":true},"responses":{"201":{"description":"Created"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/orderforms/{orderFormCode}":{"get":{"tags":["Order Forms"],"summary":"Retrieves an order form.","description":"Retrieves an order form by providing the order form code.","operationId":"retrieveAnOrderForm","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orderFormCode","in":"path","description":"The order form identifier. Example: 0000000","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/OrderForm"}},"application/json":{"schema":{"$ref":"#/components/schemas/OrderForm"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"put":{"tags":["Order Forms"],"summary":"Updates an order form.","description":"Updates a specific order form. You can update these attributes of an order form: code, description, currency, and entries (a list of product sku and quantity). If a new entries is provided in the payload, the existing entries will be overwritten by the new entries. If no new entries is provided, the existing entries will be kept in the new order form.","operationId":"updateAnOrderForm","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orderFormCode","in":"path","description":"The order form identifier. Example: 0000000","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderForm"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/OrderForm"}},"application/json":{"schema":{"$ref":"#/components/schemas/OrderForm"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Order Forms"],"summary":"Deletes an order form.","description":"Deletes a specific order form by providing the order form code.","operationId":"deleteAnOrderForm","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"orderFormCode","in":"path","description":"The order form identifier. Example: 0000000","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"No Content"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/orderforms/{orderFormCode}/cart":{"post":{"tags":["Order Forms"],"summary":"Adds products in an order form to the current cart.","description":"Adds products in a specific order form to the current cart.  If there are same products in the cart and in the order form, the quantities are updated in new the cart.","operationId":"addOrderFormToCart","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orderFormCode","in":"path","description":"The order form identifier. Example: 0000000","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"No Content"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/orders/{code}":{"get":{"tags":["Orders"],"summary":"Retrieves the order.","description":"Retrieves the details of the order using the Globally Unique Identifier (GUID) or the order code. To get entryGroup information, set fields value as follows: fields=entryGroups(BASIC), fields=entryGroups(DEFAULT), or fields=entryGroups(FULL).","operationId":"getOrder","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"code","in":"path","description":"Order GUID or order code.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Order"}},"application/json":{"schema":{"$ref":"#/components/schemas/Order"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/orgProducts/{productCode}":{"get":{"tags":["B2B Products"],"summary":"Retrieves product details.","description":"Retrieves the details of a single product using the product identifier.","operationId":"getOrgProduct","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"productCode","in":"path","description":"Product identifier.","required":true,"schema":{"type":"string"},"example":"000011111"}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Product"}},"application/json":{"schema":{"$ref":"#/components/schemas/Product"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/orgUsers":{"post":{"tags":["B2B Users"],"summary":"Creates a registration request for a B2B customer.","description":"Registers a B2B customer. Requires the following parameters: titleCode, firstName, lastName, email, message, verificationTokenId, verificationTokenCode. Only when OTP for registration is enabled, verificationTokenId and verificationTokenCode are required.","operationId":"createRegistrationRequest","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"sap-commerce-cloud-captcha-token","in":"header","description":"The user's response token returned by captcha provider. When the captchaCheckEnabled = true for the store, the field is mandatory and will call the provider to validate.","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrgUserRegistrationData"}}},"required":true},"responses":{"201":{"description":"Created"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/orgUsers/{userId}":{"get":{"tags":["B2B Users"],"summary":"Retrieves a B2B customer profile.","operationId":"getOrgUser","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/User"}},"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/orgUsers/{userId}/cartFromOrder":{"post":{"tags":["B2B Orders"],"summary":"Creates a cart from a previous order.","description":"Returns a list of modification applied to the new cart compared to original. e.g lower quantity was added","operationId":"createCartFromOrder","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body.","required":false,"schema":{"type":"string","enum":["BASIC","DEFAULT","FULL"]}},{"name":"orderCode","in":"query","description":"Order code.","required":true,"schema":{"type":"string"},"example":"000002000"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"201":{"description":"Created","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CartModificationList"}},"application/json":{"schema":{"$ref":"#/components/schemas/CartModificationList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/orgUsers/{userId}/carts/{cartId}/addresses/delivery":{"put":{"tags":["B2B Carts"],"summary":"Updates the delivery address for a cart.","description":"The updated address country must be a valid delivery country for the current base store.","operationId":"replaceOrgCartDeliveryAddress","parameters":[{"name":"addressId","in":"query","description":"The id of the address.","required":true,"schema":{"type":"string"}},{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Cart"}},"application/json":{"schema":{"$ref":"#/components/schemas/Cart"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/orgUsers/{userId}/carts/{cartId}/entries/":{"put":{"tags":["B2B Carts"],"summary":"Updates the quantity of the specified products in a cart.","description":"Adds specific products or overwrites the details of existing products in the cart, based either on the product code or the entry number. For existing products, attributes not provided in the request body will be defined again (set to null or default).","operationId":"replaceOrgCartEntries","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderEntryList"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CartModificationList"}},"application/json":{"schema":{"$ref":"#/components/schemas/CartModificationList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["B2B Carts"],"summary":"Creates additional quantity of a product in the cart.","description":"Creates additional quantity of a product in the cart. Use this endpoint to add the quantities of the existing products. To update the products’ quantities or add new products to the cart, use PUT /{baseSiteId}/orgUsers/{userId}/carts/{cartId}/entries/","operationId":"doAddOrgCartEntries","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderEntryList"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CartModificationList"}},"application/json":{"schema":{"$ref":"#/components/schemas/CartModificationList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"409":{"description":"Conflict","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/orgUsers/{userId}/orders":{"post":{"tags":["B2B Orders"],"summary":"Creates a B2B order.","description":"Creates a B2B order. By default the payment type is ACCOUNT. Set payment type to CARD if placing an order using credit card.","operationId":"placeOrgOrder","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"query","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"},"example":"00000110"},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"termsChecked","in":"query","description":"Whether terms were accepted or not.","required":true,"schema":{"type":"boolean"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Order"}},"application/json":{"schema":{"$ref":"#/components/schemas/Order"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/orgUsers/{userId}/orgUnits/orders":{"get":{"tags":["B2B Orders"],"summary":"Retrieves the order history for the customer's organization branch.","description":"Retrieves the order history of a default organization branch for a base site. The response may display the results across multiple pages, when applicable.","operationId":"getUserBranchOrderHistory","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"filters","in":"query","description":"Serialized filters applied to the query in the following format: ::facetKey1:facetValue1:facetKey2:facetValue2. Correct values for facetKey are 'user' and 'unit'.","required":false,"schema":{"type":"string"}},{"name":"pageSize","in":"query","description":"The number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20}},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string"}},{"name":"statuses","in":"query","description":"Filters only certain order statuses. For example, statuses=CANCELLED,CHECKED_VALID would only return orders with status CANCELLED or CHECKED_VALID.","required":false,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/OrderHistoryList"}},"application/json":{"schema":{"$ref":"#/components/schemas/OrderHistoryList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/orgUsers/{userId}/orgUnits/orders/{code}":{"get":{"tags":["B2B Orders"],"summary":"Retrieves the order from the customer's organization branch.","description":"Retrieves the details of the order using a unique order code in the customer's default organization branch. To get entryGroup information, set fields value as follows: fields=entryGroups(BASIC), fields=entryGroups(DEFAULT), or fields=entryGroups(FULL).","operationId":"getBranchOrder","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"code","in":"path","description":"Order code.","required":true,"schema":{"type":"string"},"example":"00001000"},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Order"}},"application/json":{"schema":{"$ref":"#/components/schemas/Order"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/orgUsers/{userId}/replenishmentOrders":{"post":{"tags":["B2B Orders"],"summary":"Creates replenishment orders.","description":"Creates and schedules replenishment orders. By default, the payment type is ACCOUNT. Set payment type to CARD if placing an order using credit card.","operationId":"createReplenishmentOrder","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"query","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"},"example":"00000110"},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"termsChecked","in":"query","description":"Whether terms were accepted or not.","required":true,"schema":{"type":"boolean"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ScheduleReplenishmentForm"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReplenishmentOrder"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/passwordRestoreToken":{"post":{"tags":["Forgotten Passwords"],"summary":"Creates and sends a token to restore a forgotten password.","description":"Creates and sends a token that is used to restore a forgotten password in a following asynchronous customer communication. This endpoint is added in the 2211.24 update.","operationId":"sendPasswordRestoreToken","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PasswordRestoreTokenInput"}}},"required":true},"responses":{"201":{"description":"Created"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/paymentmodes":{"get":{"tags":["Payment Modes"],"summary":"Retrieves the available payment modes.","description":"Retrieves the payment modes defined for the base store.","operationId":"getPaymentModes","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PaymentModeList"}},"application/json":{"schema":{"$ref":"#/components/schemas/PaymentModeList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/paymenttypes":{"get":{"tags":["B2B Miscs"],"summary":"Retrieves the available payment types.","description":"Retrieves the payment types that are available during the B2B checkout process.","operationId":"getPaymentTypes","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/B2BPaymentTypeList"}},"application/json":{"schema":{"$ref":"#/components/schemas/B2BPaymentTypeList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/productAvailabilities":{"get":{"tags":["Product Availability"],"summary":"Retrieves availability information for a list of products.","description":"Retrieves the stock availability for the requested products in the requested units. This endpoint is added in the 2211.30 update.”","operationId":"getProductAvailability","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"filters","in":"query","description":"Product codes and their respective units in which the availability should be retrieved. In the following format - \n\nproductCodeA:unitCodeA,unitCodeB;productCodeB:unitCodeA,unitCodeB.\n\n Example - 3318057_A:EA,PC;4112097_B:EA","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SAPAvailability"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/errorList"},"example":{"errors":[{"message":"Base site electronicsd doesn't exist","type":"InvalidResourceError"}]}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/errorList"},"example":{"errors":[{"type":"InvalidTokenError","message":"Invalid access token"}]}}}},"403":{"description":"Forbidden. Have no access to this method","content":{"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/errorList"},"example":{"errors":[{"message":"System not maintain an unit for product 1934793 , please check!","type":"SystemError"}]}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/products/expressupdate":{"get":{"tags":["Products"],"summary":"Retrieves products that were added to the express update feed.","description":"Retrieves products that were added to the express update feed. Only the properties that were updated after the specified timestamp are returned. The queue is cleared using a defined cronjob.","operationId":"getExpressUpdateProducts","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"catalog","in":"query","description":"Only products from this catalog are returned. Format: catalogId:catalogVersion.","required":false,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"timestamp","in":"query","description":"Only products that are more recent than the given parameter are returned. The value should be in ISO-8601 format: 2018-01-09T16:28:45+0000.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ProductExpressUpdateElementList"}},"application/json":{"schema":{"$ref":"#/components/schemas/ProductExpressUpdateElementList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/products/search":{"get":{"tags":["Products"],"summary":"Retrieves a list of products.","description":"Retrieves a list of products and related product search data, such as available attributes， available facets, available sorting, and spelling suggestions. To enable spelling suggestions, you need to have indexed properties configured to be used for spell checking.","operationId":"getProducts","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"filters","in":"query","description":"Filter conditions that combine attribute keys and attribute values. The attributes are the fields or properties for the Product type configured in the search index type. The format is <attributeKey1>:<attributeValue1>:...:<attributeKeyN>:<attributeValueN>.","required":false,"schema":{"type":"string"}},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20}},{"name":"query","in":"query","description":"Formatted query string. It contains query criteria like free text search, facet. The format is <freeTextSearch>:<sort>:<facetKey1>:<facetValue1>:...:<facetKeyN>:<facetValueN>.","required":false,"schema":{"type":"string"}},{"name":"searchQueryContext","in":"query","description":"Name of the search query template to be used in the search query. Examples: DEFAULT, SUGGESTIONS.","required":false,"schema":{"type":"string"}},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ProductSearchPage"}},"application/json":{"schema":{"$ref":"#/components/schemas/ProductSearchPage"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"head":{"tags":["Products"],"summary":"Retrieves the total number of products.","description":"In the response header, the \"x-total-count\" property indicates the total number of products for the query.","operationId":"countProducts","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"query","in":"query","description":"Formatted query string. It contains query criteria like free text search, facet. The format is <freeTextSearch>:<sort>:<facetKey1>:<facetValue1>:...:<facetKeyN>:<facetValueN>.","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/products/suggestions":{"get":{"tags":["Products"],"summary":"Retrieves the available suggestions.","description":"Retrieves the suggestions related to a specified term and limits the results according to the value of the max parameter.","operationId":"getSuggestions","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"max","in":"query","description":"Maximum number of results.","required":false,"schema":{"type":"integer","format":"int32","default":10}},{"name":"term","in":"query","description":"Specified term. The suggestions will be given based on it.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/SuggestionList"}},"application/json":{"schema":{"$ref":"#/components/schemas/SuggestionList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/products/{productCode}":{"get":{"tags":["Products"],"summary":"Retrieves product details.","description":"Retrieves the details of a single product using the product identifier.","operationId":"getProduct","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"productCode","in":"path","description":"Product identifier.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Product"}},"application/json":{"schema":{"$ref":"#/components/schemas/Product"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/products/{productCode}/configurator/textfield":{"get":{"tags":["Product Configurator Textfield Template"],"summary":"Get textfield configuration","description":"Returns list of textfield configuration elements.","operationId":"getConfigurationByProductCode","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"productCode","in":"path","description":"Product identifier.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ConfigurationInfoList"}},"application/json":{"schema":{"$ref":"#/components/schemas/ConfigurationInfoList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/products/{productCode}/configurators/ccpconfigurator":{"get":{"tags":["Product Configurator CCP"],"summary":"Gets the default product configuration for a complex product","description":"Returns the default product configuration for a given complex product. This means that a new instance of the configuration runtime object is created that is equipped with the default values from the configuration model. This API always returns the _entire_ group hierarchy, whereas it's capable of both including all attributes or only those for the first group. This is controlled by query attribute provideAllAttributes","operationId":"getDefaultProductConfiguration","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"configIdTemplate","in":"query","description":"If this parameter is provided, the template configuration values will be applied to the default configuration","required":false,"schema":{"type":"string","default":""}},{"name":"expMode","in":"query","description":"If this parameter is provided and its value is true, the system tries to execute the request in expert mode (only possible if the current user belongs to group 'sapproductconfigexpmodegroup'","required":false,"schema":{"type":"boolean","default":false}},{"name":"forceReset","in":"query","description":"If this parameter is provided and its value is true, the system will force the creation of a new configuration independent of an existing configuration","required":false,"schema":{"type":"boolean","default":false}},{"name":"productCode","in":"path","description":"Product code","required":true,"schema":{"type":"string"}},{"name":"provideAllAttributes","in":"query","description":"If this parameter is provided and its value is true, attributes for all groups are returned. Otherwise, attributes only for the first group are considered.","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CCPConfiguration"}},"application/json":{"schema":{"$ref":"#/components/schemas/CCPConfiguration"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/products/{productCode}/references":{"get":{"tags":["Products"],"summary":"Retrieves the product references.","description":"Retrieves the references using the product code and reference type.","operationId":"getProductReferences","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":2147483647}},{"name":"productCode","in":"path","description":"Product identifier.","required":true,"schema":{"type":"string"}},{"name":"referenceType","in":"query","description":"Comma-separated list of reference types. If not specified, all types of product references will be used. Example: ACCESSORIES,BASE_PRODUCT.","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ProductReferenceList"}},"application/json":{"schema":{"$ref":"#/components/schemas/ProductReferenceList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/products/{productCode}/reviews":{"get":{"tags":["Products"],"summary":"Retrieves the reviews of a product.","description":"Retrieves all the reviews for a product. To limit the number of reviews returned, use the maxCount parameter.","operationId":"getProductReviews","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"maxCount","in":"query","description":"Maximum number of reviews.","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"productCode","in":"path","description":"Product identifier.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ReviewList"}},"application/json":{"schema":{"$ref":"#/components/schemas/ReviewList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Products"],"summary":"Creates a customer review as an anonymous user.","description":"Creates a customer review for a product as an anonymous user.","operationId":"createProductReview","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"productCode","in":"path","description":"Product identifier.","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Review"}},"application/json":{"schema":{"$ref":"#/components/schemas/Review"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Review"}},"application/json":{"schema":{"$ref":"#/components/schemas/Review"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/products/{productCode}/stock":{"get":{"tags":["Products"],"summary":"Retrieves the stock level of a product.","description":"The stock levels are sorted by distance from the specified location, which is defined using the free-text location parameter or the longitude and latitude parameters. Either location parameter or longitude and latitude parameters are required.","operationId":"getLocationProductStock","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"latitude","in":"query","description":"Coordinate that specifies the north-south position of a point on the Earth's surface.","required":false,"schema":{"type":"number","format":"double"}},{"name":"location","in":"query","description":"Free-text location","required":false,"schema":{"type":"string"}},{"name":"longitude","in":"query","description":"Coordinate that specifies the east-west position of a point on the Earth's surface.","required":false,"schema":{"type":"number","format":"double"}},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20}},{"name":"productCode","in":"path","description":"Product identifier.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/StoreFinderStockSearchPage"}},"application/json":{"schema":{"$ref":"#/components/schemas/StoreFinderStockSearchPage"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"head":{"tags":["Products"],"summary":"Retrieves the total number of stock levels of a product.","description":"In the response header, the \"x-total-count\" property indicates the total number of stock levels of a product. Either location parameter or longitude and latitude parameters are required.","operationId":"countProductStockByLocation","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"latitude","in":"query","description":"Coordinate that specifies the north-south position of a point on the Earth's surface.","required":false,"schema":{"type":"number","format":"double"}},{"name":"location","in":"query","description":"Free-text location","required":false,"schema":{"type":"string"}},{"name":"longitude","in":"query","description":"Coordinate that specifies the east-west position of a point on the Earth's surface.","required":false,"schema":{"type":"number","format":"double"}},{"name":"productCode","in":"path","description":"Product identifier.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/products/{productCode}/stock/{storeName}":{"get":{"tags":["Products"],"summary":"Retrieves the stock level of a product.","description":"Retrieves the stock level of a product for the store.","operationId":"getStoreProductStock","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"productCode","in":"path","description":"Product identifier.","required":true,"schema":{"type":"string"}},{"name":"storeName","in":"path","description":"Store identifier.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Stock"}},"application/json":{"schema":{"$ref":"#/components/schemas/Stock"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/promotions":{"get":{"tags":["Promotions"],"summary":"Retrieves the promotions.","description":"Retrieves the promotions defined for a current base site. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers and therefore some of them are currently not compatible with the new promotion engine.","operationId":"getPromotions","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"BASIC"}},{"name":"promotionGroup","in":"query","description":"Only promotions from this group are returned","required":false,"schema":{"type":"string"}},{"name":"type","in":"query","description":"Type of promotions that should be returned. Possible values are: <ul><li>all: All available promotions are returned. </li><li>product: Only product promotions are returned. </li><li>order: Only order promotions are returned. </li></ul>","required":true,"schema":{"type":"string","enum":["all","product","order"]}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PromotionList"}},"application/json":{"schema":{"$ref":"#/components/schemas/PromotionList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/promotions/{code}":{"get":{"tags":["Promotions"],"summary":"Retrieves the promotion.","description":"Retrieves the details of a promotion using the specified code. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers and therefore some of them are currently not compatible with the new promotion engine.","operationId":"getPromotion","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"code","in":"path","description":"Promotion identifier (code)","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"BASIC"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Promotion"}},"application/json":{"schema":{"$ref":"#/components/schemas/Promotion"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/punchout/cxml/order":{"post":{"tags":["PunchOut"],"summary":"Handles a purchase order request from the PunchOut provider.","description":"A purchase order is a formal request from a buying organization to this CXML supplier to fulfill a contract. ","operationId":"createPunchOutPurchaseOrderRequest","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CXML"}},"text/xml":{"schema":{"$ref":"#/components/schemas/CXML"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CXML"}},"text/xml":{"schema":{"$ref":"#/components/schemas/CXML"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/punchout/cxml/profile":{"post":{"tags":["PunchOut"],"summary":"Creates a PunchOut profile request.","description":"Handles a Profile request from the Punch Out provider. It returns a list of URLs that provide basic information about the Punch Out Transactions supported by this CXML server.","operationId":"createPunchOutProfileRequest","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"host","in":"header","description":"Commerce API host address.","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CXML"}},"text/xml":{"schema":{"$ref":"#/components/schemas/CXML"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CXML"}},"text/xml":{"schema":{"$ref":"#/components/schemas/CXML"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/punchout/cxml/setup":{"post":{"tags":["PunchOut"],"summary":"Creates a new PunchOut session.","description":"Used to create a new Punch Out session by authenticating a Punch Out user.This happens when the user of the Procurement system selects a Punch Out Item. ","operationId":"createPunchOutSetUpRequest","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CXML"}},"text/xml":{"schema":{"$ref":"#/components/schemas/CXML"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CXML"}},"text/xml":{"schema":{"$ref":"#/components/schemas/CXML"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/punchout/sessions/{sid}":{"get":{"tags":["PunchOut"],"summary":"Retrieves information about PunchOut session.","description":"Return the user ID, cart ID, token, PunchOut level, PunchOut operation and selected item.","operationId":"getPunchOutSessionInfo","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"sid","in":"path","description":"PunchOut session identifier.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PunchOutSessionInfo"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/punchout/sessions/{sid}/requisition":{"get":{"tags":["PunchOut"],"summary":"Retrieves the order message and URL for the procurement system.","description":"Return the order message in base64 encoded cXML format and the url that will be used to submit the order.","operationId":"getRequisitionFormData","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"discardCartEntries","in":"query","description":"Requisition form that generates data with or without cart entries. If true, it will generate data with an empty cart. If false, it will generate data with cart entries.","required":false,"schema":{"type":"boolean","default":false}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"sid","in":"path","description":"PunchOut session identifier.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RequisitionFormData"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/regions/{regionId}/cities":{"get":{"tags":["Cities"],"summary":"Retrieves a list of cities for a region.","operationId":"getCities","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"regionId","in":"path","description":"Region identifier.","required":true,"schema":{"type":"string"},"example":"00000001"}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CityList"}},"application/json":{"schema":{"$ref":"#/components/schemas/CityList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/resetpassword":{"post":{"tags":["Forgotten Passwords"],"summary":"Resets a forgotten password.","description":"Reset password after customer's clicked forgotten password link. A new password needs to be provided.","operationId":"doResetPassword","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ResetPassword"}},"application/json":{"schema":{"$ref":"#/components/schemas/ResetPassword"}}},"required":true},"responses":{"202":{"description":"Accepted"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/stores":{"get":{"tags":["Stores"],"summary":"Retrieves the store locations.","description":"Retrieves the store locations that are near the location specified in a query or the latitude and longitude parameters.","operationId":"getStoreLocations","parameters":[{"name":"accuracy","in":"query","description":"Accuracy in meters.","required":false,"schema":{"type":"number","format":"double","default":0.0}},{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"latitude","in":"query","description":"Coordinate that specifies the north-south position of a point on the Earth's surface.","required":false,"schema":{"type":"number","format":"double"}},{"name":"longitude","in":"query","description":"Coordinate that specifies the east-west position of a point on the Earth's surface.","required":false,"schema":{"type":"number","format":"double"}},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20}},{"name":"query","in":"query","description":"Location in plain text. Example: USA or New York City","required":false,"schema":{"type":"string"}},{"name":"radius","in":"query","description":"Radius in meters. Max value: 40075000.0 (Earth's perimeter).","required":false,"schema":{"type":"number","format":"double","default":100000.0}},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string","default":"asc"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/StoreFinderSearchPage"}},"application/json":{"schema":{"$ref":"#/components/schemas/StoreFinderSearchPage"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"head":{"tags":["Stores"],"summary":"Retrieves a header that indicates the number of store locations.","description":"In the response header, the \"x-total-count\" indicates the number of all stores that are near the location specified in the query or based on latitude and longitude.","operationId":"countStoreLocations","parameters":[{"name":"accuracy","in":"query","description":"Accuracy in meters.","required":false,"schema":{"type":"number","format":"double","default":0.0}},{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"latitude","in":"query","description":"Coordinate that specifies the north-south position of a point on the Earth's surface.","required":false,"schema":{"type":"number","format":"double"}},{"name":"longitude","in":"query","description":"Coordinate that specifies the east-west position of a point on the Earth's surface.","required":false,"schema":{"type":"number","format":"double"}},{"name":"query","in":"query","description":"Location in plain text. Example: USA or New York City","required":false,"schema":{"type":"string"}},{"name":"radius","in":"query","description":"Radius in meters. Max value: 40075000.0 (Earth's perimeter).","required":false,"schema":{"type":"number","format":"double","default":100000.0}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/stores/country/{countryIso}":{"get":{"tags":["Stores"],"summary":"Retrieves the store locations in a country.","description":"Retrieves the store locations that are in the specified country.","operationId":"getStoresByCountry","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"countryIso","in":"path","description":"Country ISO code.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PointOfServiceList"}},"application/json":{"schema":{"$ref":"#/components/schemas/PointOfServiceList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/stores/country/{countryIso}/region/{regionIso}":{"get":{"tags":["Stores"],"summary":"Retrieves the store locations.","description":"Retrieves the store locations in the specified country and region.","operationId":"getStoresByCountryAndRegion","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"countryIso","in":"path","description":"Country ISO code.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"regionIso","in":"path","description":"Region ISO code.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PointOfServiceList"}},"application/json":{"schema":{"$ref":"#/components/schemas/PointOfServiceList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/stores/storescounts":{"get":{"tags":["Stores"],"summary":"Retrieves store counts.","description":"Retrieves store counts per country and region.","operationId":"getLocationCounts","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/StoreCountList"}},"application/json":{"schema":{"$ref":"#/components/schemas/StoreCountList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/stores/{storeId}":{"get":{"tags":["Stores"],"summary":"Retrieves a store location.","description":"Retrieves a store location using its unique name.","operationId":"getStoreLocation","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"storeId","in":"path","description":"Store identifier (currently store name)","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PointOfService"}},"application/json":{"schema":{"$ref":"#/components/schemas/PointOfService"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/ticketCategories":{"get":{"tags":["Tickets"],"summary":"Retrieves the ticket categories.","description":"Retrieves a list of ticket categories from which customers can choose.","operationId":"getTicketCategories","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TicketCategoryList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/titles":{"get":{"tags":["Miscs"],"summary":"Retrieves the localized titles.","operationId":"getTitles","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/TitleList"}},"application/json":{"schema":{"$ref":"#/components/schemas/TitleList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users":{"post":{"tags":["Users"],"summary":" Registers a customer.","description":"Registers a customer. Requires the following parameters: login, password, firstName, lastName, titleCode, verificationTokenId, verificationTokenCode. Only when OTP for registration is enabled, verificationTokenId and verificationTokenCode are required.","operationId":"createUser","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"sap-commerce-cloud-captcha-token","in":"header","description":"The user's response token returned by captcha provider. When the captchaCheckEnabled = true for the store, the field is mandatory and will call the provider to validate.","schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/UserSignUp"}},"application/json":{"schema":{"$ref":"#/components/schemas/UserSignUp"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/User"}},"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}":{"get":{"tags":["Users"],"summary":"Retrieves the customer profile.","operationId":"getUser","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/User"}},"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"put":{"tags":["Users"],"summary":"Updates the customer profile.","description":"Updates customer profile. Attributes not provided in the request body will be defined again (set to null or default).","operationId":"replaceUser","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/User"}},"application/json":{"schema":{"$ref":"#/components/schemas/User"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Users"],"summary":"Deletes the customer profile.","operationId":"removeUser","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"patch":{"tags":["Users"],"summary":"Updates customer profile","description":"Updates customer profile. Only attributes provided in the request body will be changed.","operationId":"updateUser","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/User"}},"application/json":{"schema":{"$ref":"#/components/schemas/User"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/addresses":{"get":{"tags":["Address"],"summary":"Retrieves the addresses of a customer.","description":"Retrieves a list of all the addresses associated with a customer.","operationId":"getAddresses","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"List of customer's addresses","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/AddressList"}},"application/json":{"schema":{"$ref":"#/components/schemas/AddressList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Address"],"summary":"Creates a new address.","description":"Creates a new address with detailed information provided.","operationId":"createAddress","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Address"}},"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Address"}},"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/addresses/verification":{"post":{"tags":["Address"],"summary":"Verifies the address.","description":"Validates the address of a customer.","operationId":"validateAddress","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Address"}},"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/AddressValidation"}},"application/json":{"schema":{"$ref":"#/components/schemas/AddressValidation"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/addresses/{addressId}":{"get":{"tags":["Address"],"summary":"Retrieves the address details of a customer.","description":"Returns detailed information about address with a given id.","operationId":"getAddress","parameters":[{"name":"addressId","in":"path","description":"Address identifier.","required":true,"schema":{"type":"string"},"example":"00000001"},{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Address"}},"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"put":{"tags":["Address"],"summary":"Updates the address of a customer.","description":"Updates the address. Attributes not provided in the request will be defined again (set to null or default).","operationId":"replaceAddress","parameters":[{"name":"addressId","in":"path","description":"Address identifier.","required":true,"schema":{"type":"string"},"example":"00000001"},{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Address"}},"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Address"],"summary":"Deletes the address of a customer.","description":"Deletes the address of a customer, which means the address records are erased.","operationId":"removeAddress","parameters":[{"name":"addressId","in":"path","description":"Address identifier.","required":true,"schema":{"type":"string"},"example":"00000001"},{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"patch":{"tags":["Address"],"summary":"Updates the address","description":"Updates the address. Only attributes provided in the request body will be changed.","operationId":"updateAddress","parameters":[{"name":"addressId","in":"path","description":"Address identifier.","required":true,"schema":{"type":"string"},"example":"00000001"},{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Address"}},"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/availableOrgUnitNodes":{"get":{"tags":["Organizational Unit Management"],"summary":"Retrieves the available organizational unit nodes.","operationId":"getAvailableOrgUnitNodes","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/B2BUnitNodeList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/budgets":{"get":{"tags":["Budget Management"],"summary":"Retrieves the list of budgets.","description":"Retrieves the list of budgets available to a customer and base store. The response may display the results across multiple pages, when applicable.","operationId":"getBudgets","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20},"example":20},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string","default":"code"},"example":"name"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BudgetList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Budget Management"],"summary":"Creates a new budget.","operationId":"createBudget","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Budget"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Budget"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/budgets/{budgetCode}":{"get":{"tags":["Budget Management"],"summary":"Retrieves the details of a budget.","description":"Retrieves the budget details that are available to the user for a base site.","operationId":"getBudget","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"budgetCode","in":"path","description":"Budget GUID or budget code.","required":true,"schema":{"type":"string"},"example":"Weekly_2_5K_USD"},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Budget"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"patch":{"tags":["Budget Management"],"summary":"Updates the budget.","description":"Updates the budget. Only the attributes provided in the request body will be changed.","operationId":"updateBudget","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"budgetCode","in":"path","description":"Budget GUID or budget code.","required":true,"schema":{"type":"string"},"example":"Weekly_2_5K_USD"},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Budget"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Budget"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts":{"get":{"tags":["Carts"],"summary":"Retrieves the carts of a customer.","description":"Retrieves a list of all the carts associated with a customer.","operationId":"getCarts","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Pagination for savedCartsOnly. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"pageSize","in":"query","description":"Number of results returned per page if the savedCartsOnly parameter is set to true. Default value: 20.","required":false,"schema":{"type":"integer","format":"int32","default":20}},{"name":"savedCartsOnly","in":"query","description":"If the value is true, only saved carts are returned.","required":false,"schema":{"type":"boolean","default":false}},{"name":"sort","in":"query","description":"Sorting method applied to the return results if the savedCartsOnly parameter is set to true.","required":false,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CartList"}},"application/json":{"schema":{"$ref":"#/components/schemas/CartList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Carts"],"summary":"Creates or restore a cart for a user.","description":"Creates a new cart or restores an anonymous cart as a user's cart (if an old Cart Id is given in the request).","operationId":"createCart","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"oldCartId","in":"query","description":"Anonymous cart GUID.","required":false,"schema":{"type":"string"}},{"name":"toMergeCartGuid","in":"query","description":"The cart GUID that will be merged with the anonymous cart.","required":false,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"201":{"description":"Created","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Cart"}},"application/json":{"schema":{"$ref":"#/components/schemas/Cart"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/current":{"get":{"tags":["B2B Carts"],"summary":"Gets the current cart.","description":"Retrieves the current cart.  To get entryGroup information, set fields value as follows: fields=entryGroups(BASIC), fields=entryGroups(DEFAULT), or fields=entryGroups(FULL).","operationId":"getCurrentOrgCart","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Cart"}},"application/json":{"schema":{"$ref":"#/components/schemas/Cart"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}":{"get":{"tags":["Carts"],"summary":"Retrieves a cart.","description":"Retrieves a cart using the cart identifier. To get entryGroup information, set fields value as follows: fields=entryGroups(BASIC), fields=entryGroups(DEFAULT), or fields=entryGroups(FULL).","operationId":"getCart","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Cart"}},"application/json":{"schema":{"$ref":"#/components/schemas/Cart"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Carts"],"summary":"Deletes the cart.","operationId":"removeCart","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/accessCode":{"post":{"tags":["Carts"],"summary":"Generates an access code for the cart.","description":"Generates an access code for the specified cart. An access code is composed by a payload part and a signature part.","operationId":"getCartIdAccessCode","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SAPAccessCode"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/addresses/billing":{"put":{"tags":["Cart Addresses"],"summary":"Create or update the billing address of the cart.","description":"Creates or updates the billing address of the cart.","operationId":"updateBillingAddress","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/addresses/delivery":{"put":{"tags":["Cart Addresses"],"summary":"Updates the delivery address for a cart.","description":"The updated address country must be a valid delivery country for the current base store.","operationId":"replaceCartDeliveryAddress","parameters":[{"name":"addressId","in":"query","description":"Address identifier","required":true,"schema":{"type":"string"}},{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Cart Addresses"],"summary":"Creates a delivery address for the cart.","operationId":"createCartDeliveryAddress","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Address"}},"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Address"}},"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Cart Addresses"],"summary":"Deletes the delivery address.","description":"Deletes the delivery address associated with a cart.","operationId":"removeCartDeliveryAddress","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/applyVoucher":{"post":{"tags":["Cart Promotions"],"summary":"Assigns a voucher to the cart.","description":"Assigns a voucher to the cart using the voucher identifier. This endpoint is added in the 2211.28 update.","operationId":"applyCartVoucher","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SAPVoucherRequest"}}},"required":true},"responses":{"204":{"description":"No Content"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/bundles":{"post":{"tags":["Bundles"],"summary":"Creates a bundle in a cart.","description":"Creates a bundle in a cart once the productCode, its quantity, and a bundle templateId are provided.","operationId":"createBundle","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BundleStarter"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CartModification"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/clonesavedcart":{"post":{"tags":["Save Cart"],"summary":"Creates a clone of a saved cart.","description":"Creates a clone of a saved cart. Customers can provide a name and a description for the cloned cart even though they aren't mandatory parameters. This endpoint is deprecated in the 2211.28 update and its deletion is planned. Please use '/copySavedCart' instead.","operationId":"doCartClone","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"description","in":"query","description":"Description of the cloned cart.","required":false,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"name","in":"query","description":"Name of the cloned cart.","required":false,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/SaveCartResult"}},"application/json":{"schema":{"$ref":"#/components/schemas/SaveCartResult"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"deprecated":true,"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/consolidate":{"get":{"tags":["Carts"],"summary":"Retrieves a list of pickup options.","description":"Retrieves a list of stores that have all the cart entries in stock and ready for pickup.\n\nNote: The response returns an empty list if no store has all the products in stock or if the products are all associated with the same pickup location.\n","operationId":"getConsolidatedPickupLocations","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PointOfServiceList"}},"application/json":{"schema":{"$ref":"#/components/schemas/PointOfServiceList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Carts"],"summary":"Creates a consolidated pickup location.","description":"Creates the store location where the customer will pick up all the products.\n\nNote: If any product is out of stock at the specified location, this product is removed from the cart.\n","operationId":"createConsolidatedPickupLocation","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"storeName","in":"query","description":"The name of the store where items will be picked up","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CartModificationList"}},"application/json":{"schema":{"$ref":"#/components/schemas/CartModificationList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/copySavedCart":{"post":{"tags":["Save Cart"],"summary":"Creates a clone of a saved cart.","description":"Creates a clone of a saved cart. Customers can provide a name and a description for the cloned cart even though they aren't mandatory parameters. This endpoint is added in the 2211.28 update.","operationId":"copySavedCart","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SAPSavedCartRequest"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/SaveCartResult"}},"application/json":{"schema":{"$ref":"#/components/schemas/SaveCartResult"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/costcenter":{"put":{"tags":["B2B Carts"],"summary":"Updates the cost center for the cart.","description":"Updates the cost center for the cart during the checkout process.","operationId":"replaceOrgCartCostCenter","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"costCenterId","in":"query","description":"Cost center identifier.","required":true,"schema":{"type":"string"},"example":"00000001"},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Cart"}},"application/json":{"schema":{"$ref":"#/components/schemas/Cart"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/deliverymode":{"get":{"tags":["Cart Delivery Modes"],"summary":"Retrieves the delivery mode for the cart.","description":"Retrieves information about the delivery mode selected for the cart, including the delivery mode code, name, cost, and so on.","operationId":"getCartDeliveryMode","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/DeliveryMode"}},"application/json":{"schema":{"$ref":"#/components/schemas/DeliveryMode"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"put":{"tags":["Cart Delivery Modes"],"summary":"Updates the delivery mode for the cart.","description":"Updates the delivery mode details for the cart based on the specified delivery mode identifier.","operationId":"replaceCartDeliveryMode","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"deliveryModeId","in":"query","description":"Delivery mode identifier (code)","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Cart Delivery Modes"],"summary":"Deletes the delivery mode from the cart.","operationId":"removeCartDeliveryMode","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/deliverymodes":{"get":{"tags":["Cart Delivery Modes"],"summary":"Retrieves the delivery modes for the current store and delivery address.","description":"Retrieves the delivery modes defined for the current base store and the cart delivery address. If the cart does not have a delivery address, an empty list will be returned.","operationId":"getCartDeliveryModes","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/DeliveryModeList"}},"application/json":{"schema":{"$ref":"#/components/schemas/DeliveryModeList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/email":{"put":{"tags":["Carts"],"summary":"Assigns an email address to the cart.","description":"Assigns an email to the cart. This endpoint is deprecated in the 2211.28 update and its deletion is planned. Please use '/setEmail' instead.","operationId":"replaceCartGuestUser","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"email","in":"query","description":"Email of the guest user. It will be used during the checkout process.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"deprecated":true,"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/entries":{"get":{"tags":["Cart Entries"],"summary":"Retrieves the cart entries.","description":"Retrieves a list of cart entries with the product data.","operationId":"getCartEntries","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/OrderEntryList"}},"application/json":{"schema":{"$ref":"#/components/schemas/OrderEntryList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Cart Entries"],"summary":"Assigns a product to the cart.","description":"Adds a product to the specified cart.","operationId":"createCartEntry","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/OrderEntry"}},"application/json":{"schema":{"$ref":"#/components/schemas/OrderEntry"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CartModification"}},"application/json":{"schema":{"$ref":"#/components/schemas/CartModification"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"409":{"description":"Conflict","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/entries/ccpconfigurator":{"post":{"tags":["Product Configurator CCP Cart Integration"],"summary":"Adds a product configuration to the cart","description":"Adds a product configuration to the cart. The root product of the configuration is added as a cart entry- Additionally, the configuration is attached to the new entry.","operationId":"createCartEntryConfiguration","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CCPOrderEntry"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CartModification"}},"application/json":{"schema":{"$ref":"#/components/schemas/CartModification"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/entries/configurator/textfield":{"post":{"tags":["Product Configurator Textfield Template"],"summary":"Adds a product to the cart.","description":"Adds a textfield configurator product to the cart.","operationId":"addCartEntry","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration (list of fields, which should be returned in response)","required":false,"schema":{"type":"string","enum":["BASIC","DEFAULT","FULL"]}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/OrderEntry"}},"application/json":{"schema":{"$ref":"#/components/schemas/OrderEntry"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CartModification"}},"application/json":{"schema":{"$ref":"#/components/schemas/CartModification"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/entries/{entryNumber}":{"get":{"tags":["Cart Entries"],"summary":"Retrieves the details of a cart entry.","operationId":"getCartEntry","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"entryNumber","in":"path","description":"Each entry in a cart has an entry number. Cart entries are numbered in ascending order, starting with zero.","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/OrderEntry"}},"application/json":{"schema":{"$ref":"#/components/schemas/OrderEntry"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"put":{"tags":["Cart Entries"],"summary":"Updates the details of a cart entry.","description":"Updates the quantity of a single cart entry and the details of the pickup store. Attributes not provided in the request will be defined again (set to null or default)","operationId":"replaceCartEntry","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"entryNumber","in":"path","description":"Each entry in a cart has an entry number. Cart entries are numbered in ascending order, starting with zero.","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/OrderEntry"}},"application/json":{"schema":{"$ref":"#/components/schemas/OrderEntry"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CartModification"}},"application/json":{"schema":{"$ref":"#/components/schemas/CartModification"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Cart Entries"],"summary":"Deletes the cart entry.","operationId":"removeCartEntry","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"entryNumber","in":"path","description":"Each entry in a cart has an entry number. Cart entries are numbered in ascending order, starting with zero.","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"patch":{"tags":["Cart Entries"],"summary":"Updates the details of a cart entry.","description":"Updates the quantity of a single cart entry and the details of the pickup store.","operationId":"updateCartEntry","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"entryNumber","in":"path","description":"Each entry in a cart has an entry number. Cart entries are numbered in ascending order, starting with zero.","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/OrderEntry"}},"application/json":{"schema":{"$ref":"#/components/schemas/OrderEntry"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CartModification"}},"application/json":{"schema":{"$ref":"#/components/schemas/CartModification"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/entries/{entryNumber}/ccpconfigurator":{"get":{"tags":["Product Configurator CCP Cart Integration"],"summary":"Gets the configuration of a cart entry","description":"Returns the configuration of a cart entry and ensures that the entry can later be updated with the configuration and its changes.","operationId":"getCartEntryConfiguration","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"entryNumber","in":"path","description":"Each entry in a cart has an entry number. Cart entries are numbered in ascending order, starting with zero.","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"expMode","in":"query","description":"If this parameter is provided and its value is true, the system tries to execute the request in expert mode (only possible if the current user belongs to group 'sapproductconfigexpmodegroup'.","required":false,"schema":{"type":"boolean","default":false}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CCPConfiguration"}},"application/json":{"schema":{"$ref":"#/components/schemas/CCPConfiguration"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"put":{"tags":["Product Configurator CCP Cart Integration"],"summary":"Updates the configuration of a cart entry","description":"Updates the configuration. The entire configuration attached to the cart entry is replaced by the configuration specified in the request body. Possible only if the configuration change has been initiated by the corresponding GET method before.","operationId":"replaceCartEntryConfiguration","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"entryNumber","in":"path","description":"Each entry in a cart has an entry number. Cart entries are numbered in ascending order, starting with zero.","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CCPOrderEntry"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CartModification"}},"application/json":{"schema":{"$ref":"#/components/schemas/CartModification"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/entries/{entryNumber}/ccpconfigurator/configurationOverview":{"get":{"tags":["Product Configurator CCP Saved Cart Integration"],"summary":"Gets a product configuration overview of an saved cart entry","description":"Gets a configuration overview, a simplified and condensed read-only view on the product configuration of an saved cart entry. Only the selected attribute values are displayed here.","operationId":"getConfigurationOverviewForSavedCart","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier.","required":true,"schema":{"type":"string"}},{"name":"entryNumber","in":"path","description":"Each entry in a cart has an entry number. Cart entries are numbered in ascending order, starting with zero.","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CCPConfigurationOverview"}},"application/json":{"schema":{"$ref":"#/components/schemas/CCPConfigurationOverview"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/entries/{entryNumber}/configurator/textfield":{"get":{"tags":["Product Configurator Textfield Template"],"summary":"Get configuration of cart entry.","description":"Get the textfield configuration for a cart entry.","operationId":"getConfigurationInEntry_1","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"entryNumber","in":"path","description":"Cart entry number.","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ConfigurationInfoList"}},"application/json":{"schema":{"$ref":"#/components/schemas/ConfigurationInfoList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Product Configurator Textfield Template"],"summary":"Update configuration of cart entry.","description":"Update the textfield configuration for a cart entry.","operationId":"getConfigurationInEntry","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"entryNumber","in":"path","description":"Cart entry number.","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConfigurationInfoList"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CartModification"}},"application/json":{"schema":{"$ref":"#/components/schemas/CartModification"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/entrygroups/{entryGroupNumber}":{"post":{"tags":["Cart Entry Groups"],"summary":"Assigns a product to a cart entry group.","operationId":"addToCartEntryGroup","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"entryGroupNumber","in":"path","description":"Each entry group in a cart has a specific entry group number. Entry group numbers are integers starting at one. They are defined in ascending order.","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderEntry"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CartModification"}},"application/json":{"schema":{"$ref":"#/components/schemas/CartModification"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Cart Entry Groups"],"summary":"Deletes an entry group.","description":"Deletes an entry group from the associated cart.","operationId":"removeCartEntryGroup","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"entryGroupNumber","in":"path","description":"Each entry group in a cart has a specific entry group number. Entry group numbers are integers starting at one. They are defined in ascending order.","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/entrygroups/{entryGroupNumber}/allowedProductsSearch":{"get":{"tags":["Bundles"],"summary":"Retrieves products for an entry group.","description":"Retrieves a list of products and related product search data, such as available facets, available sorting, and spelling suggestions. To enable spelling suggestions, you need to have indexed properties configured to be used for spell checking. Any of the products returned can be added to the entry group, also known as the bundle.","operationId":"getAvailableProducts","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"entryGroupNumber","in":"path","description":"Each entry group in a cart has a specific entry group number. Entry group numbers are integers starting at one. They are defined in ascending order.","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC, DEFAULT, FULL.","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20}},{"name":"query","in":"query","description":"Formatted query string. It contains query criteria like free text search, facet. The format is <freeTextSearch>:<sort>:<facetKey1>:<facetValue1>:...:<facetKeyN>:<facetValueN>.","required":false,"schema":{"type":"string"}},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ProductSearchPage"}},"application/json":{"schema":{"$ref":"#/components/schemas/ProductSearchPage"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/flagForDeletion":{"patch":{"tags":["Save Cart"],"summary":"Updates the cart by flagging it for deletion.","description":"Updates the cart without corresponding saved cart attributes by flagging it for deletion. The cart is not deleted from the database, but without the saved cart properties, the cart will be handled by the cart removal job just like any other cart.","operationId":"doUpdateFlagForDeletion","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/SaveCartResult"}},"application/json":{"schema":{"$ref":"#/components/schemas/SaveCartResult"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/guestuser":{"post":{"tags":["Carts"],"summary":"Creates a guest user for the cart.","description":"Creates a guest user, and assigns the user to the cart. This API is specifically designed to create a guest user for a cart that only has an anonymous user assigned.\n\nNote: API will deny access if the cart already has a normal user or a guest user assigned.\n","operationId":"createCartGuestUser","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SAPGuestUserRequest"}}}},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SAPGuestUserRequest"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"patch":{"tags":["Carts"],"summary":"Updates profile for current cart guest user.","description":"Updates profile for current cart guest user. This API is specifically designed to update profile for guest user, so it can only be accessed after a guest user has been created for the cart. Only attributes provided in the request body will be changed.\n\nNote: API will deny access if the cart already has a normal user or no user assigned\n","operationId":"updateCurrentUserProfile","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SAPGuestUserRequest"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SAPGuestUserRequest"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/payment/sop/request":{"get":{"tags":["Carts"],"summary":"Retrieves the information required to create a subscription.","description":"Retrieves the information required to create a subscription that contacts the payment provider directly. This information contains the URL of the payment provider and a list of required parameters.","operationId":"getSopPaymentRequestDetails","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged in user, cart guid for anonymous user, 'current' for the last modified cart","required":true,"schema":{"type":"string"}},{"name":"extendedMerchantCallback","in":"query","description":"Define which url should be returned","required":false,"schema":{"type":"boolean","default":false}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"responseUrl","in":"query","description":"The URL that the payment provider uses to return payment information. Possible values for responseUrl include the following: “orderPage_cancelResponseURL”, “orderPage_declineResponseURL”, and “orderPage_receiptResponseURL”.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PaymentRequest"}},"application/json":{"schema":{"$ref":"#/components/schemas/PaymentRequest"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/payment/sop/response":{"get":{"tags":["Carts"],"summary":"Retrieves the create subscription response from the payment provider.","description":"Retrieves the response from the payment provider after creating the SOP payment subscription. If the payment subscription was created successfully, the payment details are returned. If no response from the payment provider, a \"202 Accepted\" status is returned. Otherwise, an error response is returned.\n\nNote: The execution of the “Try it out” button always returns an error because the extended carts controller handles parameters differently depending on which payment provider is used.\n","operationId":"getSopPaymentResponse","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}},"application/json":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Carts"],"summary":"Creates the SOP payment details.","description":"If the SOP payment subscription was successfully created, the payment details are defined and returned.\n\nNote: The execution of the “Try it out” button always returns an error because the extended carts controller handles parameters differently, depending on which payment provider is used.\n","operationId":"doHandleSopPaymentResponse","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}},"application/json":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Carts"],"summary":"Deletes the response from the payment provider.","description":"Deletes the payment provider response for the SOP payment subscription.","operationId":"removeSopPaymentResponse","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/paymentOption":{"put":{"tags":["Cart Payments"],"summary":"Set the payment option for the cart.","description":"Specifies which option the consumer selected to make the payment for the cart.","operationId":"updateSapPaymentOption","parameters":[{"name":"baseSiteId","in":"path","description":"The base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SAPPaymentOptionRequest"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Cart"}},"application/json":{"schema":{"$ref":"#/components/schemas/Cart"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/paymentdetails":{"put":{"tags":["Cart Payments"],"summary":"Sets credit card payment details for the cart.","description":"Sets credit card payment details for the specified cart.","operationId":"replaceCartPaymentDetails","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"paymentDetailsId","in":"query","description":"Payment details identifier.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Cart Payments"],"summary":"Creates details of a new credit card payment for the cart.","description":"Creates the details of a new credit card payment and assigns it to the cart.","operationId":"createCartPaymentDetails","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}},"application/json":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}},"application/json":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/paymenttype":{"put":{"tags":["B2B Carts"],"summary":"Updates the payment type for the cart.","description":"Updates the payment type for the cart during the checkout process. If the purchaseOrderNumber is not null, it will also be updated for the cart.","operationId":"replaceOrgCartPaymentType","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"paymentType","in":"query","description":"Payment type choice. Examples:card,account","required":true,"schema":{"type":"string"}},{"name":"purchaseOrderNumber","in":"query","description":"Purchase order number to assign to the cart during the checkout process.","required":false,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Cart"}},"application/json":{"schema":{"$ref":"#/components/schemas/Cart"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/promotions":{"get":{"tags":["Cart Promotions"],"summary":"Retrieves the cart promotions.","description":"Retrieves information about the promotions applied to the cart. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers, and as a result, some of them are currently not compatible with the new promotions engine.","operationId":"getCartPromotions","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PromotionResultList"}},"application/json":{"schema":{"$ref":"#/components/schemas/PromotionResultList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Cart Promotions"],"summary":"Assigns a promotion to the cart.","description":"Applies a promotion to the cart using the promotion identifier. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers, and as a result, some of them are currently not compatible with the new promotions engine.","operationId":"doApplyCartPromotion","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"promotionId","in":"query","description":"Promotion identifier.","required":true,"schema":{"type":"string"},"example":"percentage_discount_on_camera"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/promotions/{promotionId}":{"get":{"tags":["Cart Promotions"],"summary":"Retrieves information about the promotion.","description":"Retrieves information about the promotion using the promotion identifier associated with the cart. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers, and as a result, some of them are currently not compatible with the new promotions engine.","operationId":"getCartPromotion","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"promotionId","in":"path","description":"Promotion identifier.","required":true,"schema":{"type":"string"},"example":"percentage_discount_on_camera"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PromotionResultList"}},"application/json":{"schema":{"$ref":"#/components/schemas/PromotionResultList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Cart Promotions"],"summary":"Deletes the promotion.","description":"Deletes the promotion of the order using the promotion identifier defined for the cart. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers, and as a result, some of them are currently not compatible with the new promotions engine.","operationId":"removeCartPromotion","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"promotionId","in":"path","description":"Promotion identifier.","required":true,"schema":{"type":"string"},"example":"percentage_discount_on_camera"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/removeVoucher":{"post":{"tags":["Cart Promotions"],"summary":"Removes a voucher defined for the current cart. This endpoint is added in the 2211.28 update.","description":"Removes a voucher associated with the current cart.","operationId":"doCartVoucherRemoval","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SAPVoucherRequest"}}},"required":true},"responses":{"204":{"description":"No Content"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/requestedretrievaldate":{"put":{"tags":["Carts"],"summary":"Sets the requested retrieval date for a cart.","description":"Sets the requested retrieval date with a given date for the cart.","operationId":"setCartRequestedRetrievalDate","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"requestedRetrievalAt","in":"query","description":"Customer requested date for order retrieval","required":false,"schema":{"type":"string"},"example":"2023-03-29"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/restoresavedcart":{"patch":{"tags":["Save Cart"],"summary":"Restores a saved cart.","description":"Restores the data of a saved cart.","operationId":"doUpdateSavedCart","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/SaveCartResult"}},"application/json":{"schema":{"$ref":"#/components/schemas/SaveCartResult"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/save":{"patch":{"tags":["Save Cart"],"summary":"Updates a cart to save it.","description":"Updates a cart to explicitly save it. Adds the name and description of the saved cart if specified. This endpoint is deprecated in the 2211.28 update and its deletion is planned. Please use '/savedCart' instead.","operationId":"doSaveCart","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"saveCartDescription","in":"query","description":"Description of the saved cart.","required":false,"schema":{"type":"string"}},{"name":"saveCartName","in":"query","description":"Name of the saved cart.","required":false,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/SaveCartResult"}},"application/json":{"schema":{"$ref":"#/components/schemas/SaveCartResult"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"deprecated":true,"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/savedCart":{"patch":{"tags":["Save Cart"],"summary":"Updates a cart to save it.","description":"Updates a cart to explicitly save it. Adds the name and description of the saved cart if specified. This endpoint is added in the 2211.28 update.","operationId":"doCartSave","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SAPSavedCartRequest"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/SaveCartResult"}},"application/json":{"schema":{"$ref":"#/components/schemas/SaveCartResult"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/savedcart":{"get":{"tags":["Save Cart"],"summary":"Retrieves the saved cart.","description":"Retrieves the saved cart for an authenticated customer using the cart identifier.  To get entryGroup information, set fields value as follows: fields=savedCartData(entryGroups(BASIC)), fields=savedCartData(entryGroups(DEFAULT)), or fields=savedCartData(entryGroups(FULL)).","operationId":"getSavedCart","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/SaveCartResult"}},"application/json":{"schema":{"$ref":"#/components/schemas/SaveCartResult"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/setEmail":{"put":{"tags":["Carts"],"summary":"Assigns an email address to the cart.","description":"Assigns an email to the cart. This endpoint is added in the 2211.28 update.","operationId":"setGuestUserEmail","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SAPGuestUserRequest"}}},"required":true},"responses":{"204":{"description":"No Content"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/validate":{"post":{"tags":["Carts"],"summary":"Validates the cart.","description":"Validates the cart and returns the cart data during checkout and quotation.","operationId":"validateCart","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CartModificationList"}},"application/json":{"schema":{"$ref":"#/components/schemas/CartModificationList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/vouchers":{"get":{"tags":["Cart Promotions"],"summary":"Retrieves a list of vouchers.","description":"Retrieves a list of vouchers associated with the cart.","operationId":"getCartVouchers","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/VoucherList"}},"application/json":{"schema":{"$ref":"#/components/schemas/VoucherList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Cart Promotions"],"summary":"Assigns a voucher to the cart.","description":"Assigns a voucher to the cart using the voucher identifier. This endpoint is deprecated in the 2211.28 update and its deletion is planned. Please use '/applyVoucher' instead.","operationId":"doApplyCartVoucher","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}},{"name":"voucherId","in":"query","description":"Voucher identifier (code)","required":true,"schema":{"type":"string"},"example":"VCHR-H8BC-Y3D5-34AL"}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"deprecated":true,"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/carts/{cartId}/vouchers/{voucherId}":{"delete":{"tags":["Cart Promotions"],"summary":"Deletes a voucher defined for the current cart.","description":"Deletes a voucher associated with the current cart. This endpoint is deprecated in the 2211.28 update and its deletion is planned. Please use '/removeVoucher' instead.","operationId":"removeCartVoucher","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"path","description":"Cart identifier: cart code for logged-in user, cart GUID for anonymous user, or 'current' for the last modified cart.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}},{"name":"voucherId","in":"path","description":"Voucher identifier (code)","required":true,"schema":{"type":"string"},"example":"VCHR-H8BC-Y3D5-34AL"}],"responses":{"204":{"description":"No Content"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"deprecated":true,"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/cms/components":{"get":{"tags":["Components"],"summary":"Retrieves the component data.","description":"Retrieves the CMS components using the specified identifiers. If you don't provide any component identifiers, all of the components will be retrieved. \nThe components list is filtered by the specified catalog, product, or category restrictions.The result is sorted according to the sort parameter.","operationId":"getComponentsByIdsAndUser","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"catalogCode","in":"query","description":"Catalog code","required":false,"schema":{"type":"string"},"example":"electronics"},{"name":"categoryCode","in":"query","description":"Category code","required":false,"schema":{"type":"string"},"example":576},{"name":"componentIds","in":"query","description":"List of Component identifiers","required":false,"schema":{"type":"array","items":{"type":"string"}},"example":"FacebookLink,ContactUsLink"},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC, DEFAULT, FULL.","required":false,"schema":{"type":"string","enum":["BASIC","DEFAULT","FULL"]}},{"name":"pageSize","in":"query","description":"Number of results returned per page. Default value: 10.","required":false,"schema":{"type":"integer","format":"int32","default":10}},{"name":"productCode","in":"query","description":"Product code","required":false,"schema":{"type":"string"},"example":553637},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string"},"example":"uid:asc"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"ComponentIDListWsDTO","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ComponentList"}},"application/json":{"schema":{"$ref":"#/components/schemas/ComponentList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/cms/components/{componentId}":{"get":{"tags":["Components"],"summary":"Retrieves the component data.","description":"Retrieves the CMS component data.","operationId":"getComponentByIdAndUser","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"catalogCode","in":"query","description":"Catalog code","required":false,"schema":{"type":"string"},"example":"electronics"},{"name":"categoryCode","in":"query","description":"Category code","required":false,"schema":{"type":"string"},"example":576},{"name":"componentId","in":"path","description":"Component identifier","required":true,"schema":{"type":"string"},"example":"PageTitleComponent"},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC, DEFAULT, FULL.","required":false,"schema":{"type":"string","enum":["BASIC","DEFAULT","FULL"]}},{"name":"productCode","in":"query","description":"Product code","required":false,"schema":{"type":"string"},"example":553637},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"ComponentWsDTO","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Component"}},"application/json":{"schema":{"$ref":"#/components/schemas/Component"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/cms/pages":{"get":{"tags":["Pages"],"summary":"Retrieves the page data and the CMS content slots.","description":"Retrieves the page data and CMS content slots using the pageLabel/pageId or the code parameter. If you don't provide a value for one of these parameters, the homepage CMS content slots are retrieved. \nContent pages can be filtered using pageLabel/pageId while the other page types can be filtered using the specified code.","operationId":"getPageWithUser","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"code","in":"query","description":"Page code. Examples: homepage, electronics, cameras, 585.","required":false,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC, DEFAULT, FULL.","required":false,"schema":{"type":"string","enum":["BASIC","DEFAULT","FULL"]}},{"name":"pageId","in":"query","description":"Page id. When pageId is provided, pageLabelOrId will be ignored.","schema":{"type":"string"},"example":"cartPage"},{"name":"pageLabel","in":"query","description":"Page label. If no page has a label that matches the page label exactly, try to find pages whose label starts with a section of the page label.\nNote: URL encoding on the page label should be applied when the label contains special characters. When pageLabel is provided, pageLabelOrId will be ignored.","schema":{"type":"string"},"example":"/cart"},{"name":"pageLabelOrId","in":"query","description":"Page Label or Id. If no page has a label that matches the page label exactly, try to find pages whose label starts with a section of the page label. Otherwise, try to find the page by id.\nWhen label and ID values can match, passing in the pageId parameter may result in obtaining variation pages with the same pageLabel but different pageId. Therefore, it is advisable to use both the pageId and pageLabel parameters to ensure accuracy.Note: URL encoding on the page label should be applied when the label contains special characters.","required":false,"schema":{"type":"string","deprecated":true},"example":"/cart"},{"name":"pageType","in":"query","description":"Page type","required":false,"schema":{"type":"string","enum":["ContentPage","ProductPage","CategoryPage","CatalogPage"]}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"CMSPageWsDTO","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CMSPage"}},"application/json":{"schema":{"$ref":"#/components/schemas/CMSPage"}}}},"400":{"description":"Should not pass both pageLabel and pageId simultaneously. (InvalidPageQualifierException)","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/cms/pages/{pageId}":{"get":{"tags":["Pages"],"summary":"Retrieves the page data and CMS content slots using the page identifier.","description":"Retrieves the page data and CMS content slots, each of which contains a list of CMS component data. The page identifier is required.","operationId":"getPageByIdAndUser","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"categoryCode","in":"query","description":"Category code","schema":{"type":"string"},"example":576},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC, DEFAULT, FULL.","required":false,"schema":{"type":"string","enum":["BASIC","DEFAULT","FULL"]}},{"name":"pageId","in":"path","description":"Page Id","required":true,"schema":{"type":"string"},"example":"cartPage"},{"name":"productCode","in":"query","description":"Product code","schema":{"type":"string"},"example":553637},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"CMSPageWsDTO","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CMSPage"}},"application/json":{"schema":{"$ref":"#/components/schemas/CMSPage"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/cms/sitepages":{"get":{"tags":["Pages"],"summary":"Retrieves the page data.","operationId":"getAllPagesWithUser","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC, DEFAULT, FULL.","required":false,"schema":{"type":"string","enum":["BASIC","DEFAULT","FULL"]}},{"name":"pageSize","in":"query","description":"Number of results returned per page. Default value: 10.","required":false,"schema":{"type":"integer","format":"int32","default":10}},{"name":"pageType","in":"query","description":"Page type.","required":false,"schema":{"type":"string","enum":["ContentPage","ProductPage","CategoryPage","CatalogPage"]}},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string"},"example":"uid:asc"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"CMSPageListWsDTO","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CMSPageList"}},"application/json":{"schema":{"$ref":"#/components/schemas/CMSPageList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/consents":{"post":{"tags":["Consents"],"summary":"Creates consent.","description":"Creates consent to collect or transfer the personal data of a customer.","operationId":"doGiveConsent","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"consentTemplateId","in":"query","description":"Consent template identifier.","required":true,"schema":{"type":"string"},"example":"00001000"},{"name":"consentTemplateVersion","in":"query","description":"Consent template version.","required":true,"schema":{"type":"integer","format":"int32"},"example":"00001000"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ConsentTemplate"}},"application/json":{"schema":{"$ref":"#/components/schemas/ConsentTemplate"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/consents/{consentCode}":{"delete":{"tags":["Consents"],"summary":"Deletes the user consent.","description":"If the consent was given, then the consent is deleted. If the consent was withdrawn, then it returns a withdrawal error. If the consent doesn't exist, it returns a \"not found\" error. If the customer is anonymous, then it returns an \"access denied\" error.","operationId":"removeConsent","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"consentCode","in":"path","description":"Consent code.","required":true,"schema":{"type":"string"},"example":"0000001"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/consenttemplates":{"get":{"tags":["Consents"],"summary":"Retrieves the consents.","description":"If a customer has not given or has withdrawn their consent to the template, a date is not returned.","operationId":"getConsentTemplates","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ConsentTemplateList"}},"application/json":{"schema":{"$ref":"#/components/schemas/ConsentTemplateList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/consenttemplates/{consentTemplateId}":{"get":{"tags":["Consents"],"summary":"Retrieves the consent.","description":"Retrieves the consent using the template identifier. If a customer has not given or has withdrawn their consent to the template, a date is not returned.","operationId":"getConsentTemplate","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"consentTemplateId","in":"path","description":"Consent template identifier.","required":true,"schema":{"type":"string"},"example":"00001000"},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ConsentTemplate"}},"application/json":{"schema":{"$ref":"#/components/schemas/ConsentTemplate"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/customercoupons":{"get":{"tags":["Customer Coupons"],"summary":"Retrieves the coupons of a customer.","description":"Retrieves the list of customer coupons associated with a customer.","operationId":"getCustomerCoupons","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"needsTotal","in":"query","description":"Flag to indicate if the total number of results is needed or not.","required":false,"schema":{"type":"string","enum":["true","false"]}},{"name":"pageSize","in":"query","description":"The number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":10},"example":10},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string"},"example":"key1:asc,key2:desc"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CustomerCouponSearchResult"}},"application/json":{"schema":{"$ref":"#/components/schemas/CustomerCouponSearchResult"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/customercoupons/claim":{"post":{"tags":["Customer Coupons"],"summary":"Claims a customer coupon.","description":"Claims a customer coupon by coupon code. Once the coupon is claimed, customer can apply it to the cart to enjoy discounts or other benefits. This endpoint is added in the 2211.28 update.","operationId":"claimCustomerCoupon","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SAPCustomerCouponOperationRequest"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CustomerCoupon2Customer"}},"application/json":{"schema":{"$ref":"#/components/schemas/CustomerCoupon2Customer"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/customercoupons/discard":{"post":{"tags":["Customer Coupons"],"summary":"Discards a customer coupon.","description":"Discards a customer coupon by coupon code. Once the coupon is discarded, customer will no longer be able to apply it to the cart. This endpoint is added in the 2211.28 update.","operationId":"discardCustomerCoupon","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SAPCustomerCouponOperationRequest"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/customercoupons/subscribeNotifications":{"post":{"tags":["Customer Coupons"],"summary":"Subscribes to coupon notifications.","description":"Subscribes to coupon notifications to receive alerts when the coupon date is approaching or expiring. This endpoint is added in the 2211.28 update.","operationId":"subscribeNotificationsOfCustomerCoupon","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SAPCustomerCouponOperationRequest"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CustomerCouponNotification"}},"application/json":{"schema":{"$ref":"#/components/schemas/CustomerCouponNotification"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/customercoupons/unsubscribeNotifications":{"post":{"tags":["Customer Coupons"],"summary":"Unsubscribes from coupon notifications.","description":"Unsubscribes from coupon notifications for a specific coupon to stop receiving alerts when the coupon date is approaching or expiring. This endpoint is added in the 2211.28 update.","operationId":"unsubscribeNotificationsOfCustomerCoupon","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SAPCustomerCouponOperationRequest"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/customercoupons/{couponCode}/claim":{"post":{"tags":["Customer Coupons"],"summary":"Claims and remembers a customer coupon.","description":"Claims and remembers a customer coupon by coupon code. This endpoint is deprecated in the 2211.28 update and its deletion is planned. Please use the POST {baseSiteId}/users/{userId}/customercoupons/claim instead.","operationId":"doClaimCustomerCoupon","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"couponCode","in":"path","description":"Coupon code. A valid coupon code can be used to get a discount.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"201":{"description":"Created","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CustomerCoupon2Customer"}},"application/json":{"schema":{"$ref":"#/components/schemas/CustomerCoupon2Customer"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"deprecated":true,"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Customer Coupons"],"summary":"Disclaims a customer coupon.","description":"Disclaims a customer coupon by coupon code. This endpoint is deprecated in the 2211.28 update and its deletion is planned. Please use the POST {baseSiteId}/users/{userId}/customercoupons/discard instead.","operationId":"unassignCustomerCoupon","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"couponCode","in":"path","description":"Coupon code","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"deprecated":true,"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/customercoupons/{couponCode}/notification":{"post":{"tags":["Customer Coupons"],"summary":"Creates a coupon notification.","description":"Creates a coupon notification to alert a customer when the coupon date is approaching or expiring. This endpoint is deprecated in the 2211.28 update and its deletion is planned. Please use the POST {baseSiteId}/users/{userId}/customercoupons/subscribeNotifications instead.","operationId":"doSubscribeToCustomerCoupon","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"couponCode","in":"path","description":"Coupon code. A valid coupon code can be used to get a discount.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"201":{"description":"Created","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CustomerCouponNotification"}},"application/json":{"schema":{"$ref":"#/components/schemas/CustomerCouponNotification"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"deprecated":true,"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Customer Coupons"],"summary":"Deletes a coupon notification.","description":"Deletes the coupon notification that alerts a customer when the coupon date is approaching or expiring. This endpoint is deprecated in the 2211.28 update and its deletion is planned. Please use the POST /{baseSiteId}/users/{userId}/customercoupons/unsubscribeNotifications instead.","operationId":"doUnsubscribeFromCustomerCoupon","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"couponCode","in":"path","description":"Coupon code. A valid coupon code can be used to get a discount.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"deprecated":true,"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/customergroups":{"get":{"tags":["Users"],"summary":"Retrieves the customer groups.","operationId":"getUserCustomerGroups","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/UserGroupList"}},"application/json":{"schema":{"$ref":"#/components/schemas/UserGroupList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/futureStocks":{"get":{"tags":["Future Stocks"],"summary":"Retrieves the future availability of the products.","description":"Retrieves the products and their future availabilities.","operationId":"getFutureStocksList","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"productCodes","in":"query","description":"Products identifiers.","required":true,"schema":{"type":"string"},"example":"3318057,72399000_55,72399000_56"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProductFutureStocksList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/futureStocks/{productCode}":{"get":{"tags":["Future Stocks"],"summary":"Retrieves the future availability of a product.","operationId":"getFutureStocks","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"productCode","in":"path","description":"Product identifier.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProductFutureStocks"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/login":{"put":{"tags":["Users"],"summary":"Changes customer's login name.","description":"Changes a customer's login name. Requires the customer's current password. This endpoint is deprecated in the 2211.23 update and its deletion is planned. Please use the POST /{baseSiteId}/users/{userId}/login instead.","operationId":"replaceUserLogin","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"newLogin","in":"query","description":"New login name of a customer. The name is case insensitive.","required":true,"schema":{"type":"string"}},{"name":"password","in":"query","description":"Current password of a customer.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"deprecated":true,"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Users"],"summary":"Changes customer's login id.","description":"Changes a customer's login id. Requires the customer's current password. This endpoint is added in the 2211.23 update.","operationId":"changeUserLoginId","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReplaceLoginIdInput"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/loginnotification":{"post":{"tags":["Login Notification"],"summary":"Notify about successful login.","description":"Publish notification event about successful login.","operationId":"doPublishSuccessfulLoginEvent","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier.","required":true,"schema":{"type":"string"}}],"responses":{"202":{"description":"Accepted"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/notificationpreferences":{"get":{"tags":["Notification Preference"],"summary":"Gets all notification preferences of the current customer","description":"Returns the notification preferences of the current customer.","operationId":"getNotificationPreferences","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/notificationPreferenceList"}},"application/json":{"schema":{"$ref":"#/components/schemas/notificationPreferenceList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"patch":{"tags":["Notification Preference"],"summary":"Updates the notification preferences of the current customer","description":"Updates the notification preference of the current customer.","operationId":"updateNotificationPreferences","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/BasicnotificationPreferenceList"}},"application/json":{"schema":{"$ref":"#/components/schemas/BasicnotificationPreferenceList"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/notifications/sitemessages":{"get":{"tags":["Site Messages"],"summary":"Gets all site messages of current customer.","description":"Returns the site messages of current customer.","operationId":"siteMessages","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"The current result page requested.","schema":{"type":"string","default":"0"}},{"name":"needsTotal","in":"query","description":"The flag for indicating if total number of results is needed or not.","schema":{"type":"string","default":"true","enum":["true","false"]}},{"name":"pageSize","in":"query","description":"The number of results returned per page.","schema":{"type":"string","default":"10"}},{"name":"sort","in":"query","description":"The sorting method applied to the return results.","schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/siteMessageSearchResult"}},"application/json":{"schema":{"$ref":"#/components/schemas/siteMessageSearchResult"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orderApprovalPermissions":{"get":{"tags":["Order Approval Permissions"],"summary":"Retrieves the order approval permissions.","description":"Retrieves the list of order approval permissions given to a user. Such permissions allow the approval to exceed order, budget, or time threshold. The response may display the results across multiple pages, when applicable.","operationId":"getOrderApprovalPermissions","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20}},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderApprovalPermissionList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Order Approval Permissions"],"summary":"Creates an order approval permission.","description":"Creates an order approval permission for a user. These permissions allow the approval to exceed order, budget, or time threshold in a workflow.","operationId":"createOrderApprovalPermission","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderApprovalPermission"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderApprovalPermission"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orderApprovalPermissions/{orderApprovalPermissionCode}":{"get":{"tags":["Order Approval Permissions"],"summary":"Retrieves the order approval permission.","operationId":"getOrderApprovalPermission","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orderApprovalPermissionCode","in":"path","description":"Order approval permission code.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderApprovalPermission"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"patch":{"tags":["Order Approval Permissions"],"summary":"Updates the order approval permission.","operationId":"updateOrderApprovalPermission","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orderApprovalPermissionCode","in":"path","description":"Order approval permission code.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderApprovalPermission"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderApprovalPermission"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orderReturns":{"get":{"tags":["Return Requests"],"summary":"Retrieves the return request history of the customer.","description":"Retrieves the order history for all return requests associated with a customer.","operationId":"getReturnRequests","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20}},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReturnRequestList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Return Requests"],"summary":"Creates an order return request.","description":"Creates an order return request. An order can be completely or partially returned. For a complete return, add all order entry numbers and quantities in the request body. For a partial return, only add the order entry numbers and quantities of the selected products.","operationId":"createReturnRequest","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReturnRequestEntryInputList"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReturnRequest"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orderReturns/{returnRequestCode}":{"get":{"tags":["Return Requests"],"summary":"Retrieves the details of a return request.","description":"Retrieves the details of a return request. To get entryGroup information, set fields value as follows: fields=order(entryGroups(BASIC)), fields=order(entryGroups(DEFAULT)), or fields=order(entryGroups(FULL)).","operationId":"getReturnRequest","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"returnRequestCode","in":"path","description":"Order returns request code.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReturnRequest"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"patch":{"tags":["Return Requests"],"summary":"Updates the order return request using the specified code.","description":"Updates the order return request. Only cancellation of the request is supported by setting the attribute status to CANCELLING. Cancellation of the return request cannot be reverted","operationId":"updateReturnRequest","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"returnRequestCode","in":"path","description":"Order returns request code.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReturnRequestModification"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orderapprovals":{"get":{"tags":["Order Approvals"],"summary":"Retrieves the orders to approve.","description":"Retrieves the orders that the user is allowed to approve.","operationId":"getOrderApprovals","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20}},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderApprovalList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orderapprovals/{orderApprovalCode}":{"get":{"tags":["Order Approvals"],"summary":"Retrieves an order to approve.","description":"Retrieves the details of an order to approve.","operationId":"getOrderApproval","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orderApprovalCode","in":"path","description":"Order approval code.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderApproval"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orderapprovals/{orderApprovalCode}/decision":{"post":{"tags":["Order Approvals"],"summary":"Creates a decision for the order approval.","description":"Creates a decision (approval or rejection) for the order, which will trigger the next step in the approval workflow.","operationId":"doMakeOrderApprovalDecision","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orderApprovalCode","in":"path","description":"Order approval code.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderApprovalDecision"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderApprovalDecision"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orders":{"get":{"tags":["Orders"],"summary":"Retrieves the order history of a customer.","description":"Retrieves the order history of a customer. The response may display the results across multiple pages, when applicable.","operationId":"getUserOrderHistory","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"pageSize","in":"query","description":"The number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20}},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string"}},{"name":"statuses","in":"query","description":"Filters orders with specified status(es). For example, statuses = CANCELLED returns CANCELLED orders. To filter multiple statuses, separate statuses with \",\" and all orders with these statuses will be returned. For example, statuses = CANCELLED,COMPLETED,READY returns all orders with statuses CANCELLED, COMPLETED, and READY.\nOptions available are:\nCANCELLING,\nCHECKED_VALID,\nCREATED,\nOPEN,\nREADY,\nCHECKED_INVALID,\nON_HOLD,\nON_VALIDATION,\nPENDING_APPROVAL,\nSUSPENDED,\nCOMPLETED,\nPAYMENT_AUTHORIZED,\nPENDING_APPROVAL_FROM_MERCHANT,\nCANCELLED,\nPAYMENT_NOT_AUTHORIZED,\nPENDING_QUOTE,\nAPPROVED_QUOTE,\nPAYMENT_AMOUNT_RESERVED,\nPAYMENT_AMOUNT_NOT_RESERVED,\nREJECTED_QUOTE,\nAPPROVED,\nPAYMENT_CAPTURED,\nPAYMENT_NOT_CAPTURED,\nREJECTED,\nAPPROVED_BY_MERCHANT,\nFRAUD_CHECKED,\nORDER_SPLIT,\nREJECTED_BY_MERCHANT,\nASSIGNED_TO_ADMIN,\nPROCESSING_ERROR,\nB2B_PROCESSING_ERROR,\nWAIT_FRAUD_MANUAL_CHECK,\nPAYMENT_NOT_VOIDED,\nTAX_NOT_VOIDED,\nTAX_NOT_COMMITTED,\nTAX_NOT_REQUOTED\n","required":false,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/OrderHistoryList"}},"application/json":{"schema":{"$ref":"#/components/schemas/OrderHistoryList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Orders"],"summary":"Creates an order.","description":"Creates an order and returns the order details. The response contains all the order data.","operationId":"placeOrder","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"query","description":"Cart code for logged in user, cart GUID for guest checkout","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"201":{"description":"Created","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Order"}},"application/json":{"schema":{"$ref":"#/components/schemas/Order"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"head":{"tags":["Orders"],"summary":"Retrieves the total number of orders for a customer.","description":"Retrieves the total number of orders for a customer in the response header, under the \"x-total-count\" attribute.","operationId":"countUserOrders","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"statuses","in":"query","description":"Filters only certain order statuses. For example, statuses=CANCELLED,CHECKED_VALID would only return orders with status CANCELLED or CHECKED_VALID.","required":false,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orders/paymentAuthorizedOrderPlacement":{"post":{"tags":["Orders"],"summary":"Place an order with authorized payment.","description":"This API supports placing order with asynchronous payment patterns like iFrame, hosted payment page and hosted field. With these payment patterns, the payment authorization is done independently with order placement API and the payment result is handled through asynchronous notifications. For instant payment method and delayed payment method, the order is placed directly after customers have successfully submitted the payments but the order process shall be in paused state until the payment notification is received and processed on Commerce side.\n\nNote: API can only be used when the baseStore's payment provider is configured as OPF, and completion of OPF-related order processes is required; otherwise, it will throw an exception.\n","operationId":"paymentAuthorizedOrderPlacement","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"cartId","in":"query","description":"Cart code for logged in user, cart GUID for guest checkout","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Order"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orders/{code}":{"get":{"tags":["Orders"],"summary":"Retrieves the order.","description":"Retrieves the details of the order. To get entryGroup information, set fields value as follows: fields=entryGroups(BASIC), fields=entryGroups(DEFAULT), or fields=entryGroups(FULL).","operationId":"getUserOrders","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"code","in":"path","description":"Order GUID or order code.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Order"}},"application/json":{"schema":{"$ref":"#/components/schemas/Order"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orders/{code}/attachments":{"get":{"tags":["Orders"],"summary":"Get attachments for an order.","description":"Returns attachments based on a specific order code. The response contains list of attachment information.","operationId":"getUserOrderAttachments","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"code","in":"path","description":"Order Code","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"The current result page requested.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"pageSize","in":"query","description":"The number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20}},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"List of attachments of an order","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SAPOrderAttachmentList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orders/{code}/attachments/{attachmentId}/download":{"get":{"tags":["Orders"],"summary":"Get binary attachment of an order","description":"Get content attachment of an order. The response will be a binary file with an appropriate `Content-Type` header.","operationId":"getUserOrderAttachmentBinary","parameters":[{"name":"attachmentId","in":"path","description":"Attachment ID","required":true,"schema":{"type":"string"}},{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"code","in":"path","description":"Order Code","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/octet-stream":{"schema":{"type":"array","items":{"type":"string","format":"byte"}}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orders/{code}/cancellation":{"post":{"tags":["Orders"],"summary":"Cancels an order.","description":"Cancels an order, completely or partially. For a complete cancellation, add all the order entry numbers and quantities in the request body. For partial cancellation, only add the order entry numbers and quantities to be cancelled.","operationId":"doCancelOrder","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"code","in":"path","description":"Order code","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CancellationRequestEntryInputList"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orders/{code}/invoices":{"get":{"tags":["Invoices"],"summary":"Get invoices for an order.","description":"Returns invoices based on a specific order code. The response contains list of invoice information.","operationId":"getUserOrderInvoices","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"code","in":"path","description":"Order Code","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"The current result page requested.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"pageSize","in":"query","description":"The number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20}},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"List of invoice of an order","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/SAPInvoiceList"}},"application/json":{"schema":{"$ref":"#/components/schemas/SAPInvoiceList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orders/{code}/invoices/{invoiceId}/download":{"get":{"tags":["Invoices"],"summary":"Get binary invoice of an order","description":"Get invoice of an order in encoded byte array","operationId":"getUserOrderInvoiceBinary","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"code","in":"path","description":"Order Code","required":true,"schema":{"type":"string"}},{"name":"externalSystemId","in":"query","description":"External system identifier where the invoice resides.","required":false,"schema":{"type":"string"},"example":"S4SALES"},{"name":"invoiceId","in":"path","description":"Invoice ID","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/octet-stream":{"schema":{"type":"string","format":"byte"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orders/{orderCode}/consignments/{consignmentCode}/tracking":{"get":{"tags":["Consignment Tracking"],"summary":"Retrieves consignment tracking information","description":"Returns details of consignment tracking information based on the order code and the consignment code.","operationId":"getConsignmentTrackingData","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"consignmentCode","in":"path","description":"Consignment identifier.","required":true,"schema":{"type":"string"}},{"name":"orderCode","in":"path","description":"Order identifier.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/consignmentTracking"}},"application/json":{"schema":{"$ref":"#/components/schemas/consignmentTracking"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orders/{orderId}/entries/{entryNumber}/ccpconfigurator/configurationOverview":{"get":{"tags":["Product Configurator CCP Order Integration"],"summary":"Gets a product configuration overview of an order entry","description":"Gets a configuration overview, a simplified, condensed read-only view on the product configuration of an order entry. Only the selected attribute values are dislpayed here.","operationId":"getConfigurationOverviewForOrderEntry","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"entryNumber","in":"path","description":"Each entry in a cart has an entry number. Cart entries are numbered in ascending order, starting with zero.","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"orderId","in":"path","description":"Order identifier.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CCPConfigurationOverview"}},"application/json":{"schema":{"$ref":"#/components/schemas/CCPConfigurationOverview"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orders/{orderId}/entries/{entryNumber}/configurator/textfield":{"get":{"tags":["Product Configurator Textfield Template"],"summary":"Get textfield configuration for order entry.","description":"Get the textfield configuration for an order entry.","operationId":"getTextfieldConfigurationForOrderEntry","parameters":[{"name":"entryNumber","in":"path","description":"Each entry in a cart has an entry number. Cart entries are numbered in ascending order, starting with zero.","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"orderId","in":"path","description":"Order identifier.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ConfigurationInfoList"}},"application/json":{"schema":{"$ref":"#/components/schemas/ConfigurationInfoList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgCustomers":{"get":{"tags":["Organizational Unit Customer Management"],"summary":"Retrieves the list of organizational customers.","description":"Retrieves the list of organizational customers. The response may display the results across multiple pages, when applicable.","operationId":"getOrgCustomers","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20},"example":20},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string","default":"name"},"example":"name"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrgUnitUserList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Organizational Unit Customer Management"],"summary":"Creates an organizational customer profile.","operationId":"createOrgCustomer","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrgCustomerCreation"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/User"}},"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgCustomers/{orgCustomerId}":{"get":{"tags":["Organizational Unit Customer Management"],"summary":"Retrieves the profile of the organizational unit customer.","operationId":"getOrgCustomer","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body.","required":false,"schema":{"type":"string","enum":["BASIC","DEFAULT","FULL"]}},{"name":"orgCustomerId","in":"path","description":"Organizational customer GUID.","required":true,"schema":{"type":"string"},"example":"ceff469f-25aa-4a10-99e3-da31245204e7"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/User"}},"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"patch":{"tags":["Organizational Unit Customer Management"],"summary":"Updates the profile of the organizational unit customer.","operationId":"updateOrgCustomer","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"orgCustomerId","in":"path","description":"Organizational customer GUID.","required":true,"schema":{"type":"string"},"example":"ceff469f-25aa-4a10-99e3-da31245204e7"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrgCustomerModification"}}},"required":true},"responses":{"204":{"description":"No Content"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgCustomers/{orgCustomerId}/approvers":{"get":{"tags":["Organizational Unit Customer Management"],"summary":"Retrieves the approvers.","description":"Retrieves a list of approvers for the customer in the organizational unit.","operationId":"getOrgCustomerApprovers","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orgCustomerId","in":"path","description":"Organizational customer GUID.","required":true,"schema":{"type":"string"},"example":"ceff469f-25aa-4a10-99e3-da31245204e7"},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20},"example":20},{"name":"sort","in":"query","description":"Sorting method applied to the returned results.","required":false,"schema":{"type":"string","default":"name"},"example":"name"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrgUnitUserList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgCustomers/{orgCustomerId}/approvers/{approverId}":{"post":{"tags":["Organizational Unit Customer Management"],"summary":"Adds an approver for an organizational customer.","operationId":"doAddApproverToOrgCustomer","parameters":[{"name":"approverId","in":"path","description":"Approver GUID.","required":true,"schema":{"type":"string"},"example":"728c59e5-cccd-4713-811b-2031f03d885c"},{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orgCustomerId","in":"path","description":"Organizational customer GUID.","required":true,"schema":{"type":"string"},"example":"ceff469f-25aa-4a10-99e3-da31245204e7"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/B2BSelectionData"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Organizational Unit Customer Management"],"summary":"Deletes an approver for an organizational customer.","operationId":"removeApproverFromOrgCustomer","parameters":[{"name":"approverId","in":"path","description":"Approver GUID.","required":true,"schema":{"type":"string"},"example":"728c59e5-cccd-4713-811b-2031f03d885c"},{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orgCustomerId","in":"path","description":"Organizational customer GUID.","required":true,"schema":{"type":"string"},"example":"ceff469f-25aa-4a10-99e3-da31245204e7"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/B2BSelectionData"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgCustomers/{orgCustomerId}/orgUserGroups":{"get":{"tags":["Organizational Unit Customer Management"],"summary":"Retrieves the organizational user groups.","description":"Retrieves the organizational user groups in the organizational unit.","operationId":"getOrgCustomerOrgUserGroups","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orgCustomerId","in":"path","description":"Organizational customer GUID.","required":true,"schema":{"type":"string"},"example":"ceff469f-25aa-4a10-99e3-da31245204e7"},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20},"example":20},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string","default":"name"},"example":"name"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrgUnitUserGroupList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgCustomers/{orgCustomerId}/orgUserGroups/{userGroupId}":{"post":{"tags":["Organizational Unit Customer Management"],"summary":"Creates an Organizational organizational user group  objfor an organizational customer.","operationId":"doAddOrgUserGroupToOrgCustomer","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orgCustomerId","in":"path","description":"Organizational customer GUID.","required":true,"schema":{"type":"string"},"example":"ceff469f-25aa-4a10-99e3-da31245204e7"},{"name":"userGroupId","in":"path","description":"Organizational user group GUID.","required":true,"schema":{"type":"string"},"example":"Approvers"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/B2BSelectionData"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Organizational Unit Customer Management"],"summary":"Deletes an organizational user group for an organizational customer.","description":"Deletes an organizational user group for an organizational customer using the userGroupId.","operationId":"removeOrgUserGroupFromOrgCustomer","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"orgCustomerId","in":"path","description":"Organizational customer GUID.","required":true,"schema":{"type":"string"},"example":"ceff469f-25aa-4a10-99e3-da31245204e7"},{"name":"userGroupId","in":"path","description":"Organizational user group GUID.","required":true,"schema":{"type":"string"},"example":"Approvers"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgCustomers/{orgCustomerId}/permissions":{"get":{"tags":["Organizational Unit Customer Management"],"summary":"Retrieves the permissions of the customer.","description":"Retrieves the permissions of the customer in the organizational unit.","operationId":"getOrgCustomerPermissions","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orgCustomerId","in":"path","description":"Organizational customer GUID.","required":true,"schema":{"type":"string"},"example":"ceff469f-25aa-4a10-99e3-da31245204e7"},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20},"example":20},{"name":"sort","in":"query","description":"Sorting method applied to the returned results.","required":false,"schema":{"type":"string","default":"name"},"example":"name"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderApprovalPermissionList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgCustomers/{orgCustomerId}/permissions/{permissionId}":{"post":{"tags":["Organizational Unit Customer Management"],"summary":"Creates a permission for an organizational customer.","operationId":"doAddPermissionToOrgCustomer","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orgCustomerId","in":"path","description":"Organizational customer GUID.","required":true,"schema":{"type":"string"},"example":"ceff469f-25aa-4a10-99e3-da31245204e7"},{"name":"permissionId","in":"path","description":"Permission GUID.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/B2BSelectionData"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Organizational Unit Customer Management"],"summary":"Deletes a permission for an organizational customer.","operationId":"removePermissionFromOrgCustomer","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orgCustomerId","in":"path","description":"Organizational customer GUID.","required":true,"schema":{"type":"string"},"example":"ceff469f-25aa-4a10-99e3-da31245204e7"},{"name":"permissionId","in":"path","description":"Permission GUID.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/B2BSelectionData"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgCustomers/{orgCustomerId}/roles":{"post":{"tags":["Organizational Unit Management"],"summary":"Creates a role for an organizational customer.","operationId":"doAddRoleToOrgCustomer","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orgCustomerId","in":"path","description":"Organizational customer to which the role will be added.","required":true,"schema":{"type":"string"},"example":"ceff469f-25aa-4a10-99e3-da31245204e7"},{"name":"roleId","in":"query","description":"Role that is added to the user.","required":true,"schema":{"type":"string"},"example":"b2bapprovergroup"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/B2BSelectionData"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgCustomers/{orgCustomerId}/roles/{roleId}":{"delete":{"tags":["Organizational Unit Management"],"summary":"Deletes the role from the organizational customer.","operationId":"removeRoleFromOrgCustomer","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orgCustomerId","in":"path","description":"Organizational customer from which the role will be removed.","required":true,"schema":{"type":"string"},"example":"ceff469f-25aa-4a10-99e3-da31245204e7"},{"name":"roleId","in":"path","description":"Role that is removed from the user. Example roles: b2badmingroup, b2bmanagergroup, or b2bcustomergroup.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/B2BSelectionData"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgUnitUserGroups":{"get":{"tags":["Organizational Unit User Groups"],"summary":"Retrieves the list of user groups in an organizational unit.","description":"Retrieves the details of the user group that is accessible by the base site.","operationId":"getOrgUnitUserGroups","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20},"example":20},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string","default":"uid"},"example":"uid"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrgUnitUserGroupList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Organizational Unit User Groups"],"summary":"Creates a new user group in an organizational unit.","description":"Creates a new organizational unit user group.","operationId":"createOrgUnitUserGroup","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrgUnitUserGroup"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrgUnitUserGroup"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgUnitUserGroups/{orgUnitUserGroupId}":{"get":{"tags":["Organizational Unit User Groups"],"summary":"Retrieves the details of the organizational unit user group.","description":"Retrieves the details of the user group that is accessible by the base site.","operationId":"getOrgUnitUserGroup","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orgUnitUserGroupId","in":"path","description":"Organizational unit user group identifier.","required":true,"schema":{"type":"string"},"example":"b2bapprovergroup"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrgUnitUserGroup"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Organizational Unit User Groups"],"summary":"Deletes the organizational unit user group.","operationId":"removeOrgUnitUserGroup","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"orgUnitUserGroupId","in":"path","description":"Organizational unit user group identifier.","required":true,"schema":{"type":"string"},"example":"b2bapprovergroup"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"patch":{"tags":["Organizational Unit User Groups"],"summary":"Updates the organizational unit user group.","operationId":"updateOrgUnitUserGroup","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"orgUnitUserGroupId","in":"path","description":"Organizational unit user group identifier.","required":true,"schema":{"type":"string"},"example":"b2bapprovergroup"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrgUnitUserGroup"}}},"required":true},"responses":{"204":{"description":"No Content"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgUnitUserGroups/{orgUnitUserGroupId}/availableOrderApprovalPermissions":{"get":{"tags":["Organizational Unit User Groups"],"summary":"Retrieves the order approval permissions.","description":"Retrieves the order approval permissions that can belong to the organizational unit user group. The 'selected' property of permissions that already belong to the user group is true.","operationId":"getOrderApprovalPermissionsForOrgUnitUserGroup","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orgUnitUserGroupId","in":"path","description":"Organizational unit user group identifier.","required":true,"schema":{"type":"string"},"example":"b2bapprovergroup"},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20},"example":20},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string","default":"name"},"example":"name"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderApprovalPermissionList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgUnitUserGroups/{orgUnitUserGroupId}/availableOrgCustomers":{"get":{"tags":["Organizational Unit User Groups"],"summary":"Retrieves the organizational customers.","description":"Retrieves the organizational customers who can belong to the specified organizational unit user group. The 'selected' property of customers who already belong to the user group is true.","operationId":"getAvailableOrgCustomersForUserGroup","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orgUnitUserGroupId","in":"path","description":"Organizational unit user group identifier.","required":true,"schema":{"type":"string"},"example":"b2bapprovergroup"},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20},"example":20},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string","default":"name"},"example":"name"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrgUnitUserList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgUnitUserGroups/{orgUnitUserGroupId}/members":{"post":{"tags":["Organizational Unit User Groups"],"summary":"Adds an organizational customer as a member of an organizational unit user group.","operationId":"doAddOrgCustomerToOrgUnitUserGroupMembers","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"orgCustomerId","in":"query","description":"Organizational customer that will be added to the organizational unit user group.","required":true,"schema":{"type":"string"},"example":"ceff469f-25aa-4a10-99e3-da31245204e7"},{"name":"orgUnitUserGroupId","in":"path","description":"Organizational unit user group identifier.","required":true,"schema":{"type":"string"},"example":"b2bapprovergroup"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"201":{"description":"Created"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Organizational Unit User Groups"],"summary":"Deletes all organizational customers as user group members in the organizational unit.","description":"Deletes all organizational customers as user group members in the organizational unit, which deactivates the user group until a new member is added.","operationId":"removeOrgUnitUserGroupMembers","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"orgUnitUserGroupId","in":"path","description":"Organizational unit user group identifier.","required":true,"schema":{"type":"string"},"example":"b2bapprovergroup"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgUnitUserGroups/{orgUnitUserGroupId}/members/{orgCustomerId}":{"delete":{"tags":["Organizational Unit User Groups"],"summary":"Deletes an organizational customer from the organizational unit group members.","operationId":"removeOrgCustomerFromOrgUnitUserGroupMembers","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"orgCustomerId","in":"path","description":"Organizational customer from which the role will be removed.","required":true,"schema":{"type":"string"},"example":"ceff469f-25aa-4a10-99e3-da31245204e7"},{"name":"orgUnitUserGroupId","in":"path","description":"Organizational unit user group identifier.","required":true,"schema":{"type":"string"},"example":"b2bapprovergroup"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgUnitUserGroups/{orgUnitUserGroupId}/orderApprovalPermissions":{"post":{"tags":["Organizational Unit User Groups"],"summary":"Creates an order approval permission to a user group in the organizational unit.","description":"Adds an order approval permission to a specific organizational unit user group.","operationId":"doAddOrderApprovalPermissionToOrgUnitUserGroup","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orderApprovalPermissionCode","in":"query","description":"Order approval permission that will be added to the organizational unit user group.","required":true,"schema":{"type":"string"},"example":"OrderLessThan3000"},{"name":"orgUnitUserGroupId","in":"path","description":"Organizational unit user group to which the order approval permission will be added.","required":true,"schema":{"type":"string"},"example":"b2bApprovers"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/B2BSelectionData"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgUnitUserGroups/{orgUnitUserGroupId}/orderApprovalPermissions/{orderApprovalPermissionCode}":{"delete":{"tags":["Organizational Unit User Groups"],"summary":"Deletes the order approval permission from the organizational unit user group.","operationId":"removeOrderApprovalPermissionFromOrgUnitUserGroup","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orderApprovalPermissionCode","in":"path","description":"Order approval permission that will be removed from the organizational unit user group.","required":true,"schema":{"type":"string"},"example":"approveLessThan100"},{"name":"orgUnitUserGroupId","in":"path","description":"Organizational unit user group identifier.","required":true,"schema":{"type":"string"},"example":"b2bOrderApprovers"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/B2BSelectionData"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgUnits":{"post":{"tags":["Organizational Unit Management"],"summary":"Creates a new organizational unit.","description":"Creates a new organizational unit. For example, the Rustic Organization used the word 'Rustic' to refer to their organizational unit.","operationId":"createOrgUnit","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/B2BUnit"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/B2BUnit"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgUnits/{orgUnitId}":{"get":{"tags":["Organizational Unit Management"],"summary":"Retrieves the organizational unit.","description":"Retrieves the organizational unit based on the specified identifier.","operationId":"getOrgUnit","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orgUnitId","in":"path","description":"Organizational unit identifier.","required":true,"schema":{"type":"string"},"example":"Rustic"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/B2BUnit"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"patch":{"tags":["Organizational Unit Management"],"summary":"Updates the organizational unit.","operationId":"updateOrgUnit","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"orgUnitId","in":"path","description":"Organizational unit identifier.","required":true,"schema":{"type":"string"},"example":"Rustic"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/B2BUnit"}}},"required":true},"responses":{"204":{"description":"No Content"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgUnits/{orgUnitId}/accountSummary":{"get":{"tags":["Organizational Unit Account Summary"],"summary":"Retrieves the account summary.","description":"Retrieves the account summary for the organizational unit.","operationId":"getAccountSummary","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"orgUnitId","in":"path","description":"Organizational unit identifier.","required":true,"schema":{"type":"string"},"example":"RUSTIC"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountSummary"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgUnits/{orgUnitId}/addresses":{"get":{"tags":["Organizational Unit Management"],"summary":"Retrieves the addresses of an organizational unit.","description":"Retrieves all the addresses of an organizational unit.","operationId":"getOrgUnitAddresses","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orgUnitId","in":"path","description":"Organizational unit identifier.","required":true,"schema":{"type":"string"},"example":"RUSTIC"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddressList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Organizational Unit Management"],"summary":"Creates an address for the organizational unit.","description":"Creates a new address for the organizational unit.","operationId":"createOrgUnitAddress","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orgUnitId","in":"path","description":"Organizational unit identifier.","required":true,"schema":{"type":"string"},"example":"RUSTIC"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgUnits/{orgUnitId}/addresses/{addressId}":{"delete":{"tags":["Organizational Unit Management"],"summary":"Deletes the organizational unit address.","operationId":"removeOrgUnitAddress","parameters":[{"name":"addressId","in":"path","description":"Address identifier.","required":true,"schema":{"type":"string"},"example":8796093349911},{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"orgUnitId","in":"path","description":"Organizational unit identifier.","required":true,"schema":{"type":"string"},"example":"RUSTIC"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"patch":{"tags":["Organizational Unit Management"],"summary":"Updates the organizational unit address.","operationId":"updateOrgUnitAddress","parameters":[{"name":"addressId","in":"path","description":"Address identifier.","required":true,"schema":{"type":"string"},"example":8796093349911},{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"orgUnitId","in":"path","description":"Organizational unit identifier.","required":true,"schema":{"type":"string"},"example":"RUSTIC"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Address"}}},"required":true},"responses":{"204":{"description":"No Content"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgUnits/{orgUnitId}/availableParents":{"get":{"tags":["Organizational Unit Management"],"summary":"Retrieves the available parent units.","description":"Retrieves a list of units which can be parents of current units.","operationId":"getAvailableParentUnits","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orgUnitId","in":"path","description":"Organizational unit identifier.","required":true,"schema":{"type":"string"},"example":"Rustic"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/B2BUnitNodeList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgUnits/{orgUnitId}/availableUsers/{roleId}":{"get":{"tags":["Organizational Unit Management"],"summary":"Retrieves the users who belong to the organizational unit.","description":"Retrieves the users who belong to the organizational unit and can be assigned to a specific role. The 'selected' property of users who are already assigned to the role is true.","operationId":"getOrgUnitUsers","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"orgUnitId","in":"path","description":"Organizational unit identifier.","required":true,"schema":{"type":"string"},"example":"RUSTIC"},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20},"example":20},{"name":"roleId","in":"path","description":"Role that is returned. Example roles: b2bapprovergroup, b2badmingroup, b2bmanagergroup, or b2bcustomergroup.","required":true,"schema":{"type":"string"}},{"name":"sort","in":"query","description":"Sorting method applied to the display search results.","required":false,"schema":{"type":"string"},"example":"name"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrgUnitUserList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgUnits/{orgUnitId}/orgCustomers/{orgCustomerId}/roles":{"post":{"tags":["Organizational Unit Management"],"summary":"Adds an organizational unit dependent role to a specific organizational customer.","operationId":"doAddOrgUnitRoleToOrgCustomer","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"orgCustomerId","in":"path","description":"Organizational customer to which the role will be added.","required":true,"schema":{"type":"string"},"example":"ceff469f-25aa-4a10-99e3-da31245204e7"},{"name":"orgUnitId","in":"path","description":"Organizational unit identifier.","required":true,"schema":{"type":"string"},"example":"Rustic"},{"name":"roleId","in":"query","description":"Role that is added to the user. Example role: b2bapprovergroup.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"201":{"description":"Created"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgUnits/{orgUnitId}/orgCustomers/{orgCustomerId}/roles/{roleId}":{"delete":{"tags":["Organizational Unit Management"],"summary":"Deletes an organizational, unit-dependent role from an organizational customer.","operationId":"removeOrgUnitRoleFromOrgCustomer","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"orgCustomerId","in":"path","description":"Organizational customer from which the role will be removed.","required":true,"schema":{"type":"string"},"example":"ceff469f-25aa-4a10-99e3-da31245204e7"},{"name":"orgUnitId","in":"path","description":"Organizational unit identifier.","required":true,"schema":{"type":"string"},"example":"RUSTIC"},{"name":"roleId","in":"path","description":"Role that is removed from the user. Example roles: b2badmingroup, b2bmanagergroup, or b2bcustomergroup.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgUnits/{orgUnitId}/orgDocuments":{"get":{"tags":["Organizational Unit Account Summary"],"summary":"Retrieves the financial organizational documents.","description":"Retrieves the list of financial documents for the organizational unit.","operationId":"getOrgDocuments","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"endRange","in":"query","description":"Upper limit for a specified range filter (for range filterByKeys: orgDocumentIdRange, createdAtDateRange (format: MM/dd/yyyy), dueAtDateRange (format: MM/dd/yyyy), amountRange (number) and openAmountRange (number).)","required":false,"schema":{"type":"string","default":""}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"filterByKey","in":"query","description":"Filter to apply on the retrieved list of organizational documents. Possible values are: orgDocumentId, orgDocumentIdRange, orgDocumentType, createdAtDateRange, dueAtDateRange, amountRange, and openAmountRange.","required":false,"schema":{"type":"string","default":"orgDocumentId"}},{"name":"filterByValue","in":"query","description":"Value for a specified filter (for single value filterByKeys: orgDocumentId and orgDocumentType.)","required":false,"schema":{"type":"string","default":""}},{"name":"orgUnitId","in":"path","description":"Organizational unit identifier.","required":true,"schema":{"type":"string"},"example":"RUSTIC"},{"name":"page","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":10},"example":20},{"name":"sort","in":"query","description":"Sorting method applied to the return results. Default value is: byCreatedAtDateAsc.","required":false,"schema":{"type":"string","default":"byCreatedAtDateAsc"},"example":"byCreatedAtDateAsc"},{"name":"startRange","in":"query","description":"Lower limit for a specified range filter (for range filterByKeys: orgDocumentIdRange, createdAtDateRange (format: MM/dd/yyyy), dueAtDateRange (format: MM/dd/yyyy), amountRange (number) and openAmountRange (number).)","required":false,"schema":{"type":"string","default":""}},{"name":"status","in":"query","description":"Organizational document status. Possible values are: open, closed, and all.","required":false,"schema":{"type":"string","default":"open"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrgDocumentList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgUnits/{orgUnitId}/orgDocuments/{orgDocumentId}/attachments/{orgDocumentAttachmentId}":{"get":{"tags":["Organizational Unit Account Summary"],"summary":"Retrieves the attachment of a document.","description":"Retrieves the attachment associated with a given organizational document for the given attachment identifier.","operationId":"getOrgDocumentAttachment","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"orgDocumentAttachmentId","in":"path","description":"Organizational document attachment identifier.","required":true,"schema":{"type":"string"},"example":"0000001"},{"name":"orgDocumentId","in":"path","description":"Organizational document identifier.","required":true,"schema":{"type":"string"},"example":"0000001"},{"name":"orgUnitId","in":"path","description":"Organizational unit identifier.","required":true,"schema":{"type":"string"},"example":"RUSTIC"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/octet-stream":{"schema":{"type":"string","format":"byte"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgUnitsAvailableApprovalProcesses":{"get":{"tags":["Organizational Unit Management"],"summary":"Retrieves the available business approval processes.","operationId":"getOrgUnitsAvailableApprovalProcesses","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/B2BApprovalProcessList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/orgUnitsRootNodeTree":{"get":{"tags":["Organizational Unit Management"],"summary":"Retrieves the root organizational unit node.","description":"Retrieves the root organizational unit node and the child nodes associated with it.","operationId":"getOrgUnitsRootNodeTree","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/B2BUnitNode"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/password":{"put":{"tags":["Users"],"summary":"Updates the password of a customer.","description":"Updates the password of a customer. This endpoint is deprecated in the 2211.23 update and its deletion is planned. Please use the POST /{baseSiteId}/users/{userId}/password instead.","operationId":"replaceUserPassword","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"new","in":"query","description":"New password.","required":true,"schema":{"type":"string"}},{"name":"old","in":"query","description":"Old password.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier.","required":true,"schema":{"type":"string"}}],"responses":{"202":{"description":"Accepted"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"deprecated":true,"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Users"],"summary":"Updates the password of a customer.","description":"Updates the password of a customer. This endpoint is added in the 2211.23 update.","operationId":"changeUserPassword","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReplacePasswordInput"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/paymentdetails":{"get":{"tags":["Payment Details"],"summary":"Retrieves all credit card payment details of the customer.","description":"Retrieves all credit card payment details made by the customer.","operationId":"getPaymentDetailsList","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"saved","in":"query","description":"The flag to mark if the detailed payment is a saved one.","required":false,"schema":{"type":"boolean","default":false}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PaymentDetailsList"}},"application/json":{"schema":{"$ref":"#/components/schemas/PaymentDetailsList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/paymentdetails/{paymentDetailsId}":{"get":{"tags":["Payment Details"],"summary":"Retrieves detailed information for a specific credit card payment.","description":"Retrieves specific credit card payment details made by the customer using the paymentDetailsId.","operationId":"getPaymentDetails","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"paymentDetailsId","in":"path","description":"Payment details identifier.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}},"application/json":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"put":{"tags":["Payment Details"],"summary":"Updates existing detailed information for a specific credit card payment. ","description":"Updates existing credit card payment details made by the customer using the paymentDetailsId. Attributes not given in request will be defined again (set to null or default).","operationId":"replacePaymentDetails","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"paymentDetailsId","in":"path","description":"Payment details identifier.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}},"application/json":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Payment Details"],"summary":"Deletes detailed information for a specific credit card payment.","description":"Deletes specific credit card payment details made by the customer using the paymentDetailsId.","operationId":"removePaymentDetails","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"paymentDetailsId","in":"path","description":"Payment details identifier.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"patch":{"tags":["Payment Details"],"summary":"Updates existing detailed information for a specific credit card payment. ","description":"Updates existing credit card payment details made by the customer using the paymentDetailsId. Only those attributes provided in the request will be updated.","operationId":"updatePaymentDetails","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"paymentDetailsId","in":"path","description":"Payment details identifier.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/xml":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}},"application/json":{"schema":{"$ref":"#/components/schemas/PaymentDetails"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/productinterests":{"get":{"tags":["Product Interests"],"summary":"Retrieves the product interests of a customer.","description":"Retrieves product interests as CustomerInterestsSearchResult for a specific user.","operationId":"getProductInterests","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier.","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","schema":{"type":"string","default":"0"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"needsTotal","in":"query","description":"Flag to indicate if the total number of results is needed or not.","schema":{"type":"string","default":"true","enum":["true","false"]}},{"name":"notificationType","in":"query","description":"Notification type.","required":false,"schema":{"type":"string"},"example":"BACK_IN_STOCK"},{"name":"pageSize","in":"query","description":"The number of results returned per page.","schema":{"type":"string","default":"20"}},{"name":"productCode","in":"query","description":"Product identifier.","required":false,"schema":{"type":"string"},"example":"00001000"},{"name":"sort","in":"query","description":"Sorting method applied to the return results. Default value is by name.","schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/customerInterestsSearchPage"}},"application/json":{"schema":{"$ref":"#/components/schemas/customerInterestsSearchPage"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Product Interests"],"summary":"Creates product interests.","description":"Creates a product interest for a customer at a time.","operationId":"createProductInterest","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"notificationType","in":"query","description":"Notification type.","required":true,"schema":{"type":"string"},"example":"BACK_IN_STOCK"},{"name":"productCode","in":"query","description":"Product identifier.","required":true,"schema":{"type":"string"},"example":"00001000"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/productInterestRelation"}},"application/json":{"schema":{"$ref":"#/components/schemas/productInterestRelation"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"delete":{"tags":["Product Interests"],"summary":"Deletes the product interests.","description":"Deletes the product interests that a customer saved with product code and notification type.","operationId":"removeProductInterest","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"notificationType","in":"query","description":"Notification type.","required":true,"schema":{"type":"string"},"example":"BACK_IN_STOCK"},{"name":"productCode","in":"query","description":"Product identifier.","required":true,"schema":{"type":"string"},"example":"00001000"},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/quotes":{"get":{"tags":["Quotes"],"summary":"Retrieves all quotes for a customer.","description":"Retrieves all quote details associated with a customer. The response may display the results across multiple pages, when applicable.","operationId":"getQuotes","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"BASIC"}},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20}},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/QuoteList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Quotes"],"summary":"Creates a quote.","description":"Creates a quote by linking a cart using the cart identifier (cartId) to the quote. To trigger a requote, provide a value to the quoteCode parameter, instead of the cartId parameter inside the request body. The response body will contain the new data for the quote.","operationId":"createQuote","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/QuoteStarter"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Quote"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/quotes/{quoteCode}":{"get":{"tags":["Quotes"],"summary":"Retrieves the quote.","description":"Retrieves the details of a quote. To get entryGroup information, set fields value as follows: fields=entryGroups(BASIC), fields=entryGroups(DEFAULT), or fields=entryGroups(FULL).","operationId":"getQuote","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"quoteCode","in":"path","description":"Identifying code of the quote","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Quote"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"put":{"tags":["Quotes"],"summary":"Updates the quote.","description":"Updates the name, description, and expiration date of the quote.","operationId":"replaceQuote","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"quoteCode","in":"path","description":"Identifying code of the quote","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/QuoteMetadata"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"patch":{"tags":["Quotes"],"summary":"Updates the quote.","description":"Updates the name, description, or expiration date of the quote.","operationId":"updateQuote","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"quoteCode","in":"path","description":"Identifying code of the quote","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/QuoteMetadata"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/quotes/{quoteCode}/action":{"post":{"tags":["Quotes"],"summary":"Creates workflow actions for the quote.","description":"Creates workflow action during the quote editing process. Possible values are: CANCEL, SUBMIT, EDIT, CHECKOUT, APPROVE, or REJECT.","operationId":"performQuoteAction","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"quoteCode","in":"path","description":"Code of the quote.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/QuoteAction"}}},"required":true},"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/quotes/{quoteCode}/attachments/{attachmentId}":{"get":{"tags":["Quotes"],"summary":"Retrieves the quote attachment.","description":"Retrieves quote attachment for provided attachment Id","operationId":"getQuoteAttachment","parameters":[{"name":"attachmentId","in":"path","description":"Identifying code of the quote attachment","required":true,"schema":{"type":"string"},"example":"e58ed763-928c-4155-bee9-fdbaaadc15f3"},{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"quoteCode","in":"path","description":"Identifying code of the quote","required":true,"schema":{"type":"string"},"example":19824567},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/octet-stream":{"schema":{"type":"string","format":"byte"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/quotes/{quoteCode}/comments":{"post":{"tags":["Quotes"],"summary":"Creates a comment for a quote.","description":"Creates a comment for a quote. Text is added in the request body.","operationId":"createCommentForQuote","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"quoteCode","in":"path","description":"Identifying code of the quote","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateComment"}}},"required":true},"responses":{"201":{"description":"Created"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/quotes/{quoteCode}/discounts":{"post":{"tags":["Quotes"],"summary":"Creates a discount for an existing quote.","description":"Creates a discount for an open quote. Only sellers are allowed to apply a discount to a quote. The types of discount are: PERCENT, for discount by percentage; ABSOLUTE, for discount by amount; and TARGET, for discount by adjustment of the total value.","operationId":"createQuoteDiscount","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"quoteCode","in":"path","description":"Code of the quote.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/QuoteDiscount"}}},"required":true},"responses":{"201":{"description":"Created"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/quotes/{quoteCode}/entries/{entryNumber}/comments":{"post":{"tags":["Quotes"],"summary":"Creates a comment for a quote entry.","description":"Creates a comment for a quote entry. Text is added in the request body.","operationId":"createQuoteEntryComment","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"entryNumber","in":"path","description":"Each entry in a cart has an entry number. Cart entries are numbered in ascending order, starting with zero.","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"quoteCode","in":"path","description":"Code of the quote.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateComment"}}},"required":true},"responses":{"201":{"description":"Created"},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/quotes/{quoteId}/entries/{entryNumber}/ccpconfigurator/configurationOverview":{"get":{"tags":["Product Configurator CCP Quote Integration"],"summary":"Gets a product configuration overview of an quote entry","description":"Gets a configuration overview, a simplified, condensed read-only view on the product configuration of an quote entry. Only the selected attribute values are present here","operationId":"getConfigurationOverviewForQuote","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"entryNumber","in":"path","description":"Each entry in a cart has an entry number. Cart entries are numbered in ascending order, starting with zero.","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"quoteId","in":"path","description":"Quote identifier.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/CCPConfigurationOverview"}},"application/json":{"schema":{"$ref":"#/components/schemas/CCPConfigurationOverview"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/quotes/{quoteId}/entries/{entryNumber}/configurator/textfield":{"get":{"tags":["Product Configurator Textfield Template"],"summary":"Get textfield configuration for quote entry.","description":"Get the textfield configuration for a quote entry.","operationId":"getTextfieldConfigurationForQuoteEntry","parameters":[{"name":"entryNumber","in":"path","description":"Each entry in a cart has an entry number. Cart entries are numbered in ascending order, starting with zero.","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"quoteId","in":"path","description":"Quote identifier.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ConfigurationInfoList"}},"application/json":{"schema":{"$ref":"#/components/schemas/ConfigurationInfoList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/replenishmentOrders":{"get":{"tags":["Replenishment Order"],"summary":"Retrieves the replenishment orders.","description":"Retrieves the replenishment orders that are available by the customer.","operationId":"getReplenishmentOrders","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20}},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string","default":"code"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReplenishmentOrderList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/replenishmentOrders/{replenishmentOrderCode}":{"get":{"tags":["Replenishment Order"],"summary":"Retrieves the replenishment order.","description":"Retrieves the details of a replenishment order. To get entryGroup information, set fields value as follows: fields=entryGroups(BASIC), fields=entryGroups(DEFAULT), or fields=entryGroups(FULL).","operationId":"getReplenishmentOrder","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"replenishmentOrderCode","in":"path","description":"Replenishment order code.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReplenishmentOrder"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"patch":{"tags":["Replenishment Order"],"summary":"Updates the replenishment order.","description":"Updates the replenishment order of the specified user using the specified code. The cancellation of the replenishment order is supported by setting the active property to FALSE. The cancellation cannot be reverted.","operationId":"updateReplenishmentOrder","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"replenishmentOrderCode","in":"path","description":"Unique code for the replenishment order.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReplenishmentOrder"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/replenishmentOrders/{replenishmentOrderCode}/orders":{"get":{"tags":["Replenishment Order"],"summary":"Retrieves the history of the replenishment order.","description":"Retrieves the history data of the replenishment order that was placed by the customer.","operationId":"getReplenishmentOrderHistory","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"Current result page. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"pageSize","in":"query","description":"Number of results returned per page.","required":false,"schema":{"type":"integer","format":"int32","default":20}},{"name":"replenishmentOrderCode","in":"path","description":"Replenishment order code.","required":true,"schema":{"type":"string"}},{"name":"sort","in":"query","description":"Sorting method applied to the return results.","required":false,"schema":{"type":"string","default":"code"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderHistoryList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/savedCarts/{cartId}/entries/{entryNumber}/configurator/textfield":{"get":{"tags":["Product Configurator Textfield Template"],"summary":"Get textfield configuration for saved cart entry","description":"Get the textfield configuration for a saved cart entry.","operationId":"getTextfieldConfigurationForSavedCartEntry","parameters":[{"name":"cartId","in":"path","description":"Cart identifier.","required":true,"schema":{"type":"string"}},{"name":"entryNumber","in":"path","description":"Each entry in a cart has an entry number. Cart entries are numbered in ascending order, starting with zero.","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/ConfigurationInfoList"}},"application/json":{"schema":{"$ref":"#/components/schemas/ConfigurationInfoList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/ticketAssociatedObjects":{"get":{"tags":["Tickets"],"summary":"Retrieves the object associated with a ticket.","description":"Retrieves the order or cart that is associated with the customer ticket.","operationId":"getTicketAssociatedObjects","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TicketAssociatedObjectList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/tickets":{"get":{"tags":["Tickets"],"summary":"Retrieves the tickets of a customer.","description":"Retrieves the ticket history of a customer. The response may display the results across multiple pages, when applicable.","operationId":"getTickets","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"currentPage","in":"query","description":"The current result page requested. Default value is 0.","required":false,"schema":{"type":"integer","format":"int32","default":0}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"BASIC"}},{"name":"pageSize","in":"query","description":"Number of results returned per page. Example: 20","required":false,"schema":{"type":"integer","format":"int32","default":20}},{"name":"sort","in":"query","description":"Sorting method applied to the return results. Possible values are: byDate and byTicketId.","required":false,"schema":{"type":"string","default":"byDate"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TicketList"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]},"post":{"tags":["Tickets"],"summary":"Creates a ticket.","description":"Creates a ticket associated with a customer.","operationId":"createTicket","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TicketStarter"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Ticket"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/tickets/{ticketId}":{"get":{"tags":["Tickets"],"summary":"Retrieves a ticket.","description":"Retrieves a ticket associated with a customer.","operationId":"getTicket","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"ticketId","in":"path","description":"Ticket identifier.<br> Example: ```00000001```.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Ticket"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/tickets/{ticketId}/events":{"post":{"tags":["Tickets"],"summary":"Creates a ticket event.","description":"Creates a ticket event, which is defined as any kind of updated communication regarding the ticket, such as a new message. The message property is required while the toStatus property is optional.","operationId":"createTicketEvent","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"ticketId","in":"path","description":"Ticket identifier.<br> Example: ```00000001```.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TicketEvent"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TicketEvent"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/tickets/{ticketId}/events/{eventCode}/attachments":{"post":{"tags":["Tickets"],"summary":"Creates an attachment for an event in a ticket.","description":"Creates an attachment associated with a ticket event.","operationId":"createTicketEventAttachment","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"eventCode","in":"path","description":"Ticket event code is specific to each event. It is used to identify an event.<br>Example: ```00000A15```.","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"DEFAULT"}},{"name":"ticketId","in":"path","description":"Ticket identifier.<br> Example: ```00000001```.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"multipart/form-data":{"schema":{"required":["ticketEventAttachment"],"type":"object","properties":{"ticketEventAttachment":{"type":"string","description":"File to be attached to a ticket event.","format":"binary"}}}}}},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TicketEventAttachment"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/tickets/{ticketId}/events/{eventCode}/attachments/{attachmentId}":{"get":{"tags":["Tickets"],"summary":"Retrieves an attachment for an event in a ticket.","description":"Retrieves an attachment associated with a ticket event.","operationId":"getTicketEventAttachment","parameters":[{"name":"attachmentId","in":"path","description":"Attachment identifier.<br>Example: ```001```.","required":true,"schema":{"type":"string"}},{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"eventCode","in":"path","description":"Ticket event code that is specific to each event. It is used to identify an event.<br>Example: ```00000A15```.","required":true,"schema":{"type":"string"}},{"name":"ticketId","in":"path","description":"Ticket identifier.<br> Example: ```00000001```.","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/octet-stream":{"schema":{"type":"string","format":"byte"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/users/{userId}/verificationToken":{"post":{"tags":["Verification Token"],"summary":"Creates verification token","description":"Creates verification token, and sends token code via designated channel e.g. email.","operationId":"createVerificationToken","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"userId","in":"path","description":"User identifier or one of the literals : 'current' for currently authenticated user, 'anonymous' for anonymous user","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateVerificationTokenInput"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VerificationToken"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/vouchers/code/search":{"post":{"tags":["Vouchers"],"summary":"Retrieves the voucher by voucher code.","description":"Retrieves the details of the voucher by voucher code. This endpoint is added in the 2211.28 update.","operationId":"getVoucherByCode","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"BASIC"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SAPVoucherOperationRequest"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Voucher"}},"application/json":{"schema":{"$ref":"#/components/schemas/Voucher"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}},"/{baseSiteId}/vouchers/{code}":{"get":{"tags":["Vouchers"],"summary":"Retrieves the voucher.","description":"Retrieves the details of the voucher using the voucher identifier. This endpoint is deprecated in the 2211.28 update and its deletion is planned. Please use the POST {baseSiteId}/vouchers/code/search instead.","operationId":"getVoucher","parameters":[{"name":"baseSiteId","in":"path","description":"Base site identifier","required":true,"schema":{"type":"string"}},{"name":"code","in":"path","description":"Voucher identifier (code)","required":true,"schema":{"type":"string"},"example":"VCHR-H8BC-Y3D5-34AL"},{"name":"fields","in":"query","description":"Response configuration. This is the list of fields that should be returned in the response body. Examples: BASIC,DEFAULT,FULL","required":false,"schema":{"type":"string","default":"BASIC"}}],"responses":{"200":{"description":"OK","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/Voucher"}},"application/json":{"schema":{"$ref":"#/components/schemas/Voucher"}}}},"400":{"description":"Bad Request","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"401":{"description":"Unauthorized","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"403":{"description":"Forbidden","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}},"404":{"description":"Not Found","content":{"application/xml":{"schema":{"$ref":"#/components/schemas/errorList"}},"application/json":{"schema":{"$ref":"#/components/schemas/errorList"}}}}},"deprecated":true,"security":[{"oauth2_Password":["basic"]},{"oauth2_client_credentials":["extended"]}]}}},"components":{"schemas":{"AccountSummary":{"type":"object","properties":{"orgUnit":{"$ref":"#/components/schemas/OrgUnitReference"},"amountBalance":{"$ref":"#/components/schemas/AmountBalance"},"billingAddress":{"$ref":"#/components/schemas/Address"},"creditLimit":{"type":"string","description":"Credit limit amount, formatted as per the selected currency.","example":"$15,000.00"},"accountManagerName":{"type":"string","description":"Name of the account manager.","example":"Elke Vogel"},"accountManagerEmail":{"type":"string","description":"Email of the account manager.","example":"elke.vogel@rustic.com"}},"description":"Account summary of an organizational unit."},"Address":{"required":["firstName","lastName","line1","postalCode","titleCode","town"],"type":"object","properties":{"id":{"type":"string","description":"Unique id value of the address which is optional while creating new address. While performing other address operations this value is the key"},"title":{"type":"string","description":"Title of the address person","example":"Mr."},"titleCode":{"type":"string","description":"Code of the title","example":"MR"},"firstName":{"type":"string","description":"First name of the address person","example":"John"},"lastName":{"type":"string","description":"Last name of the address person","example":"Doe"},"companyName":{"type":"string","description":"Company Name","example":"Global Corp."},"line1":{"type":"string","description":"First line of the address","example":"123 Main Street"},"line2":{"type":"string","description":"Second line of the address","example":"Garden Level"},"town":{"type":"string","description":"Town, field required","example":"New York City"},"region":{"$ref":"#/components/schemas/Region"},"district":{"type":"string","description":"District name","example":"8th"},"postalCode":{"type":"string","description":"Postal code of the address","example":"10001"},"phone":{"type":"string","description":"Phone number","example":"+1 (123) 456-7890"},"cellphone":{"type":"string","description":"Cellphone number","example":"+1 (123) 456-7890"},"email":{"type":"string","description":"Email address","example":"johndoe@domain.com"},"country":{"$ref":"#/components/schemas/Country"},"shippingAddress":{"type":"boolean","description":"Boolean flag if address is for shipping"},"defaultAddress":{"type":"boolean","description":"Boolean flag if address is default"},"visibleInAddressBook":{"type":"boolean","description":"Boolean flag if address is visible in the Address Book"},"formattedAddress":{"type":"string","description":"Boolean flag if address is formatted"},"city":{"$ref":"#/components/schemas/City"},"cityDistrict":{"$ref":"#/components/schemas/District"}},"description":"Address object"},"AddressList":{"type":"object","properties":{"addresses":{"type":"array","description":"List of addresses","items":{"$ref":"#/components/schemas/Address"}}},"description":"Representation of an Address list"},"AddressValidation":{"type":"object","properties":{"errors":{"$ref":"#/components/schemas/errorList"},"decision":{"type":"string","description":"Decision"},"suggestedAddresses":{"type":"array","description":"List of suggested addresses","items":{"$ref":"#/components/schemas/Address"}}},"description":"Representation of an Address Validation"},"AmountBalance":{"type":"object","properties":{"openBalance":{"type":"string","description":"Open balance as the sum of all open transactional documents, including documents that are past the payment due date.","example":"$430.45"},"pastDueBalance":{"type":"string","description":"Past due balance as the sum of all open transactional documents that are past the payment due date.","example":"$130.45"},"currentBalance":{"type":"string","description":"Current balance as the sum of all open transactional documents that are not past the payment due date.","example":"$300.00"},"dueBalances":{"type":"array","description":"Balance due for each of the defined day ranges. For example, $100 due in 1-30 days, $200 due in 31-60 days, $300 due in 61-90 days, $400 due in 91+ days.","items":{"$ref":"#/components/schemas/DueBalanceRange"}}},"description":"Account balance details."},"ApiMessage":{"type":"object","properties":{"kind":{"type":"string","description":"Type of message, e.g. info, warning"},"code":{"type":"string","description":"A unique identifier for the message"},"message":{"type":"string","description":"A human-readable description of the message"},"target":{"type":"string","description":"Reference(s) to the specific part(s) of the cart that the message pertains to"}},"description":"Representation of supplementary info, warning messages, even when the business APIs successfully execute their operations."},"B2BApprovalProcess":{"required":["code"],"type":"object","properties":{"code":{"type":"string","description":"Code of the Organizational Approval Process","example":"accApproval"},"name":{"type":"string","description":"Name of the Organizational Approval Process","example":"Escalation Approval with Merchant Check"}},"description":"Representation of an organizational approval process"},"B2BApprovalProcessList":{"required":["approvalProcesses"],"type":"object","properties":{"approvalProcesses":{"type":"array","description":"List of Organizational Approval Process","items":{"$ref":"#/components/schemas/B2BApprovalProcess"}}},"description":"Representation of an organizational approval process list"},"B2BCostCenter":{"type":"object","properties":{"originalCode":{"type":"string","description":"The original code of the cost center. Deprecated since 2005.","example":"Custom_Retail","deprecated":true},"name":{"type":"string","description":"The name of the cost center","example":"Custom Retail"},"active":{"type":"string","description":"Indication of whether the cost center is active. Deprecated since 2005. Read-only, used for display purposes.","example":"true","deprecated":true},"activeFlag":{"type":"boolean","description":"Boolean flag of whether the cost center is active.","example":true},"code":{"type":"string","description":"The code of the cost center","example":"Custom_Retail"},"currency":{"$ref":"#/components/schemas/Currency"},"unit":{"$ref":"#/components/schemas/B2BUnit"},"assignedBudgets":{"type":"array","description":"Budgets assigned to this cost center","items":{"$ref":"#/components/schemas/BudgetShallow"}}},"description":"Cost center object."},"B2BCostCenterList":{"type":"object","properties":{"costCenters":{"type":"array","description":"List of cost centers","items":{"$ref":"#/components/schemas/B2BCostCenter"}},"sorts":{"type":"array","description":"List of sorts","items":{"$ref":"#/components/schemas/Sort"}},"pagination":{"$ref":"#/components/schemas/deprecatedPagination"}},"description":"Representation of a cost center list"},"B2BCostCenterShallow":{"type":"object","properties":{"originalCode":{"type":"string","description":"The original code of the cost center. Deprecated since 2005.","example":"Custom_Retail","deprecated":true},"name":{"type":"string","description":"The name of the cost center","example":"Custom Retail"},"active":{"type":"string","description":"Indication of whether the cost center is active. Deprecated since 2005. Read-only, used for display purposes.","example":"true","deprecated":true},"activeFlag":{"type":"boolean","description":"Boolean flag of whether the cost center is active.","example":true},"code":{"type":"string","description":"The code of the cost center","example":"Custom_Retail"},"currency":{"$ref":"#/components/schemas/Currency"}},"description":"Representation of a cost center. This bean is shallow, which means its potential relationship fields to other Org Unit fields are simple ids. No Org Unit WsDTO fields should be declared in this bean to avoid circular references."},"B2BPaymentTypeData":{"type":"object","properties":{"code":{"type":"string"},"displayName":{"type":"string"}}},"B2BPaymentTypeList":{"type":"object","properties":{"paymentTypes":{"type":"array","items":{"$ref":"#/components/schemas/B2BPaymentType"}}}},"B2BPaymentType":{"type":"object","properties":{"code":{"type":"string"},"displayName":{"type":"string"}}},"B2BSelectionData":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the selected object","example":"Retail_2K"},"selected":{"type":"boolean","description":"If the this object was selected","example":true},"active":{"type":"boolean","description":"If this object is active","example":false},"roles":{"type":"array","description":"roles","items":{"type":"string","description":"roles"}},"displayRoles":{"type":"array","description":"display roles","items":{"type":"string","description":"display roles"}},"normalizedCode":{"type":"string","description":"The normalized code"}},"description":"Representation of object selection data"},"B2BUnit":{"required":["uid"],"type":"object","properties":{"active":{"type":"boolean","description":"Boolean flag of whether Organizational Unit is active","example":true},"uid":{"type":"string","description":"Identifier of the organizational unit","example":"Pronto"},"name":{"type":"string","description":"Name of the organizational unit","example":"Pronto"},"parentOrgUnit":{"$ref":"#/components/schemas/B2BUnit"},"approvalProcess":{"$ref":"#/components/schemas/B2BApprovalProcess"},"addresses":{"type":"array","description":"Addresses of the organizational unit node","items":{"$ref":"#/components/schemas/Address"}},"approvers":{"type":"array","description":"Approvers of the organizational unit node","items":{"$ref":"#/components/schemas/User"}},"managers":{"type":"array","description":"Managers of the organizational unit node","items":{"$ref":"#/components/schemas/User"}},"administrators":{"type":"array","description":"Administrators of the organizational unit node","items":{"$ref":"#/components/schemas/User"}},"customers":{"type":"array","description":"Customers of the organizational unit node","items":{"$ref":"#/components/schemas/User"}},"costCenters":{"type":"array","description":"The cost centers of the organizational unit node","items":{"$ref":"#/components/schemas/B2BCostCenterShallow"}}},"description":"Organizational unit object."},"B2BUnitNode":{"required":["id"],"type":"object","properties":{"id":{"type":"string","description":"Identifier of the organizational unit represented by the node","example":"Pronto_Retail"},"name":{"type":"string","description":"Name of the organizational unit represented by the node","example":"Pronto Retail"},"parent":{"type":"string","description":"Unique identifier of organizational unit node's parent unit","example":"Pronto"},"active":{"type":"boolean","description":"Boolean flag of whether organizational unit represented by the node is active","example":true},"children":{"type":"array","description":"Child nodes of the organizational unit node","items":{"$ref":"#/components/schemas/B2BUnitNode"}}},"description":"Representation of an organizational unit node"},"B2BUnitNodeList":{"required":["unitNodes"],"type":"object","properties":{"unitNodes":{"type":"array","description":"List of Unit Nodes","items":{"$ref":"#/components/schemas/B2BUnitNode"}}},"description":"Representation of an organizational unit node list"},"BaseOption":{"type":"object","properties":{"variantType":{"type":"string","description":"Variant type of base option"},"options":{"type":"array","description":"List of all variant options","items":{"$ref":"#/components/schemas/VariantOption"}},"selected":{"$ref":"#/components/schemas/VariantOption"}},"description":"Representation of a Base Option"},"BaseSite":{"type":"object","properties":{"uid":{"type":"string","description":"Unique identifier of Basesite"},"name":{"type":"string","description":"Name of Basesite"},"stores":{"type":"array","description":"List of Basestores","items":{"$ref":"#/components/schemas/BaseStore"}},"theme":{"type":"string","description":"Theme of Basesite"},"defaultLanguage":{"$ref":"#/components/schemas/Language"},"locale":{"type":"string","description":"Locale data for Basesite"},"channel":{"type":"string","description":"Channel"},"urlEncodingAttributes":{"type":"array","description":"List of url encoding attributes","items":{"type":"string","description":"List of url encoding attributes"}},"urlPatterns":{"type":"array","description":"List of url patterns","items":{"type":"string","description":"List of url patterns"}},"defaultPreviewCatalogId":{"type":"string","description":"Default preview catalog id"},"defaultPreviewCategoryCode":{"type":"string","description":"Default preview category code"},"defaultPreviewProductCode":{"type":"string","description":"Default preview product code"},"isolated":{"type":"boolean","description":"Indicates whether customer data isolation is enabled for this site. If true, customer can get site information after registration, For example registerd username is name@sap.com, returned uid will be name@sap.com|baseSiteUid"},"captchaConfig":{"$ref":"#/components/schemas/CaptchaConfig"},"registrationEnabled":{"type":"boolean","description":"Indicates if the website supports registration","example":true},"requiresAuthentication":{"type":"boolean","description":"Indicates if the BaseSite requires authentication prior to use it","example":true}},"description":"Representation of a Base Site"},"BaseSiteList":{"type":"object","properties":{"baseSites":{"type":"array","description":"List of basesites","items":{"$ref":"#/components/schemas/BaseSite"}}},"description":"Representation of a Base Site List"},"BaseStore":{"type":"object","properties":{"name":{"type":"string","description":"Base store name"},"externalTaxEnabled":{"type":"boolean","description":"Flag defining is external tax is enabled"},"paymentProvider":{"type":"string","description":"Payment provider"},"createReturnProcessCode":{"type":"string","description":"Create return process code"},"maxRadiusForPosSearch":{"type":"number","description":"Maximum radius for searching point of service","format":"double"},"submitOrderProcessCode":{"type":"string","description":"Submit order process code"},"currencies":{"type":"array","description":"List of currencies","items":{"$ref":"#/components/schemas/Currency"}},"defaultCurrency":{"$ref":"#/components/schemas/Currency"},"defaultDeliveryOrigin":{"$ref":"#/components/schemas/PointOfService"},"defaultLanguage":{"$ref":"#/components/schemas/Language"},"deliveryCountries":{"type":"array","description":"List of delivery countries","items":{"$ref":"#/components/schemas/Country"}},"deliveryModes":{"$ref":"#/components/schemas/DeliveryModeList"},"languages":{"type":"array","description":"List of languages","items":{"$ref":"#/components/schemas/Language"}},"pointsOfService":{"type":"array","description":"List of points of service","items":{"$ref":"#/components/schemas/PointOfService"}},"expressCheckoutEnabled":{"type":"boolean","description":"Flag specifying whether the express checkout option is enabled"}},"description":"Representation of a Base Store"},"BasicnotificationPreference":{"type":"object","properties":{"channel":{"type":"string","description":"preference channel","example":"email, sms, site_message"},"enabled":{"type":"boolean","description":"if true, the channel is on; if false, the channel is off"}},"description":"Basic notification preference"},"BasicnotificationPreferenceList":{"type":"object","properties":{"preferences":{"type":"array","description":"Basic notification preferences","items":{"$ref":"#/components/schemas/BasicnotificationPreference"}}},"description":"Notification preference list"},"Breadcrumb":{"type":"object","properties":{"facetCode":{"type":"string","description":"Code of the facet"},"facetName":{"type":"string","description":"Name of the facet"},"facetValueCode":{"type":"string","description":"Value code of the facet"},"facetValueName":{"type":"string","description":"Value name of the facet"},"removeQuery":{"$ref":"#/components/schemas/SearchState"},"truncateQuery":{"$ref":"#/components/schemas/SearchState"}},"description":"Representation of a Breadcrumb"},"Budget":{"type":"object","properties":{"active":{"type":"boolean","description":"Boolean flag of whether the Budget is active"},"budget":{"type":"number","description":"Value of Budget","example":50000},"code":{"type":"string","description":"Code of the Budget","example":"Monthly_50K_USD"},"name":{"type":"string","description":"The name of the Budget","example":"Monthly 50K USD"},"currency":{"$ref":"#/components/schemas/Currency"},"startDate":{"type":"string","description":"The start date of the Budget","format":"date-time"},"endDate":{"type":"string","description":"The end date of the Budget","format":"date-time"},"selected":{"type":"boolean","description":"Boolean flag whether the budget is selected for a cost center","example":true},"orgUnit":{"$ref":"#/components/schemas/B2BUnit"},"costCenters":{"type":"array","description":"List of Cost Centers","items":{"$ref":"#/components/schemas/B2BCostCenter"}}},"description":"Budget."},"BudgetList":{"type":"object","properties":{"budgets":{"type":"array","description":"List of Budgets","items":{"$ref":"#/components/schemas/Budget"}},"sorts":{"type":"array","description":"List of sorts","items":{"$ref":"#/components/schemas/Sort"}},"pagination":{"$ref":"#/components/schemas/deprecatedPagination"}},"description":"Representation of a Budget List"},"BudgetShallow":{"type":"object","properties":{"active":{"type":"boolean","description":"Boolean flag of whether the Budget is active"},"budget":{"type":"number","description":"Value of Budget","example":50000},"code":{"type":"string","description":"Code of the Budget","example":"Monthly_50K_USD"},"name":{"type":"string","description":"The name of the Budget","example":"Monthly 50K USD"},"currency":{"$ref":"#/components/schemas/Currency"},"startDate":{"type":"string","description":"The start date of the Budget","format":"date-time"},"endDate":{"type":"string","description":"The end date of the Budget","format":"date-time"},"selected":{"type":"boolean","description":"Boolean flag whether the budget is selected for a cost center","example":true}},"description":"Request body fields required and optional to operate on Budget data. This bean is shallow, which means its potential relationship fields to other Org Unit fields are simple ids. No Org Unit WsDTO should be declared in this bean to avoid circular references."},"BundleStarter":{"required":["productCode","quantity","templateId"],"type":"object","properties":{"templateId":{"type":"string","description":"Id of a template to create a bundle","example":"PhotoStarterPackage"},"productCode":{"type":"string","description":"Product code.","example":"29925"},"quantity":{"minimum":1,"type":"integer","description":"Quantity of the product added to cart","format":"int64","example":1}},"description":"Mandatory data required to create a bundle. This includes the templateId of the bundle, the productCode, and the quantity of the product itself."},"BundleTemplate":{"required":["id"],"type":"object","properties":{"id":{"type":"string","description":"Id of this bundle template","example":"PhotoOTGCameraComponent"},"name":{"type":"string","description":"Name of this bundle template","example":"Camera Component"},"rootBundleTemplateName":{"type":"string","description":"Name of the root bundle template within the bundle tree structure","example":"Photo On The Go Package"}},"description":"Description of a bundle component related to a product"},"CCPAttribute":{"type":"object","properties":{"key":{"type":"string","description":"Language-independent attribute key.","example":"1-CONF_LAPTOP.HARDWARE-SCREEN_SIZE"},"name":{"type":"string","description":"Language-independent attribute name as assigned in the modeling environment.","example":"SCREEN_SIZE"},"langDepName":{"type":"string","description":"Language-dependent attribute description.","example":"Screen Size"},"value":{"type":"string","description":"Attribute value, if the attribute is single-valued.","example":"17'"},"formattedValue":{"type":"string","description":"Formatted attribute value, relevant for numeric attributes. This formatting takes the session locale into account.","example":"24,87"},"longText":{"type":"string","description":"Language-dependent attribute long description.","example":"Screen size in inches"},"visible":{"type":"boolean","description":"Attribute is visible.","example":true},"required":{"type":"boolean","description":"It is required to specify this attribute in order to complete the configuration.","example":false},"type":{"type":"string","description":"Attribute type. Specifies how the attribute should be rendered ideally.","example":"CHECK_BOX_LIST","enum":["STRING","NUMERIC","CHECK_BOX","CHECK_BOX_LIST","RADIO_BUTTON","RADIO_BUTTON_ADDITIONAL_INPUT","DROPDOWN","DROPDOWN_ADDITIONAL_INPUT","READ_ONLY","NOT_IMPLEMENTED","SINGLE_SELECTION_IMAGE","MULTI_SELECTION_IMAGE","READ_ONLY_SINGLE_SELECTION_IMAGE","READ_ONLY_MULTI_SELECTION_IMAGE","SAP_DATE"]},"validationType":{"type":"string","description":"Attribute validation type. Specifies how an attribute should be validated in case it's free input.","example":"NUMERIC","enum":["NUMERIC","SAP_DATE","NONE"]},"intervalInDomain":{"type":"boolean","description":"The list of attribute domain values contain an interval. Only relevant if the attribute is of numeric type.","example":false},"maxlength":{"type":"integer","description":"Maximum length of attribute value names for all domain values.","format":"int32","example":5},"typeLength":{"type":"integer","description":"Maximum number of decimal places. Only relevant if the attribute is of numeric type.","format":"int32","example":10},"numberScale":{"type":"integer","description":"Number of decimal places. Only relevant if the attribute is of numeric type.","format":"int32","example":2},"negativeAllowed":{"type":"boolean","description":"Are negative values allowed? Only relevant if the attribute is of numeric type.","example":false},"retractTriggered":{"type":"boolean","description":"Has a retract been triggered for all values of this attribute?","example":true},"retractBlocked":{"type":"boolean","description":"Retract must never happen for this attribute because the configuration engine forbids it.","example":true},"domainOnDemand":{"type":"boolean","description":"If true domain was omitted and must be fetched separately","example":true},"domainValues":{"type":"array","description":"List of domain values.","items":{"$ref":"#/components/schemas/CCPAttributeValue"}},"conflicts":{"type":"array","description":"List of conflicts.","items":{"$ref":"#/components/schemas/CCPConflict"}},"images":{"type":"array","description":"Image list.","items":{"$ref":"#/components/schemas/Image"}},"messages":{"type":"array","description":"Message list.","items":{"$ref":"#/components/schemas/CCPMessage"}}},"description":"An attribute of a complex product."},"CCPAttributePricing":{"type":"object","properties":{"csticUiKey":{"type":"string","description":"Attribute key.","example":"1-CONF_LAPTOP.AUDIO-ACCESSORY"},"selectedValues":{"type":"array","description":"List of currently selected domain values.","items":{"type":"string","description":"List of currently selected domain values."}},"priceSupplements":{"type":"array","description":"List of value price supplements.","items":{"$ref":"#/components/schemas/CCPAttributeValuePricing"}}},"description":"Enriches an attribute with supplementary pricing data."},"CCPAttributeValue":{"type":"object","properties":{"key":{"type":"string","description":"Value key.","example":"MET_BLUE"},"name":{"type":"string","description":"Language-independent value name.","example":"MET_BLUE"},"langDepName":{"type":"string","description":"Language-dependent value description.","example":"Metallic Blue"},"selected":{"type":"boolean","description":"Indicates if value is selected.","example":false},"readonly":{"type":"boolean","description":"Indicates if value is read-only.","example":false},"longText":{"type":"string","description":"Language dependent value description.","example":"Screen size in inches"},"images":{"type":"array","description":"List of images.","items":{"$ref":"#/components/schemas/Image"}},"messages":{"type":"array","description":"Message list.","items":{"$ref":"#/components/schemas/CCPMessage"}}},"description":"Representation of an attribute value."},"CCPAttributeValueOverview":{"type":"object","properties":{"characteristic":{"type":"string","description":"Language-dependent attribute name.","example":"Accessories"},"characteristicId":{"type":"string","description":"Attribute ID","example":"ACCESSORIES"},"value":{"type":"string","description":"Language-dependent value name.","example":"Extra Audio Package"},"valueId":{"type":"string","description":"Value identifier.","example":"EXTRA_AUDIO_PACKAGE"},"price":{"$ref":"#/components/schemas/Price"},"obsoletePrice":{"$ref":"#/components/schemas/Price"},"messages":{"type":"array","description":"Message list","items":{"$ref":"#/components/schemas/CCPMessage"}}},"description":"Representation of an attribute value in the context of the configuration overview."},"CCPAttributeValuePricing":{"type":"object","properties":{"attributeValueKey":{"type":"string","description":"Value key.","example":"MET_BLUE"},"priceValue":{"$ref":"#/components/schemas/Price"},"obsoletePriceValue":{"$ref":"#/components/schemas/Price"}},"description":"Enriches an attribute value with supplementary pricing data."},"CCPConfiguration":{"type":"object","properties":{"hideBasePriceAndSelectedOptions":{"type":"boolean","description":"If active, price components 'base price' and 'selected options' are not provided, only the total price of a configuration is provided.","example":false},"configId":{"type":"string","description":"Configuration Identifier. A randomly generated UUID owned by the product configurator.","example":"ee520001-3e9a-4321-acc8-b92783c8ca4e"},"rootProduct":{"type":"string","description":"Code of the configuration root product.","example":"CONF_LAPTOP"},"consistent":{"type":"boolean","description":"Configuration is consistent, meaning it contains no conflicts.","example":true},"complete":{"type":"boolean","description":"Configuration is complete, meaning each mandatory attribute has been specified.","example":true},"quantity":{"type":"integer","description":"Configuration quantity.","format":"int64","example":1},"totalNumberOfIssues":{"type":"integer","description":"Total number of issues: sum of number of conflicts and number of incomplete mandatory fields.","format":"int32","example":1},"groups":{"type":"array","description":"Attribute groups.","items":{"$ref":"#/components/schemas/CCPGroup"}},"kbKey":{"$ref":"#/components/schemas/CCPKBData"},"pricingEnabled":{"type":"boolean","description":"Pricing is enabled, meaning that pricing related APIs are called and prices are shown during configuration.","example":true},"immediateConflictResolution":{"type":"boolean","description":"Indicates that conflicts need to be resolved immediately, before any other action is taken.","example":true},"messages":{"type":"array","description":"Message list","items":{"$ref":"#/components/schemas/CCPMessage"}},"newConfiguration":{"type":"boolean","description":"Indicates whether the configuration is a new configuration.","example":true}},"description":"Representation of a product configuration. Contains the entities that describe a complex product: attributes of different types, groups of attributes, hierarchies of groups, statuses and messages. Typically, the attributes are connected through dependencies."},"CCPConfigurationOverallPricing":{"type":"object","properties":{"basePrice":{"$ref":"#/components/schemas/Price"},"selectedOptions":{"$ref":"#/components/schemas/Price"},"currentTotal":{"$ref":"#/components/schemas/Price"},"currentTotalSavings":{"$ref":"#/components/schemas/Price"}},"description":"Prices on overall product configuration level."},"CCPConfigurationOverview":{"type":"object","properties":{"sourceDocumentId":{"type":"string","description":"Identifier of document that owns this configuration. Can be the identifier of a saved cart, a quote, or an order.","example":"0001012345"},"id":{"type":"string","description":"Configuration Identifier. A randomly generated UUID owned by the product configurator.","example":"ee520001-3e9a-4321-acc8-b92783c8ca4e"},"productCode":{"type":"string","description":"Product code of configuration's root product.","example":"CONF_LAPTOP"},"totalNumberOfIssues":{"type":"integer","description":"Total number of issues: sum of number of conflicts and number of incomplete mandatory fields.","format":"int32","example":1},"numberOfIncompleteCharacteristics":{"type":"integer","description":"Total number of incomplete attributes.","format":"int32","example":1},"numberOfConflicts":{"type":"integer","description":"Total number of conflicts.","format":"int32","example":1},"appliedCsticFilter":{"type":"array","description":"For filtering the configuration overview according to attribute facets such as price relevance or attribute author.","items":{"$ref":"#/components/schemas/CCPFilterData"}},"groupFilterList":{"type":"array","description":"For filtering the configuration overview according to the UI groups.","items":{"$ref":"#/components/schemas/CCPFilterData"}},"groups":{"type":"array","description":"Configuration overview groups.","items":{"$ref":"#/components/schemas/CCPGroupOverview"}},"pricing":{"$ref":"#/components/schemas/CCPConfigurationOverallPricing"},"pricingEnabled":{"type":"boolean","description":"Pricing is enabled, meaning that pricing related APIs are called and prices are shown during configuration.","example":true},"messages":{"type":"array","description":"Message list.","items":{"$ref":"#/components/schemas/CCPMessage"}}},"description":"Representation of a product configuration overview, a condensed read-only view of a product configuration. Contains only the selected values."},"CCPConfigurationPricing":{"type":"object","properties":{"configId":{"type":"string","description":"Configuration Identifier. A randomly generated UUID owned by the product configurator.","example":"ee520001-3e9a-4321-acc8-b92783c8ca4e"},"showDeltaPrices":{"type":"boolean","description":"Indicates that attribute surcharges are displayed relatively to the current attribute price.","example":true},"pricingError":{"type":"boolean","description":"Indicates that pricing is currently not available.","example":false},"attributes":{"type":"array","description":"List of supplementary data on attribute level.","items":{"$ref":"#/components/schemas/CCPAttributePricing"}},"priceSummary":{"$ref":"#/components/schemas/CCPConfigurationOverallPricing"}},"description":"Enriches a product configuration with supplementary pricing data."},"CCPConfigurationProductVariant":{"type":"object","properties":{"productCode":{"type":"string","description":"Product Code."},"name":{"type":"string","description":"Language-dependent product name."},"price":{"$ref":"#/components/schemas/Price"},"imageData":{"$ref":"#/components/schemas/Image"}},"description":"Product variant of a configurable product."},"CCPConflict":{"type":"object","properties":{"text":{"type":"string","description":"Language-dependent conflict text.","example":"It is not possible to select the extra audio package and the docking station T20 in parallel. Review your selections."}},"description":"Textual representation of a conflict."},"CCPFilterData":{"type":"object","properties":{"key":{"type":"string","description":"Identifier of the filter. Can contain the UI group identifier or an enum representing different attribute facets such as 'USER_INPUT' or 'PRICE_RELEVANT'.","example":"USER_INPUT"},"selected":{"type":"boolean","description":"Describes if filter item is selected.","example":true}},"description":"Bean used for filtering the configuration overview."},"CCPGroup":{"type":"object","properties":{"id":{"type":"string","description":"Group Identifier.","example":"1-CONF_LAPTOP.AUDIO"},"name":{"type":"string","description":"Language independent group name.","example":"AUDIO"},"description":{"type":"string","description":"Language dependent group description.","example":"Audio Options"},"configurable":{"type":"boolean","description":"Group contains attributes. False if the group represents a non-configurable leaf in the configuration hierarchy.","example":true},"consistent":{"type":"boolean","description":"Group is consistent, meaning it contains no conflicts.","example":true},"complete":{"type":"boolean","description":"Group is complete, meaning each mandatory attribute has been specified.","example":true},"groupType":{"type":"string","description":"INSTANCE."},"attributes":{"type":"array","description":"List of attributes.","items":{"$ref":"#/components/schemas/CCPAttribute"}},"subGroups":{"type":"array","description":"List of subordinate groups.","items":{"$ref":"#/components/schemas/CCPGroup"}}},"description":"Representation of a group in the context of the product configuration."},"CCPGroupOverview":{"type":"object","properties":{"id":{"type":"string","description":"Group Identifier.","example":"1-CONF_LAPTOP.GROUP1"},"groupDescription":{"type":"string","description":"Language-dependent group description.","example":"Audio Options"},"groupType":{"type":"string","description":"Type of group.","example":"CONFLICT"},"characteristicValues":{"type":"array","description":"Attribute values.","items":{"$ref":"#/components/schemas/CCPAttributeValueOverview"}},"subGroups":{"type":"array","description":"List of subordinate groups.","items":{"$ref":"#/components/schemas/CCPGroupOverview"}}},"description":"Representation of a group in the context of the product configuration overview."},"CCPKBData":{"type":"object","properties":{"kbName":{"type":"string","description":"Knowledge base name.","example":"KB_CONF_LAPTOP"},"kbLogsys":{"type":"string","description":"Logical system identifier of source system.","example":"YXZCLNT200"},"kbVersion":{"type":"string","description":"Knowledge base version.","example":"1.0"},"kbBuildNumber":{"type":"string","description":"Knowledge base build number.","example":"23"}},"description":"Representation of knowledge base key and administrative data."},"CCPMessage":{"type":"object","properties":{"message":{"type":"string","description":"Message text.","example":"Message text."},"severity":{"type":"string","description":"Message severity.","example":"INFO"},"promoType":{"type":"string","description":"Message promotion type.","example":"PROMO_APPLIED"},"extendedMessage":{"type":"string","description":"Extended message text.","example":"Extended message text"},"endDate":{"type":"string","description":"Offer expiration date.","example":"11/30/22"}},"description":"Product configuration message."},"CCPOrderEntry":{"type":"object","properties":{"entryNumber":{"type":"integer","description":"Entry number of the order entry","format":"int32"},"quantity":{"type":"integer","description":"Quantity number of items in order entry","format":"int64"},"basePrice":{"$ref":"#/components/schemas/Price"},"totalPrice":{"$ref":"#/components/schemas/Price"},"product":{"$ref":"#/components/schemas/Product"},"updateable":{"type":"boolean","description":"Flag defining if order entry item is updateable"},"deliveryMode":{"$ref":"#/components/schemas/DeliveryMode"},"configurationInfos":{"type":"array","description":"Configuration info of order entry","items":{"$ref":"#/components/schemas/ConfigurationInfo"}},"statusSummaryList":{"type":"array","description":"List of aggregated status information per entry, relevant if the entry is configurable and its configuration contains one or many issues in different severities. Note that configurators typically raise such issues only in case the parent document is changeable. In this case the issues (depending on their severity) need to be fixed before a checkout can be done. This means this segment can be present for a cart entry, for order entries it will always be empty","items":{"$ref":"#/components/schemas/StatusSummary"}},"deliveryPointOfService":{"$ref":"#/components/schemas/PointOfService"},"cancelledItemsPrice":{"$ref":"#/components/schemas/Price"},"cancellableQuantity":{"type":"integer","description":"Quantity number of cancellable items in order entry","format":"int64","example":5},"returnedItemsPrice":{"$ref":"#/components/schemas/Price"},"returnableQuantity":{"type":"integer","description":"Quantity number of returnable items in order entry","format":"int64","example":5},"arrivalSlots":{"type":"array","description":"List of item arrival slot","items":{"$ref":"#/components/schemas/EntryArrivalSlot"}},"comments":{"type":"array","description":"List of order entry comments.","items":{"$ref":"#/components/schemas/Comment"}},"url":{"type":"string"},"quantityAllocated":{"type":"integer","format":"int64"},"quantityUnallocated":{"type":"integer","format":"int64"},"quantityCancelled":{"type":"integer","format":"int64"},"quantityPending":{"type":"integer","format":"int64"},"quantityShipped":{"type":"integer","format":"int64"},"quantityReturned":{"type":"integer","format":"int64"},"configId":{"type":"string","description":"Configuration Identifier. A randomly generated UUID owned by the product configurator.","example":"ee520001-3e9a-4321-acc8-b92783c8ca4e"}},"description":"Requests body parameter that contains attributes for creating the order entry, such as quantity, product code, and configuration identifier."},"CMSPageList":{"type":"object","properties":{"page":{"type":"array","items":{"$ref":"#/components/schemas/CMSPage"}}}},"CMSPage":{"type":"object","properties":{"uid":{"type":"string"},"uuid":{"type":"string"},"title":{"type":"string"},"template":{"type":"string"},"typeCode":{"type":"string"},"name":{"type":"string"},"description":{"type":"string"},"robotTag":{"type":"string"},"defaultPage":{"type":"boolean"},"contentSlots":{"$ref":"#/components/schemas/ContentSlotList"},"catalogVersionUuid":{"type":"string"},"otherProperties":{"type":"object","additionalProperties":{"type":"object"}}}},"CXML":{"type":"object","properties":{"version":{"type":"string","xml":{"attribute":true}},"payloadID":{"type":"string","xml":{"attribute":true}},"timestamp":{"type":"string","xml":{"attribute":true}},"signatureVersion":{"type":"string","xml":{"attribute":true}},"xmlLang":{"type":"string","xml":{"name":"xml:lang","attribute":true}},"headerOrMessageOrRequestOrResponse":{"type":"array","items":{"type":"object"}},"dsSignature":{"type":"array","xml":{"name":"ds:Signature"},"items":{"$ref":"#/components/schemas/DsSignature"}}},"description":"The cXML containing the order to be processed. It consists of a header that contains fields such as order id, order date,ship to and tax. The payload contains information pertaining to individual items ordered.","xml":{"name":"cXML"}},"CancellationRequestEntryInput":{"required":["orderEntryNumber","quantity"],"type":"object","properties":{"orderEntryNumber":{"type":"integer","description":"Order entry number of the cancelled product","format":"int32","example":1},"quantity":{"type":"integer","description":"Quantity of the product which belongs to the order entry and is requested to be cancelled","format":"int64","example":5}},"description":"Representation of a cancellation request entry input for an order"},"CancellationRequestEntryInputList":{"required":["cancellationRequestEntryInputs"],"type":"object","properties":{"cancellationRequestEntryInputs":{"type":"array","description":"Cancellation request entry inputs which contain information about the order entries which are requested to be cancelled","items":{"$ref":"#/components/schemas/CancellationRequestEntryInput"}}},"description":"Cancellation request input list for the current order."},"CaptchaConfig":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Indicates if the captcha is enabled or not","example":true},"publicKey":{"type":"string","description":"The public key used in captcha validation","example":"6LdeF6tgAAAAAE_T55TB0nmg--qmbnkwqC4LPQbg"}},"description":"Configuration information of captcha"},"CardType":{"type":"object","properties":{"code":{"type":"string","description":"Card type code"},"name":{"type":"string","description":"Card type name"}},"description":"Representation of a Card Type"},"CardTypeList":{"type":"object","properties":{"cardTypes":{"type":"array","description":"List of card types","items":{"$ref":"#/components/schemas/CardType"}}},"description":"Representation of a Card Type List"},"Cart":{"type":"object","properties":{"code":{"type":"string","description":"Code number of order"},"net":{"type":"boolean","description":"Flag stating iv value is net-value"},"totalPriceWithTax":{"$ref":"#/components/schemas/Price"},"totalPrice":{"$ref":"#/components/schemas/Price"},"totalTax":{"$ref":"#/components/schemas/Price"},"subTotal":{"$ref":"#/components/schemas/Price"},"deliveryCost":{"$ref":"#/components/schemas/Price"},"entries":{"type":"array","description":"List of order entries","items":{"$ref":"#/components/schemas/OrderEntry"}},"entryGroups":{"type":"array","description":"List of entry groups","items":{"$ref":"#/components/schemas/EntryGroup"}},"totalItems":{"type":"integer","format":"int32"},"deliveryMode":{"$ref":"#/components/schemas/DeliveryMode"},"deliveryAddress":{"$ref":"#/components/schemas/Address"},"paymentInfo":{"$ref":"#/components/schemas/PaymentDetails"},"appliedOrderPromotions":{"type":"array","description":"List of applied order promotions","items":{"$ref":"#/components/schemas/PromotionResult"}},"appliedProductPromotions":{"type":"array","description":"List of applied product promotions","items":{"$ref":"#/components/schemas/PromotionResult"}},"productDiscounts":{"$ref":"#/components/schemas/Price"},"orderDiscounts":{"$ref":"#/components/schemas/Price"},"totalDiscounts":{"$ref":"#/components/schemas/Price"},"site":{"type":"string","description":"Site"},"store":{"type":"string","description":"Store"},"guid":{"type":"string","description":"Guest user id identifier"},"calculated":{"type":"boolean","description":"Flag showing if order is calculated"},"appliedVouchers":{"type":"array","description":"List of applied vouchers","items":{"$ref":"#/components/schemas/Voucher"}},"user":{"$ref":"#/components/schemas/Principal"},"pickupOrderGroups":{"type":"array","description":"List of pickup order entry group","items":{"$ref":"#/components/schemas/PickupOrderEntryGroup"}},"deliveryOrderGroups":{"type":"array","description":"List of delivery order entries group","items":{"$ref":"#/components/schemas/DeliveryOrderEntryGroup"}},"pickupItemsQuantity":{"type":"integer","description":"Quantity of pickup items","format":"int64"},"deliveryItemsQuantity":{"type":"integer","description":"Quantity of delivery items","format":"int64"},"requestedRetrievalAt":{"type":"string","description":"Customer requested date for order retrieval"},"sapBillingAddress":{"$ref":"#/components/schemas/Address"},"sapCustomerEmail":{"type":"string","description":"Email of customer.","example":"xxx.yy@zz.com"},"sapPaymentOptionId":{"type":"string","description":"The payment option identifier. It specifies which option the consumer selected to make the payment for the cart.","example":"123456789"},"paymentType":{"$ref":"#/components/schemas/B2BPaymentTypeData"},"purchaseOrderNumber":{"type":"string"},"deliveryTimeSlot":{"$ref":"#/components/schemas/DeliveryTimeSlot"},"chinesePaymentInfo":{"$ref":"#/components/schemas/ChinesePaymentInfo"},"paymentStatus":{"type":"string","description":"Payment status","example":"PAID"},"taxInvoice":{"$ref":"#/components/schemas/TaxInvoice"},"totalUnitCount":{"type":"integer","description":"Total unit count","format":"int32"},"potentialOrderPromotions":{"type":"array","description":"List of potential order promotions for cart","items":{"$ref":"#/components/schemas/PromotionResult"}},"potentialProductPromotions":{"type":"array","description":"List of potential product promotions for cart","items":{"$ref":"#/components/schemas/PromotionResult"}},"name":{"type":"string","description":"Name of the cart"},"description":{"type":"string","description":"Description of the cart"},"expirationTime":{"type":"string","description":"Date of cart expiration time","format":"date-time"},"saveTime":{"type":"string","description":"Date of saving cart","format":"date-time"},"savedBy":{"$ref":"#/components/schemas/Principal"},"earliestRetrievalAt":{"type":"string","description":"Earliest possible retrieval date available for order"},"_messages":{"type":"array","description":"Messages about supplementary info, warning messages related to the cart","items":{"$ref":"#/components/schemas/ApiMessage"}},"costCenter":{"$ref":"#/components/schemas/B2BCostCenter"},"sapQuote":{"$ref":"#/components/schemas/Quote"}},"description":"Representation of a Cart. Note that sapBillingAddress is mutually exclusive with paymentInfo.billingAddress, which is used when the billing address is created concurrently with the paymentInfo. sapBillingAddress is used when there is a need to save the billing address, but the related paymentInfo has not been created yet."},"CartList":{"type":"object","properties":{"carts":{"type":"array","description":"List of carts","items":{"$ref":"#/components/schemas/Cart"}}},"description":"Representation of a Cart list"},"CartModification":{"type":"object","properties":{"statusCode":{"type":"string","description":"Status code of cart modification"},"quantityAdded":{"type":"integer","description":"Quantity added with cart modification","format":"int64"},"quantity":{"type":"integer","description":"Total number of products to be created, added or updated during a cart modification. This value is always the quantity that has been requested.","format":"int64"},"entry":{"$ref":"#/components/schemas/OrderEntry"},"deliveryModeChanged":{"type":"boolean","description":"Delivery mode changed"},"statusMessage":{"type":"string","description":"Status message"}},"description":"Representation of a Cart modification"},"CartModificationList":{"type":"object","properties":{"cartModifications":{"type":"array","description":"List of cart modifications","items":{"$ref":"#/components/schemas/CartModification"}}},"description":"Representation of a Cart modification list"},"Catalog":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of abstract catalog item"},"lastModified":{"type":"string","description":"Date of last modification","format":"date-time"},"name":{"type":"string","description":"Name of abstract catalog item"},"url":{"type":"string","description":"Url address of abstract catalog item"},"catalogVersions":{"type":"array","description":"List of versions of catalog","items":{"$ref":"#/components/schemas/CatalogVersion"}}},"description":"Representation of a Catalog"},"CatalogList":{"type":"object","properties":{"catalogs":{"type":"array","description":"List of catalog items","items":{"$ref":"#/components/schemas/Catalog"}}},"description":"Representation of a Catalog List"},"CatalogVersion":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of abstract catalog item"},"lastModified":{"type":"string","description":"Date of last modification","format":"date-time"},"name":{"type":"string","description":"Name of abstract catalog item"},"url":{"type":"string","description":"Url address of abstract catalog item"},"categories":{"type":"array","description":"List of category hierarchies","items":{"$ref":"#/components/schemas/CategoryHierarchy"}}},"description":"Representation of a Catalog Version"},"Category":{"type":"object","properties":{"code":{"type":"string","description":"Code of the category"},"name":{"type":"string","description":"Name of the category"},"url":{"type":"string","description":"URL of the category"},"image":{"$ref":"#/components/schemas/Image"}},"description":"Representation of a Category"},"CategoryHierarchy":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of abstract catalog item"},"lastModified":{"type":"string","description":"Date of last modification","format":"date-time"},"name":{"type":"string","description":"Name of abstract catalog item"},"url":{"type":"string","description":"Url address of abstract catalog item"},"subcategories":{"type":"array","description":"List of subcategory hierarchies","items":{"$ref":"#/components/schemas/CategoryHierarchy"}},"products":{"type":"array","items":{"$ref":"#/components/schemas/Product"}}},"description":"Representation of a Category Hierarchy"},"ChinesePaymentInfo":{"type":"object","properties":{"id":{"type":"string","description":"Chinese payment info identifier"},"paymentProvider":{"type":"string","description":"Payment provider of Chinese payment info"},"serviceType":{"type":"string","description":"The serviceType which is used for payment and defined in different payment providers","example":"DirectPay"},"paymentProviderLogo":{"type":"string","description":"Logo url of payment provider","example":"/medias/wechatpay.png?context=CONTEXT"},"paymentProviderName":{"type":"string","description":"Name of payment provider"}},"description":"Chinese payment info"},"City":{"type":"object","properties":{"isocode":{"type":"string","description":"ISO 3166-1 alpha-2 standard, e.g.[countryIso]-[regionNumber]-[cityNumber]","example":"CN-11-1"},"name":{"type":"string","description":"name of city","example":"Beijing"}},"description":"data object of city"},"CityList":{"type":"object","properties":{"cities":{"type":"array","description":"list of city","items":{"$ref":"#/components/schemas/City"}}},"description":"list of city"},"Classification":{"type":"object","properties":{"code":{"type":"string","description":"Code of the classification"},"name":{"type":"string","description":"Name of the classification"},"features":{"type":"array","description":"List of features for given classification","items":{"$ref":"#/components/schemas/Feature"}}},"description":"Representation of a Classification"},"Comment":{"required":["creationDate","fromCustomer","text"],"type":"object","properties":{"text":{"type":"string","description":"Text of the comment.","example":"Text of the comment"},"creationDate":{"type":"string","description":"Date when the comment was created.","format":"date-time"},"author":{"$ref":"#/components/schemas/Principal"},"fromCustomer":{"type":"boolean","description":"Flag showing if the current customer was the author of the comment.","example":true}},"description":"Object of the comment, which can be added to any Item in the commerce suite."},"ComponentIDList":{"type":"object","properties":{"idList":{"type":"array","items":{"type":"string"}}},"description":"List of component identifiers"},"ComponentList":{"type":"object","properties":{"component":{"type":"array","items":{"$ref":"#/components/schemas/Component"}}}},"Component":{"type":"object","properties":{"uid":{"type":"string"},"uuid":{"type":"string"},"typeCode":{"type":"string"},"modifiedtime":{"type":"string","format":"date-time"},"name":{"type":"string"},"otherProperties":{"type":"object","additionalProperties":{"type":"object"}}}},"ConfigurationInfo":{"type":"object","properties":{"configuratorType":{"type":"string","description":"Type of configuration info"},"status":{"type":"string","description":"Status of configuration info"},"configurationLabel":{"type":"string","description":"Label of configuration info"},"configurationValue":{"type":"string","description":"Value of configuration info"}},"description":"Representation of a Configuration Info"},"ConfigurationInfoList":{"type":"object","properties":{"configurationInfos":{"type":"array","description":"List of configuration info","items":{"$ref":"#/components/schemas/ConfigurationInfo"}}},"description":"Request body parameter (DTO in xml or json format) which contains details like : product code (product.code), quantity of product (quantity), pickup store name (deliveryPointOfService.name)"},"Consent":{"type":"object","properties":{"code":{"type":"string","description":"Code of consent"},"consentGivenDate":{"type":"string","description":"Date of consenting","format":"date-time"},"consentWithdrawnDate":{"type":"string","description":"Consent withdrawn date","format":"date-time"}},"description":"Representation of a Consent"},"ConsentTemplate":{"type":"object","properties":{"id":{"type":"string","description":"Consent template identifier"},"name":{"type":"string","description":"Consent template name"},"description":{"type":"string","description":"Consent template description"},"version":{"type":"integer","description":"Consent template version","format":"int32"},"currentConsent":{"$ref":"#/components/schemas/Consent"}},"description":"Representation of a Consent Template"},"ConsentTemplateList":{"type":"object","properties":{"consentTemplates":{"type":"array","description":"List of consent templates","items":{"$ref":"#/components/schemas/ConsentTemplate"}}},"description":"Representation of a Consent Template List"},"Consignment":{"type":"object","properties":{"code":{"type":"string","description":"Consignment code"},"trackingID":{"type":"string","description":"Consignment tracking identifier"},"status":{"type":"string","description":"Consignment status"},"statusDisplay":{"type":"string","description":"Consignment status display"},"statusDate":{"type":"string","description":"Consignment status date","format":"date-time"},"entries":{"type":"array","description":"List of consignment entries","items":{"$ref":"#/components/schemas/ConsignmentEntry"}},"shippingAddress":{"$ref":"#/components/schemas/Address"},"deliveryPointOfService":{"$ref":"#/components/schemas/PointOfService"},"arrivalSlot":{"$ref":"#/components/schemas/EntryArrivalSlot"},"orderCode":{"type":"string"},"shippingDate":{"type":"string","format":"date-time"},"deliveryMode":{"$ref":"#/components/schemas/DeliveryMode"},"warehouseCode":{"type":"string"},"packagingInfo":{"$ref":"#/components/schemas/PackagingInfo"}},"description":"Representation of a Consignment"},"ConsignmentEntry":{"type":"object","properties":{"orderEntry":{"$ref":"#/components/schemas/OrderEntry"},"quantity":{"type":"integer","description":"Quantity value of Consignment entry","format":"int64"},"shippedQuantity":{"type":"integer","description":"Shipped quantity","format":"int64"},"quantityDeclined":{"type":"integer","format":"int64"},"quantityPending":{"type":"integer","format":"int64"},"quantityShipped":{"type":"integer","format":"int64"}},"description":"Representation of a Consignment Entry"},"ContentSlotList":{"type":"object","properties":{"contentSlot":{"type":"array","items":{"$ref":"#/components/schemas/ContentSlot"}}}},"ContentSlot":{"type":"object","properties":{"slotId":{"type":"string"},"slotUuid":{"type":"string"},"position":{"type":"string"},"name":{"type":"string"},"slotShared":{"type":"boolean"},"slotStatus":{"type":"string"},"components":{"$ref":"#/components/schemas/ComponentList"},"otherProperties":{"type":"object","additionalProperties":{"type":"object"}}}},"Country":{"type":"object","properties":{"isocode":{"type":"string","description":"Country code in iso format","example":"US"},"name":{"type":"string","description":"Name of the country","example":"United States"}},"description":"Response body fields which will be returned while fetching the list of countries. The DTO is in XML or .json format"},"CountryList":{"type":"object","properties":{"countries":{"type":"array","description":"This is the list of Country fields that should be returned in the response body","items":{"$ref":"#/components/schemas/Country"}}},"description":"List of countries"},"CreateComment":{"required":["text"],"type":"object","properties":{"text":{"type":"string","description":"Text of the comment.","example":"Text of the comment"}},"description":"Text of the comment"},"CreateVerificationTokenInput":{"required":["loginId","purpose"],"type":"object","properties":{"purpose":{"type":"string","description":"Purpose for which the verification token is requested.","enum":["LOGIN","REGISTRATION"]},"loginId":{"type":"string","description":"User login identifier. Target to receive verification token code.","example":"keenreviewer@sap.com"},"password":{"type":"string","description":"User password to authenticate the request. This field is required when the purpose is LOGIN.","example":"mypwd!0"}},"description":"Object contains information for obtaining a verification token."},"Currency":{"type":"object","properties":{"isocode":{"type":"string","description":"Code of the currency in iso format"},"name":{"type":"string","description":"Name of the currency"},"active":{"type":"boolean","description":"Boolean flag whether currency is active"},"symbol":{"type":"string","description":"Symbol of the currency"}},"description":"Representation of a Currency"},"CurrencyList":{"type":"object","properties":{"currencies":{"type":"array","description":"List of currencies","items":{"$ref":"#/components/schemas/Currency"}}},"description":"Representation of a Currency List"},"CustomerCoupon":{"type":"object","properties":{"couponId":{"type":"string","description":"Coupon identifier"},"name":{"type":"string","description":"Name of the coupon"},"startDate":{"type":"string","description":"Start date of the coupon","format":"date-time"},"endDate":{"type":"string","description":"End date of the coupon","format":"date-time"},"status":{"type":"string","description":"Status of the coupon","example":"Effective"},"description":{"type":"string","description":"Description of the coupon"},"notificationOn":{"type":"boolean","description":"Indicates if notification is enabled or disabled"},"allProductsApplicable":{"type":"boolean","description":"Indicates whether the coupon is applicable for all products"}},"description":"Customer coupon"},"CustomerCoupon2Customer":{"type":"object","properties":{"coupon":{"$ref":"#/components/schemas/CustomerCoupon"},"customer":{"$ref":"#/components/schemas/User"}},"description":"Customer coupon for customer"},"CustomerCouponNotification":{"type":"object","properties":{"coupon":{"$ref":"#/components/schemas/CustomerCoupon"},"customer":{"$ref":"#/components/schemas/User"},"status":{"type":"string","description":"Notification status","example":"EFFECTIVESENT"}},"description":"Customer coupon notification"},"CustomerCouponSearchResult":{"type":"object","properties":{"coupons":{"type":"array","description":"List of coupon","items":{"$ref":"#/components/schemas/CustomerCoupon"}},"sorts":{"type":"array","description":"Sorting information","items":{"$ref":"#/components/schemas/sort"}},"pagination":{"$ref":"#/components/schemas/pagination"}},"description":"Customer coupon search result"},"DayRange":{"required":["minBoundary"],"type":"object","properties":{"minBoundary":{"type":"integer","description":"Minimum day range.","format":"int32","example":31},"maxBoundary":{"type":"integer","description":"Maximum day range. The value null is used for infinite ranges. For example, a minBoundary of 91 and a maxBoundary of null represents a 91+ day range.","format":"int32","example":60}},"description":"Maximum and minimum limits of the day range."},"DeliveryMode":{"type":"object","properties":{"code":{"type":"string","description":"Code of the delivery mode","example":"premium-gross"},"name":{"type":"string","description":"Name of the delivery mode","example":"Premium Delivery"},"description":{"type":"string","description":"Description of the delivery mode","example":"1-2 business days"},"deliveryCost":{"$ref":"#/components/schemas/Price"}},"description":"Representation of a Delivery mode"},"DeliveryModeList":{"type":"object","properties":{"deliveryModes":{"type":"array","description":"List of delivery modes","items":{"$ref":"#/components/schemas/DeliveryMode"}}},"description":"Representation of a Delivery mode list"},"DeliveryOrderEntryGroup":{"type":"object","properties":{"totalPriceWithTax":{"$ref":"#/components/schemas/Price"},"entries":{"type":"array","description":"List of order entries","items":{"$ref":"#/components/schemas/OrderEntry"}},"quantity":{"type":"integer","description":"Quantity of order entries in a group","format":"int64"},"deliveryAddress":{"$ref":"#/components/schemas/Address"}},"description":"Representation of a Delivery Order Entry Group"},"DeliveryTimeSlot":{"type":"object","properties":{"code":{"type":"string","description":"delivery timeslot code"},"name":{"type":"string","description":"delivery timeslot name"}},"description":"data type of delivery timeslot"},"District":{"type":"object","properties":{"isocode":{"type":"string","description":"ISO 3166-1 alpha-2 standard, e.g.[countryIso]-[regionNumber]-[cityNumber]-[districtNumber]"},"name":{"type":"string","description":"name of district","example":"Dongcheng District"}},"description":"data object of district"},"DistrictList":{"type":"object","properties":{"districts":{"type":"array","description":"list of district","items":{"$ref":"#/components/schemas/District"}}},"description":"list of district"},"DsCanonicalizationMethod":{"type":"object","properties":{"algorithm":{"type":"string","xml":{"name":"Algorithm","attribute":true}},"getvalue":{"type":"string"}},"xml":{"name":"ds:CanonicalizationMethod"}},"DsDigestMethod":{"type":"object","properties":{"algorithm":{"type":"string","xml":{"name":"Algorithm","attribute":true}},"getvalue":{"type":"string"}},"xml":{"name":"ds:DigestMethod"}},"DsKeyInfo":{"type":"object","properties":{"id":{"type":"string","xml":{"name":"Id","attribute":true}},"getvalue":{"type":"string"}},"xml":{"name":"ds:KeyInfo"}},"DsObject":{"type":"object","properties":{"id":{"type":"string","xml":{"name":"Id","attribute":true}},"mimeType":{"type":"string","xml":{"name":"MimeType","attribute":true}},"encoding":{"type":"string","xml":{"name":"Encoding","attribute":true}},"getvalue":{"type":"string"}},"xml":{"name":"ds:Object"}},"DsReference":{"required":["dsDigestMethod","dsDigestValue"],"type":"object","properties":{"id":{"type":"string","xml":{"name":"Id","attribute":true}},"uri":{"type":"string","xml":{"name":"URI","attribute":true}},"type":{"type":"string","xml":{"name":"Type","attribute":true}},"dsTransforms":{"$ref":"#/components/schemas/DsTransforms"},"dsDigestMethod":{"$ref":"#/components/schemas/DsDigestMethod"},"dsDigestValue":{"type":"string","xml":{"name":"ds:DigestValue"}}},"xml":{"name":"ds:Reference"}},"DsSignature":{"required":["dsSignatureValue","dsSignedInfo"],"type":"object","properties":{"xmlnsDs":{"type":"string","xml":{"name":"xmlns:ds","attribute":true}},"xmlnsXades":{"type":"string","xml":{"name":"xmlns:xades","attribute":true}},"id":{"type":"string","xml":{"name":"Id","attribute":true}},"dsSignedInfo":{"$ref":"#/components/schemas/DsSignedInfo"},"dsSignatureValue":{"$ref":"#/components/schemas/DsSignatureValue"},"dsKeyInfo":{"$ref":"#/components/schemas/DsKeyInfo"},"dsObject":{"type":"array","xml":{"name":"ds:Object"},"items":{"$ref":"#/components/schemas/DsObject"}}},"xml":{"name":"ds:Signature"}},"DsSignatureMethod":{"type":"object","properties":{"algorithm":{"type":"string","xml":{"name":"Algorithm","attribute":true}},"getvalue":{"type":"string"}},"xml":{"name":"ds:SignatureMethod"}},"DsSignatureValue":{"type":"object","properties":{"id":{"type":"string","xml":{"name":"Id","attribute":true}},"getvalue":{"type":"string"}},"xml":{"name":"ds:SignatureValue"}},"DsSignedInfo":{"required":["dsCanonicalizationMethod","dsReference","dsSignatureMethod"],"type":"object","properties":{"id":{"type":"string","xml":{"name":"Id","attribute":true}},"dsCanonicalizationMethod":{"$ref":"#/components/schemas/DsCanonicalizationMethod"},"dsSignatureMethod":{"$ref":"#/components/schemas/DsSignatureMethod"},"dsReference":{"type":"array","xml":{"name":"ds:Reference"},"items":{"$ref":"#/components/schemas/DsReference"}}},"xml":{"name":"ds:SignedInfo"}},"DsTransform":{"type":"object","properties":{"algorithm":{"type":"string","xml":{"name":"Algorithm","attribute":true}},"getvalue":{"type":"string"}},"xml":{"name":"ds:Transform"}},"DsTransforms":{"required":["dsTransform"],"type":"object","properties":{"dsTransform":{"type":"array","xml":{"name":"ds:Transform"},"items":{"$ref":"#/components/schemas/DsTransform"}}},"xml":{"name":"ds:Transforms"}},"DueBalanceRange":{"type":"object","properties":{"dayRange":{"$ref":"#/components/schemas/DayRange"},"amount":{"type":"string","description":"Amount due in the specified range.","example":"$300.00"}},"description":"Amount due in the specified day range."},"EntryArrivalSlot":{"type":"object","properties":{"quantity":{"type":"number","description":"Represents the number of items expected to arrive.","format":"double","example":12},"at":{"type":"string","description":"The date associated with the expected arrival slot.","format":"date-time","example":"2024-01-18T17:40:46+05:30"},"accuracy":{"type":"string","description":"The accuracy of the arrival slot as estimated, or unknown.","example":"ESTIMATED","enum":["ESTIMATED","UNKNOWN"]}},"description":"Records of item arrivals facilitate the tracking and management of item quantities, associated arrival times, and certainty levels. These records distinguish between guaranteed, estimated, and unknown arrival scenarios."},"EntryGroup":{"type":"object","properties":{"entries":{"type":"array","description":"List of order entries","items":{"$ref":"#/components/schemas/OrderEntry"}},"entryGroups":{"type":"array","description":"List of child entry groups","items":{"$ref":"#/components/schemas/EntryGroup"}},"entryGroupNumber":{"type":"integer","description":"Identifier of the entry group","format":"int32","example":1},"label":{"type":"string","description":"Label for the entry group","example":"Photo On The Go Package"},"erroneous":{"type":"boolean","description":"Indicates if the entry group is in an error state","example":true},"type":{"type":"string","description":"Indicates type of the group, possible values are STANDALONE, CONFIGURABLEBUNDLE or any customer implemented type for any new provider","example":"STANDALONE"}},"description":"Representation of an Entry Group"},"Facet":{"type":"object","properties":{"name":{"type":"string","description":"Name of the facet"},"priority":{"type":"integer","description":"Priority value of the facet","format":"int32"},"category":{"type":"boolean","description":"Flag stating if facet is category facet"},"multiSelect":{"type":"boolean","description":"Flag stating if facet is multiSelect"},"visible":{"type":"boolean","description":"Flag stating if facet is visible"},"topValues":{"type":"array","description":"List of top facet values","items":{"$ref":"#/components/schemas/FacetValue"}},"values":{"type":"array","description":"List of all facet values","items":{"$ref":"#/components/schemas/FacetValue"}}},"description":"Representation of a Facet"},"FacetValue":{"type":"object","properties":{"name":{"type":"string","description":"Name of the facet value"},"count":{"type":"integer","description":"Count of the facet value","format":"int64"},"query":{"$ref":"#/components/schemas/SearchState"},"selected":{"type":"boolean","description":"Flag stating if facet value is selected"}},"description":"Representation of a Facet Value"},"Feature":{"type":"object","properties":{"code":{"type":"string","description":"Code of the feature"},"name":{"type":"string","description":"Name of the feature"},"description":{"type":"string","description":"Description of the feature"},"type":{"type":"string","description":"Type of the feature"},"range":{"type":"boolean","description":"Range number of the feature"},"comparable":{"type":"boolean","description":"Flag defining it feature is comparable"},"featureUnit":{"$ref":"#/components/schemas/FeatureUnit"},"featureValues":{"type":"array","description":"List of feature values","items":{"$ref":"#/components/schemas/FeatureValue"}}},"description":"Representation of a Feature"},"FeatureUnit":{"type":"object","properties":{"symbol":{"type":"string","description":"Symbol of the feature unit"},"name":{"type":"string","description":"Name of the feature unit"},"unitType":{"type":"string","description":"Type of the feature unit"}},"description":"Representation of a Feature Unit"},"FeatureValue":{"type":"object","properties":{"value":{"type":"string","description":"Value of the feature"}},"description":"Representation of a Feature Value"},"FutureStock":{"type":"object","properties":{"stock":{"$ref":"#/components/schemas/Stock"},"date":{"type":"string","description":"Date of future stock","format":"date-time"},"formattedDate":{"type":"string","description":"Date of future stock expressed in text value","example":"31/12/2056"}},"description":"Representation of a Future Stock"},"GeoPoint":{"type":"object","properties":{"latitude":{"type":"number","description":"Geopoint latitude","format":"double"},"longitude":{"type":"number","description":"Geopoint longitude","format":"double"}},"description":"Representation of a GeoPoint"},"Image":{"type":"object","properties":{"imageType":{"type":"string","description":"Type of the image, can be PRIMARY or GALLERY","enum":["PRIMARY","GALLERY"]},"format":{"type":"string","description":"Format of the image, can be zoom, product, thumbnail, store, cartIcon, etc."},"url":{"type":"string","description":"URL address of the image"},"altText":{"type":"string","description":"Tooltip content which is visible while image mouse hovering"},"galleryIndex":{"type":"integer","description":"Index of the image while displayed in gallery","format":"int32"}},"description":"Representation of an Image"},"Language":{"type":"object","properties":{"isocode":{"type":"string","description":"iso code of the language"},"name":{"type":"string","description":"name of the language"},"nativeName":{"type":"string","description":"name the language in native form"},"active":{"type":"boolean","description":"true/false indicator when the language is active"}},"description":"Representation of a Language"},"LanguageList":{"type":"object","properties":{"languages":{"type":"array","description":"This is the list of Language fields that should be returned in the response body","items":{"$ref":"#/components/schemas/Language"}}},"description":"Lists all available languages (all languages used for a particular store). If the list of languages for a base store is empty, a list of all languages available in the system will be returned"},"MemberList":{"type":"object","properties":{"members":{"type":"array","description":"List of member","items":{"$ref":"#/components/schemas/Principal"}}},"description":"List of users to assign to customer group."},"OpeningSchedule":{"type":"object","properties":{"name":{"type":"string","description":"Name of the opening schedule"},"code":{"type":"string","description":"Code of the opening schedule"},"weekDayOpeningList":{"type":"array","description":"List of weekday opening days","items":{"$ref":"#/components/schemas/WeekdayOpeningDay"}},"specialDayOpeningList":{"type":"array","description":"List of special opening days","items":{"$ref":"#/components/schemas/SpecialOpeningDay"}}},"description":"Representation of an Opening schedule"},"Order":{"type":"object","properties":{"code":{"type":"string","description":"Code number of order"},"net":{"type":"boolean","description":"Flag stating iv value is net-value"},"totalPriceWithTax":{"$ref":"#/components/schemas/Price"},"totalPrice":{"$ref":"#/components/schemas/Price"},"totalTax":{"$ref":"#/components/schemas/Price"},"subTotal":{"$ref":"#/components/schemas/Price"},"deliveryCost":{"$ref":"#/components/schemas/Price"},"entries":{"type":"array","description":"List of order entries","items":{"$ref":"#/components/schemas/OrderEntry"}},"entryGroups":{"type":"array","description":"List of entry groups","items":{"$ref":"#/components/schemas/EntryGroup"}},"totalItems":{"type":"integer","format":"int32"},"deliveryMode":{"$ref":"#/components/schemas/DeliveryMode"},"deliveryAddress":{"$ref":"#/components/schemas/Address"},"paymentInfo":{"$ref":"#/components/schemas/PaymentDetails"},"appliedOrderPromotions":{"type":"array","description":"List of applied order promotions","items":{"$ref":"#/components/schemas/PromotionResult"}},"appliedProductPromotions":{"type":"array","description":"List of applied product promotions","items":{"$ref":"#/components/schemas/PromotionResult"}},"productDiscounts":{"$ref":"#/components/schemas/Price"},"orderDiscounts":{"$ref":"#/components/schemas/Price"},"totalDiscounts":{"$ref":"#/components/schemas/Price"},"site":{"type":"string","description":"Site"},"store":{"type":"string","description":"Store"},"guid":{"type":"string","description":"Guest user id identifier"},"calculated":{"type":"boolean","description":"Flag showing if order is calculated"},"appliedVouchers":{"type":"array","description":"List of applied vouchers","items":{"$ref":"#/components/schemas/Voucher"}},"user":{"$ref":"#/components/schemas/Principal"},"pickupOrderGroups":{"type":"array","description":"List of pickup order entry group","items":{"$ref":"#/components/schemas/PickupOrderEntryGroup"}},"deliveryOrderGroups":{"type":"array","description":"List of delivery order entries group","items":{"$ref":"#/components/schemas/DeliveryOrderEntryGroup"}},"pickupItemsQuantity":{"type":"integer","description":"Quantity of pickup items","format":"int64"},"deliveryItemsQuantity":{"type":"integer","description":"Quantity of delivery items","format":"int64"},"requestedRetrievalAt":{"type":"string","description":"Customer requested date for order retrieval"},"sapBillingAddress":{"$ref":"#/components/schemas/Address"},"sapCustomerEmail":{"type":"string","description":"Email of customer.","example":"xxx.yy@zz.com"},"sapPaymentOptionId":{"type":"string","description":"The payment option identifier. It specifies which option the consumer selected to make the payment for the cart.","example":"123456789"},"paymentType":{"$ref":"#/components/schemas/B2BPaymentTypeData"},"purchaseOrderNumber":{"type":"string","description":"Purchase order number"},"deliveryTimeSlot":{"$ref":"#/components/schemas/DeliveryTimeSlot"},"chinesePaymentInfo":{"$ref":"#/components/schemas/ChinesePaymentInfo"},"paymentStatus":{"type":"string","description":"Payment status","example":"PAID"},"taxInvoice":{"$ref":"#/components/schemas/TaxInvoice"},"created":{"type":"string","description":"Date of order creation","format":"date-time"},"status":{"type":"string","description":"Status of order"},"statusDisplay":{"type":"string","description":"Status display"},"guestCustomer":{"type":"boolean","description":"Flag showing if customer is Guest customer"},"consignments":{"type":"array","description":"List of consignment","items":{"$ref":"#/components/schemas/Consignment"}},"deliveryStatus":{"type":"string","description":"Order delivery status"},"deliveryStatusDisplay":{"type":"string","description":"Order delivery status display"},"unconsignedEntries":{"type":"array","description":"List of unconsigned order entries","items":{"$ref":"#/components/schemas/OrderEntry"}},"cancellable":{"type":"boolean","description":"Boolean flag showing if order is cancellable","example":true},"returnable":{"type":"boolean","description":"Boolean flag showing if order is returnable","example":true},"totalUnitCount":{"type":"integer","format":"int32"},"orgCustomer":{"$ref":"#/components/schemas/User"},"costCenter":{"$ref":"#/components/schemas/B2BCostCenter"},"permissionResults":{"type":"array","description":"Results of permissions associated with the order","items":{"$ref":"#/components/schemas/OrderApprovalPermissionResult"}},"orgUnit":{"$ref":"#/components/schemas/B2BUnit"},"sapQuoteCode":{"type":"string","description":"Quote Code associated with the Order. The Quote Code is present if the order was placed from a quote.","example":"0003060"},"paymentAddress":{"$ref":"#/components/schemas/Address"}},"description":"Representation of a order. Note that sapBillingAddress is mutually exclusive with paymentInfo.billingAddress, which is used when the billing address is created concurrently with the paymentInfo. sapBillingAddress is used when there is a need to save the billing address, but the related paymentInfo has not been created yet."},"OrderApproval":{"required":["code"],"type":"object","properties":{"code":{"type":"string","description":"Code that identifies the approval.","example":"00000005"},"order":{"$ref":"#/components/schemas/Order"},"approvalDecisionRequired":{"type":"boolean","description":"Boolean flag which states whether an approval decision is required."},"customerOrderApprovalRecords":{"type":"array","description":"Customer approval records related to this order approval.","items":{"$ref":"#/components/schemas/OrderApprovalRecord"}},"merchantOrderApprovalRecords":{"type":"array","description":"Merchant approval records related to this order approval.","items":{"$ref":"#/components/schemas/OrderApprovalRecord"}},"trigger":{"$ref":"#/components/schemas/Trigger"}},"description":"Details of one specific order approval"},"OrderApprovalDecision":{"required":["decision"],"type":"object","properties":{"decision":{"type":"string","description":"Decision from the approver when approving/rejecting an order. Typical decisions are: APPROVE, REJECT","example":"REJECT"},"comment":{"type":"string","description":"Any comments the approver (or the workflow system) adds when approving/rejecting an order.","example":"Rejected because montly budget was exceeded"}},"description":"The order approval decision. The approval decision field is mandatory, and the approval comment field is mandatory if the decision is 'rejected'."},"OrderApprovalList":{"required":["orderApprovals","pagination","sorts"],"type":"object","properties":{"orderApprovals":{"type":"array","description":"List of Order Approvals","items":{"$ref":"#/components/schemas/OrderApproval"}},"sorts":{"type":"array","description":"List of sorts","items":{"$ref":"#/components/schemas/Sort"}},"pagination":{"$ref":"#/components/schemas/deprecatedPagination"}},"description":"Representation of a Order Approval List"},"OrderApprovalPermission":{"required":["code"],"type":"object","properties":{"active":{"type":"boolean","description":"Boolean flag of whether Order Approval Permission is active","example":true},"orderApprovalPermissionType":{"$ref":"#/components/schemas/OrderApprovalPermissionType"},"code":{"type":"string","description":"Code of the Order Approval Permission","example":"Rustic_10K_USD_MONTH"},"currency":{"$ref":"#/components/schemas/Currency"},"periodRange":{"type":"string","description":"Period range of the Order Approval Permission, used for type B2BOrderThresholdTimespanPermission","example":"MONTH","enum":["DAY","WEEK","MONTH","QUARTER","YEAR"]},"orgUnit":{"$ref":"#/components/schemas/B2BUnit"},"threshold":{"type":"number","description":"Threshold value of the Order Approval Permission, used for type B2BOrderThresholdPermission and B2BOrderThresholdTimespanPermission","format":"double","example":10000},"selected":{"type":"boolean","description":"Boolean flag of whether the user is selected","example":true}},"description":"Order Approval Permission object."},"OrderApprovalPermissionList":{"required":["orderApprovalPermissions","pagination","sorts"],"type":"object","properties":{"orderApprovalPermissions":{"type":"array","description":"List of Order Approval Permissions","items":{"$ref":"#/components/schemas/OrderApprovalPermission"}},"sorts":{"type":"array","description":"List of sorts","items":{"$ref":"#/components/schemas/Sort"}},"pagination":{"$ref":"#/components/schemas/deprecatedPagination"}},"description":"Representation of a Order Approval Permission List"},"OrderApprovalPermissionResult":{"type":"object","properties":{"approverName":{"type":"string","description":"Name of the approver responsible for this permission result."},"approverNotes":{"type":"string","description":"Any comments the approver added to the approval item.","example":"The order is rejected due to insufficient budget"},"permissionType":{"$ref":"#/components/schemas/OrderApprovalPermissionType"},"statusDisplay":{"type":"string","description":"Status of the order approval.","example":"Pending approval"}},"description":"Details of an order approval permission result related to an order"},"OrderApprovalPermissionType":{"required":["code"],"type":"object","properties":{"code":{"type":"string","description":"Code of the Order Approval Permission Type","example":"B2BOrderThresholdTimespanPermission"},"name":{"type":"string","description":"Name of the Order Approval Permission Type","example":"Allowed Order Threshold (per timespan)"}},"description":"Request body fields required and optional to operate on Order Approval Permission Type data. Typical permission types are: B2BBudgetExceededPermission, B2BOrderThresholdTimespanPermission and B2BOrderThresholdPermission"},"OrderApprovalPermissionTypeList":{"required":["orderApprovalPermissionTypes"],"type":"object","properties":{"orderApprovalPermissionTypes":{"type":"array","description":"List of Order Approval Permission Types","items":{"$ref":"#/components/schemas/OrderApprovalPermissionType"}}},"description":"Representation of an Order Approval Permission Type list"},"OrderApprovalRecord":{"type":"object","properties":{"permissionTypes":{"type":"array","description":"List of permission types related to this approval record.","items":{"$ref":"#/components/schemas/OrderApprovalPermissionType"}},"approver":{"$ref":"#/components/schemas/Principal"},"statusDisplay":{"type":"string","description":"Status of the order approval.","example":"Pending approval"},"comments":{"type":"string","description":"Any comments the approver (or the workflow system) added to the approval item.","example":"Submitted for approval"}},"description":"Details of one order approval record"},"OrderEntry":{"type":"object","properties":{"entryNumber":{"type":"integer","description":"Entry number of the order entry","format":"int32"},"quantity":{"type":"integer","description":"Quantity number of items in order entry","format":"int64"},"basePrice":{"$ref":"#/components/schemas/Price"},"totalPrice":{"$ref":"#/components/schemas/Price"},"product":{"$ref":"#/components/schemas/Product"},"updateable":{"type":"boolean","description":"Flag defining if order entry item is updateable"},"deliveryMode":{"$ref":"#/components/schemas/DeliveryMode"},"configurationInfos":{"type":"array","description":"Configuration info of order entry","items":{"$ref":"#/components/schemas/ConfigurationInfo"}},"statusSummaryList":{"type":"array","description":"List of aggregated status information per entry, relevant if the entry is configurable and its configuration contains one or many issues in different severities. Note that configurators typically raise such issues only in case the parent document is changeable. In this case the issues (depending on their severity) need to be fixed before a checkout can be done. This means this segment can be present for a cart entry, for order entries it will always be empty","items":{"$ref":"#/components/schemas/StatusSummary"}},"deliveryPointOfService":{"$ref":"#/components/schemas/PointOfService"},"cancelledItemsPrice":{"$ref":"#/components/schemas/Price"},"cancellableQuantity":{"type":"integer","description":"Quantity number of cancellable items in order entry","format":"int64","example":5},"returnedItemsPrice":{"$ref":"#/components/schemas/Price"},"returnableQuantity":{"type":"integer","description":"Quantity number of returnable items in order entry","format":"int64","example":5},"arrivalSlots":{"type":"array","description":"List of item arrival slot","items":{"$ref":"#/components/schemas/EntryArrivalSlot"}},"comments":{"type":"array","description":"List of order entry comments.","items":{"$ref":"#/components/schemas/Comment"}},"url":{"type":"string"},"quantityAllocated":{"type":"integer","format":"int64"},"quantityUnallocated":{"type":"integer","format":"int64"},"quantityCancelled":{"type":"integer","format":"int64"},"quantityPending":{"type":"integer","format":"int64"},"quantityShipped":{"type":"integer","format":"int64"},"quantityReturned":{"type":"integer","format":"int64"}},"description":"Request body parameter that contains details such as the quantity of product (quantity), and the pickup store name (deliveryPointOfService.name)\n\nThe DTO is in XML or .json format."},"OrderEntryList":{"type":"object","properties":{"orderEntries":{"type":"array","description":"List of order entries","items":{"$ref":"#/components/schemas/OrderEntry"}}},"description":"List of entries containing the amount to add and the product code or the entryNumber."},"OrderFormEntry":{"type":"object","properties":{"sku":{"type":"string"},"quantity":{"type":"integer","format":"int32"}}},"OrderFormList":{"type":"object","properties":{"orderForms":{"type":"array","items":{"$ref":"#/components/schemas/OrderForm"}}}},"OrderForm":{"type":"object","properties":{"code":{"type":"string"},"description":{"type":"string"},"currency":{"$ref":"#/components/schemas/Currency"},"user":{"$ref":"#/components/schemas/Principal"},"entries":{"type":"array","items":{"$ref":"#/components/schemas/OrderFormEntry"}}}},"OrderHistory":{"type":"object","properties":{"code":{"type":"string","description":"Code of Order History"},"status":{"type":"string","description":"Status of Order History"},"statusDisplay":{"type":"string","description":"Status display"},"placed":{"type":"string","description":"Date of placing order","format":"date-time"},"guid":{"type":"string","description":"Guest user identifier"},"total":{"$ref":"#/components/schemas/Price"},"costCenter":{"$ref":"#/components/schemas/B2BCostCenter"},"orgUnit":{"$ref":"#/components/schemas/B2BUnit"},"purchaseOrderNumber":{"type":"string","description":"Purchase order number"},"orgCustomer":{"$ref":"#/components/schemas/User"}},"description":"Representation of an Order History"},"OrderHistoryList":{"type":"object","properties":{"orders":{"type":"array","description":"List of order history items","items":{"$ref":"#/components/schemas/OrderHistory"}},"sorts":{"type":"array","description":"List of sorts","items":{"$ref":"#/components/schemas/Sort"}},"pagination":{"$ref":"#/components/schemas/deprecatedPagination"},"facets":{"type":"array","description":"List of facets","items":{"$ref":"#/components/schemas/Facet"}}},"description":"Representation of an Order History List"},"OrderStatusUpdateElement":{"type":"object","properties":{"code":{"type":"string","description":"Code of update element of order status"},"status":{"type":"string","description":"Status of update element"},"baseSiteId":{"type":"string","description":"BaseSite identifier"}},"description":"Representation of an Order Status Update Element"},"OrderStatusUpdateElementList":{"type":"object","properties":{"orderStatusUpdateElements":{"type":"array","description":"List of order status update elements","items":{"$ref":"#/components/schemas/OrderStatusUpdateElement"}}},"description":"Representation of an Order Status Update Element List"},"OrgCustomerCreation":{"type":"object","properties":{"email":{"type":"string","description":"Email of the user","example":"akiro.nakamura@rustic-hw.com"},"firstName":{"type":"string","description":"First name of the user","example":"Akiro"},"lastName":{"type":"string","description":"Last name of the user","example":"Nakamura"},"titleCode":{"type":"string","description":"Code of the user's title","example":"mr"},"orgUnit":{"$ref":"#/components/schemas/B2BUnit"},"roles":{"type":"array","description":"List of organizational approvers","items":{"type":"string","description":"List of organizational approvers"}}},"description":"Data object that contains information necessary for user creation"},"OrgCustomerModification":{"type":"object","properties":{"email":{"type":"string","description":"Email of the user","example":"akiro.nakamura@rustic-hw.com"},"firstName":{"type":"string","description":"First name of the user","example":"Akiro"},"lastName":{"type":"string","description":"Last name of the user","example":"Nakamura"},"titleCode":{"type":"string","description":"Code of the user's title","example":"mr"},"orgUnit":{"$ref":"#/components/schemas/B2BUnit"},"roles":{"type":"array","description":"List of organizational approvers","items":{"type":"string","description":"List of organizational approvers"}},"active":{"type":"boolean","description":"Boolean flag of whether the user is active/enabled or not","example":true},"password":{"type":"string","description":"Password of the user"}},"description":"Data object which contains information necessary for user modification"},"OrgDocument":{"required":["amount","currency","formattedAmount","id","status"],"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the organizational document.","example":"DOC-01234"},"orgDocumentType":{"$ref":"#/components/schemas/OrgDocumentType"},"status":{"type":"string","description":"Organizational document status. Possible values are: open, closed.","example":"open"},"createdAtDate":{"type":"string","description":"Creation date for the organizational document.","example":"2022-04-14"},"dueAtDate":{"type":"string","description":"Due date for the organizational document.","example":"2022-06-18"},"formattedAmount":{"type":"string","description":"Original amount due for the organizational document, formatted as per the selected currency.","example":"$1230.45"},"amount":{"type":"number","description":"Original amount due for the organizational document.","example":1230.45},"formattedOpenAmount":{"type":"string","description":"Open amount due for the organizational document, formatted as per the selected currency.","example":"$430.45"},"openAmount":{"type":"number","description":"Open amount due for the organizational document.","example":430.45},"currency":{"$ref":"#/components/schemas/Currency"},"attachments":{"type":"array","description":"Attachments associated to the organizational document.","items":{"$ref":"#/components/schemas/OrgDocumentAttachment"}}},"description":"Representation of an organizational document."},"OrgDocumentAttachment":{"type":"object","properties":{"id":{"type":"string","description":"Organizational document attachment identifier.","example":"INPG-00100001"}},"description":"Attachments associated to the organizational document."},"OrgDocumentList":{"required":["orgDocuments","pagination"],"type":"object","properties":{"orgDocuments":{"type":"array","description":"List of organizational documents.","items":{"$ref":"#/components/schemas/OrgDocument"}},"sorts":{"type":"array","description":"List of sort codes","items":{"$ref":"#/components/schemas/Sort"}},"orgDocumentTypes":{"type":"array","description":"List of organizational document types.","items":{"$ref":"#/components/schemas/OrgDocumentType"}},"pagination":{"$ref":"#/components/schemas/deprecatedPagination"}},"description":"Representation of a list of organizational documents for the organizational unit."},"OrgDocumentType":{"required":["code"],"type":"object","properties":{"code":{"type":"string","description":"Organizational document type code.","example":"PURCHASE_ORDER"},"name":{"type":"string","description":"Organizational document type name.","example":"Purchase Order"}},"description":"Representation of an organizational document type."},"OrgUnitReference":{"required":["uid"],"type":"object","properties":{"uid":{"type":"string","description":"Identifier of the organizational unit.","example":"Pronto"},"name":{"type":"string","description":"Name of the organizational unit.","example":"Pronto"}},"description":"Reference to organizational unit."},"OrgUnitUserGroup":{"type":"object","properties":{"uid":{"type":"string","description":"Unique user identifier"},"name":{"type":"string","description":"Name of the user"},"members":{"type":"array","description":"List of members","items":{"$ref":"#/components/schemas/Principal"}},"subGroups":{"type":"array","description":"List of subgroups","items":{"$ref":"#/components/schemas/UserGroup"}},"membersCount":{"type":"integer","description":"Number of members","format":"int32"},"orgUnit":{"$ref":"#/components/schemas/B2BUnit"},"permissions":{"type":"array","description":"Order approval permission of the user group","items":{"$ref":"#/components/schemas/OrderApprovalPermission"}},"roles":{"type":"array","description":"List of Roles","items":{"type":"string","description":"List of Roles"}},"selected":{"type":"boolean","description":"Boolean flag of whether a user group is selected or not","example":true}},"description":"Organizational unit user group object."},"OrgUnitUserGroupList":{"required":["orgUnitUserGroups","pagination","sorts"],"type":"object","properties":{"orgUnitUserGroups":{"type":"array","description":"List of organizational unit user groups","items":{"$ref":"#/components/schemas/OrgUnitUserGroup"}},"sorts":{"type":"array","description":"List of sorts","items":{"$ref":"#/components/schemas/Sort"}},"pagination":{"$ref":"#/components/schemas/deprecatedPagination"}},"description":"Representation of an user list used in organizational units"},"OrgUnitUserList":{"required":["pagination","sorts","users"],"type":"object","properties":{"users":{"type":"array","description":"List of users","items":{"$ref":"#/components/schemas/User"}},"sorts":{"type":"array","description":"List of sorts","items":{"$ref":"#/components/schemas/Sort"}},"pagination":{"$ref":"#/components/schemas/deprecatedPagination"}},"description":"Representation of an user list used in organizational units"},"OrgUserRegistrationData":{"required":["email","firstName","lastName"],"type":"object","properties":{"titleCode":{"type":"string","description":"Code of the user's title","example":"mr"},"firstName":{"type":"string","description":"First name of the user","example":"akiro"},"lastName":{"type":"string","description":"Last name of the user","example":"nakamura"},"email":{"type":"string","description":"Email of the user","example":"akiro.nakamura@rustic-hw.com"},"message":{"type":"string","description":"Contains info to approver, usually composed by UI with a template","example":"Please create a new account for me. Department: Ground support; Position: Chief safeguard; Report to: Steve Jackson."},"verificationTokenId":{"type":"string","description":"Authentication identifier of a new B2B customer registration. Only needed when OTP for registration is enabled.","example":"<REG[nZbnrnhMWy2uBbzKWU/SQRVBZ7mJaiXX9/87PegvovM=]>"},"verificationTokenCode":{"type":"string","description":"Code included in the email sent to the customer to be registered. Only needed when OTP for registration is enabled.","example":"W2Lihg36"}},"description":"Data object that contains information necessary to apply user registration"},"PackagingInfo":{"type":"object","properties":{"width":{"type":"string"},"height":{"type":"string"},"length":{"type":"string"},"grossWeight":{"type":"string"},"insuredValue":{"type":"string"},"dimensionUnit":{"type":"string"},"weightUnit":{"type":"string"}},"description":"Representation of a Packaging Information"},"PasswordRestoreTokenInput":{"required":["loginId"],"type":"object","properties":{"loginId":{"type":"string","description":"User login identifier. Target to receive the token.","example":"keenreviewer@sap.com"}},"description":"Object contains information required for creating and sending a token to restore a forgotten password."},"PaymentDetails":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier of payment detail"},"accountHolderName":{"type":"string","description":"Name of account holder"},"cardType":{"$ref":"#/components/schemas/CardType"},"cardNumber":{"type":"string","description":"Payment card number"},"startMonth":{"type":"string","description":"Start month from which payment is valid"},"startYear":{"type":"string","description":"Start year from which payment is valid"},"expiryMonth":{"type":"string","description":"Month of expiration of payment"},"expiryYear":{"type":"string","description":"Year of expiration of payment"},"issueNumber":{"type":"string","description":"Issue number"},"subscriptionId":{"type":"string","description":"Identifier of subscription"},"saved":{"type":"boolean","description":"Flag to mark if payment is saved one"},"defaultPayment":{"type":"boolean","description":"Flag to mark if payment the default one"},"billingAddress":{"$ref":"#/components/schemas/Address"},"sapPaymentMethod":{"$ref":"#/components/schemas/SAPPaymentMethod"}},"description":"Payment details object"},"PaymentDetailsList":{"type":"object","properties":{"payments":{"type":"array","description":"List of payment details","items":{"$ref":"#/components/schemas/PaymentDetails"}}},"description":"Representation of a Payment details list"},"PaymentMode":{"type":"object","properties":{"code":{"type":"string","description":"Payment mode code"},"name":{"type":"string","description":"Payment mode name"},"description":{"type":"string","description":"Payment mode description"},"pspLogoUrl":{"type":"string","description":"Logo url of payment mode","example":"/medias/wechatpay.png?context=CONTEXT"}},"description":"Representation of a Payment Mode"},"PaymentModeList":{"type":"object","properties":{"paymentModes":{"type":"array","description":"List of payment modes","items":{"$ref":"#/components/schemas/PaymentMode"}}},"description":"Representation of a Payment Mode List"},"PaymentRequest":{"type":"object","properties":{"postUrl":{"type":"string"},"parameters":{"type":"object","additionalProperties":{"type":"string"}},"mappingLabels":{"type":"object","additionalProperties":{"type":"string"}}}},"PickupOrderEntryGroup":{"type":"object","properties":{"totalPriceWithTax":{"$ref":"#/components/schemas/Price"},"entries":{"type":"array","description":"List of order entries","items":{"$ref":"#/components/schemas/OrderEntry"}},"quantity":{"type":"integer","description":"Quantity of order entries in a group","format":"int64"},"deliveryPointOfService":{"$ref":"#/components/schemas/PointOfService"},"distance":{"type":"number","description":"Distance calculated to pickup place","format":"double"}},"description":"Representation of a Pickup Order Entry Group"},"PointOfService":{"type":"object","properties":{"name":{"type":"string","description":"Name of the point of service","example":"Misato"},"displayName":{"type":"string","description":"Display name of the point of service"},"url":{"type":"string","description":"Url address of the point of service"},"description":{"type":"string","description":"Description of the point of service"},"openingHours":{"$ref":"#/components/schemas/OpeningSchedule"},"storeContent":{"type":"string","description":"Store content of given point of service"},"features":{"type":"object","additionalProperties":{"type":"string","description":"List of features for a given point of service"},"description":"List of features for a given point of service"},"geoPoint":{"$ref":"#/components/schemas/GeoPoint"},"formattedDistance":{"type":"string","description":"Distance to the point of service as text value"},"distanceKm":{"type":"number","description":"Distance to the point of service as number value","format":"double"},"mapIcon":{"$ref":"#/components/schemas/Image"},"address":{"$ref":"#/components/schemas/Address"},"storeImages":{"type":"array","description":"Collection of images associated with a point of service","items":{"$ref":"#/components/schemas/Image"}},"pickUpInStoreInstructions":{"type":"string","description":"Instructions used for picking up an order in store"},"warehouseCodes":{"type":"array","items":{"type":"string"}}},"description":"Representation of a Point of service"},"PointOfServiceList":{"type":"object","properties":{"pointOfServices":{"type":"array","description":"List of points of service","items":{"$ref":"#/components/schemas/PointOfService"}}},"description":"Representation of a Point of Service List"},"PointOfServiceStock":{"type":"object","properties":{"name":{"type":"string","description":"Name of the point of service","example":"Misato"},"displayName":{"type":"string","description":"Display name of the point of service"},"url":{"type":"string","description":"Url address of the point of service"},"description":{"type":"string","description":"Description of the point of service"},"openingHours":{"$ref":"#/components/schemas/OpeningSchedule"},"storeContent":{"type":"string","description":"Store content of given point of service"},"features":{"type":"object","additionalProperties":{"type":"string","description":"List of features for a given point of service"},"description":"List of features for a given point of service"},"geoPoint":{"$ref":"#/components/schemas/GeoPoint"},"formattedDistance":{"type":"string","description":"Distance to the point of service as text value"},"distanceKm":{"type":"number","description":"Distance to the point of service as number value","format":"double"},"mapIcon":{"$ref":"#/components/schemas/Image"},"address":{"$ref":"#/components/schemas/Address"},"storeImages":{"type":"array","description":"Collection of images associated with a point of service","items":{"$ref":"#/components/schemas/Image"}},"pickUpInStoreInstructions":{"type":"string","description":"Instructions used for picking up an order in store"},"warehouseCodes":{"type":"array","items":{"type":"string"}},"stockInfo":{"$ref":"#/components/schemas/Stock"}},"description":"Representation of a Point Of Service Stock"},"Price":{"type":"object","properties":{"currencyIso":{"type":"string","description":"Currency iso format","example":"USD"},"value":{"type":"number","description":"Value of price in BigDecimal format"},"priceType":{"type":"string","description":"Type of the price","enum":["BUY","FROM"]},"formattedValue":{"type":"string","description":"Value of price formatted"},"minQuantity":{"type":"integer","description":"Minimum quantity of the price value","format":"int64"},"maxQuantity":{"type":"integer","description":"Maximum quantity of the price value","format":"int64"}},"description":"Representation of a Price"},"PriceRange":{"type":"object","properties":{"maxPrice":{"$ref":"#/components/schemas/Price"},"minPrice":{"$ref":"#/components/schemas/Price"}},"description":"Representation of a Price Range"},"Principal":{"type":"object","properties":{"uid":{"type":"string","description":"Unique user identifier"},"name":{"type":"string","description":"Name of the user"}},"description":"Representation of a Principal webservice DTO used for defining User data types"},"Product":{"type":"object","properties":{"code":{"type":"string","description":"Code of the product"},"name":{"type":"string","description":"Name of the product"},"url":{"type":"string","description":"Url address of the product"},"description":{"type":"string","description":"Description of the product"},"purchasable":{"type":"boolean","description":"Flag defining if product is purchasable"},"stock":{"$ref":"#/components/schemas/Stock"},"futureStocks":{"type":"array","description":"List of future stocks","items":{"$ref":"#/components/schemas/FutureStock"}},"availableForPickup":{"type":"boolean","description":"Flag defining if product is available for pickup"},"averageRating":{"type":"number","description":"Rating number of average value","format":"double"},"numberOfReviews":{"type":"integer","description":"Number of reviews associated with the product","format":"int32"},"summary":{"type":"string","description":"Product summary"},"manufacturer":{"type":"string","description":"Data of product manufacturer"},"variantType":{"type":"string","description":"Variant type of the product"},"price":{"$ref":"#/components/schemas/Price"},"sapUnit":{"$ref":"#/components/schemas/SAPUnit"},"baseProduct":{"type":"string","description":"Information about base product"},"images":{"type":"array","description":"List of images linked to product","items":{"$ref":"#/components/schemas/Image"}},"categories":{"type":"array","description":"List of categories product belongs to","items":{"$ref":"#/components/schemas/Category"}},"reviews":{"type":"array","description":"List of reviews associated with the product","items":{"$ref":"#/components/schemas/Review"}},"classifications":{"type":"array","description":"List of classifications related to the product","items":{"$ref":"#/components/schemas/Classification"}},"potentialPromotions":{"type":"array","description":"List of potential promotions related to the product","items":{"$ref":"#/components/schemas/Promotion"}},"variantOptions":{"type":"array","description":"List of variant options related to the product","items":{"$ref":"#/components/schemas/VariantOption"}},"baseOptions":{"type":"array","description":"List of base options related to the product","items":{"$ref":"#/components/schemas/BaseOption"}},"volumePricesFlag":{"type":"boolean","description":"Flag stating if volume price should be displayed"},"volumePrices":{"type":"array","description":"List of volume prices","items":{"$ref":"#/components/schemas/Price"}},"productReferences":{"type":"array","description":"List of product references","items":{"$ref":"#/components/schemas/ProductReference"}},"variantMatrix":{"type":"array","description":"List of variant matrixes associated with the product","items":{"$ref":"#/components/schemas/VariantMatrixElement"}},"priceRange":{"$ref":"#/components/schemas/PriceRange"},"multidimensional":{"type":"boolean","description":"Flag stating if product is multidimensional"},"configuratorType":{"type":"string","description":"Configurator type related to the product"},"configurable":{"type":"boolean","description":"Flag stating if product is configurable"},"tags":{"uniqueItems":true,"type":"array","description":"Tags associated with the product","items":{"type":"string","description":"Tags associated with the product"}},"sapAddToCartDisabled":{"type":"boolean","description":"Flag specifies whether product can be added to cart. When addToCartDisabled=true, the product is not allowed to be added into cart and the reason is explained through sapAddToCartDisabledMessage; when addToCartDisabled=false, the product is allowed to be added into cart.","example":true},"sapAddToCartDisabledMessage":{"type":"string","description":"Message shows why product can not be added to cart.","example":"'EF-S 60mm f/2.8 USM Macro' is not available with 'EOS450D + 18-55 IS Kit'"},"firstVariantCode":{"type":"string"},"firstVariantImage":{"type":"string"},"bundleTemplates":{"type":"array","description":"Set of bundle templates that are identified as starter components and can initiate a bundle in the cart","items":{"$ref":"#/components/schemas/BundleTemplate"}},"timedAccessPromotion":{"$ref":"#/components/schemas/Promotion"}},"description":"Representation of a Product"},"ProductExpressUpdateElement":{"type":"object","properties":{"code":{"type":"string","description":"Code of product express update element"},"catalogId":{"type":"string","description":"Catalog identifier"},"catalogVersion":{"type":"string","description":"Catalog version"}},"description":"Representation of a Product Express Update Element"},"ProductExpressUpdateElementList":{"type":"object","properties":{"productExpressUpdateElements":{"type":"array","description":"List of product express update element","items":{"$ref":"#/components/schemas/ProductExpressUpdateElement"}}},"description":"Representation of a Product Express Update Element List"},"ProductFutureStocks":{"type":"object","properties":{"productCode":{"type":"string","description":"Product identifier","example":"3318057"},"futureStocks":{"type":"array","description":"List of future stocks","items":{"$ref":"#/components/schemas/FutureStock"}}},"description":"Representation of a Product Future Stocks"},"ProductFutureStocksList":{"type":"object","properties":{"productFutureStocks":{"type":"array","description":"List of product future stocks","items":{"$ref":"#/components/schemas/ProductFutureStocks"}}},"description":"Representation of a Product Future Stocks List"},"ProductList":{"type":"object","properties":{"products":{"type":"array","description":"List of products","items":{"$ref":"#/components/schemas/Product"}},"catalog":{"type":"string","description":"Catalog of product list"},"version":{"type":"string","description":"Version of product list"},"totalProductCount":{"type":"integer","description":"Total product count","format":"int32"},"totalPageCount":{"type":"integer","description":"Total page count","format":"int32"},"currentPage":{"type":"integer","description":"Number of current page","format":"int32"}},"description":"Representation of a Product List"},"ProductReference":{"type":"object","properties":{"referenceType":{"type":"string","description":"Reference type"},"description":{"type":"string","description":"Reference description"},"quantity":{"type":"integer","description":"Reference quantity","format":"int32"},"target":{"$ref":"#/components/schemas/Product"},"preselected":{"type":"boolean","description":"Flag stating if product reference is preselected"}},"description":"Representation of a Product Reference"},"ProductReferenceList":{"type":"object","properties":{"references":{"type":"array","description":"List of product references","items":{"$ref":"#/components/schemas/ProductReference"}}},"description":"Representation of a Product Reference List"},"ProductSearchPage":{"type":"object","properties":{"freeTextSearch":{"type":"string","description":"Free text search"},"categoryCode":{"type":"string","description":"Code of category"},"keywordRedirectUrl":{"type":"string","description":"Redirect url address keyword"},"spellingSuggestion":{"$ref":"#/components/schemas/SpellingSuggestion"},"products":{"type":"array","description":"List of products","items":{"$ref":"#/components/schemas/Product"}},"sorts":{"type":"array","description":"List of sorts","items":{"$ref":"#/components/schemas/Sort"}},"pagination":{"$ref":"#/components/schemas/deprecatedPagination"},"currentQuery":{"$ref":"#/components/schemas/SearchState"},"breadcrumbs":{"type":"array","description":"List of breadcrumbs info","items":{"$ref":"#/components/schemas/Breadcrumb"}},"facets":{"type":"array","description":"List of facets","items":{"$ref":"#/components/schemas/Facet"}}},"description":"Representation of a Product Search Page"},"Promotion":{"type":"object","properties":{"code":{"type":"string","description":"Code of the promotion"},"title":{"type":"string","description":"Promotion title"},"promotionType":{"type":"string","description":"Type of the promotion"},"startDate":{"type":"string","description":"The initial date of the promotion","format":"date-time"},"endDate":{"type":"string","description":"Last date of validity of the promotion","format":"date-time"},"description":{"type":"string","description":"Description of the promotion"},"couldFireMessages":{"type":"array","description":"Message about promotion which is displayed when planning potential promotion. This field has higher priority over promotion description","items":{"type":"string","description":"Message about promotion which is displayed when planning potential promotion. This field has higher priority over promotion description"}},"firedMessages":{"type":"array","description":"Message fired while the promotion is active. This is info how much you will get when applying the promotion","items":{"type":"string","description":"Message fired while the promotion is active. This is info how much you will get when applying the promotion"}},"productBanner":{"$ref":"#/components/schemas/Image"},"enabled":{"type":"boolean","description":"Boolean flag if promotion is enabled"},"priority":{"type":"integer","description":"Priority index as numeric value of the promotion. Higher number means higher priority","format":"int32"},"promotionGroup":{"type":"string","description":"Group of the promotion"},"restrictions":{"type":"array","description":"List of promotion restrictions","items":{"$ref":"#/components/schemas/PromotionRestriction"}}},"description":"Representation of a Promotion"},"PromotionList":{"type":"object","properties":{"promotions":{"type":"array","description":"List of promotions","items":{"$ref":"#/components/schemas/Promotion"}}},"description":"Representation of a Promotion list"},"PromotionOrderEntryConsumed":{"type":"object","properties":{"code":{"type":"string","description":"Order entry code"},"adjustedUnitPrice":{"type":"number","description":"Adjusted unit price for promotion order entry","format":"double"},"orderEntryNumber":{"type":"integer","description":"Order entry number","format":"int32"},"quantity":{"type":"integer","description":"Quantity of promotion order entry","format":"int64"}},"description":"Representation of a Promotion order entry consumed"},"PromotionRestriction":{"type":"object","properties":{"restrictionType":{"type":"string","description":"Type of the promotion restriction"},"description":{"type":"string","description":"Description of the promotion restriction"}},"description":"Representation of a Promotion Restriction"},"PromotionResult":{"type":"object","properties":{"description":{"type":"string","description":"Description of promotion result"},"promotion":{"$ref":"#/components/schemas/Promotion"},"consumedEntries":{"type":"array","description":"List of promotion order entries consumed","items":{"$ref":"#/components/schemas/PromotionOrderEntryConsumed"}}},"description":"Representation of a Promotion result"},"PromotionResultList":{"type":"object","properties":{"promotions":{"type":"array","description":"List of promotion results","items":{"$ref":"#/components/schemas/PromotionResult"}}},"description":"Representation of a Promotion result list"},"PunchOutSessionInfo":{"required":["cartId","customerId","punchOutLevel","punchOutOperation","token"],"type":"object","properties":{"customerId":{"type":"string","description":"CustomerID of the user","example":"punchout.customer@punchoutorg.com"},"cartId":{"type":"string","description":"ID of the cart","example":"00002159"},"punchOutLevel":{"type":"string","description":"The punchoutLevel is an attribute that allows suppliers to specify how procurement applications should present the PunchOut item to users.","enum":["STORE","PRODUCT","AISLE","SHELF"]},"punchOutOperation":{"type":"string","description":"Supported PunchOut operations","enum":["CREATE","EDIT","INSPECT"]},"selectedItem":{"type":"string","description":"The selected item specify PunchOut for an entire store or any subset of product offerings","example":"300000029"},"token":{"$ref":"#/components/schemas/PunchOutToken"}},"description":"PunchOutSessionInfo contains the user ID, cart ID, token, PunchOut level, PunchOut operation and selected item."},"PunchOutToken":{"required":["accessToken","tokenType"],"type":"object","properties":{"accessToken":{"type":"string","description":"The access token issued by the authorization server","example":"1uEhL4lj58n1zX9R0aICC7-ng2c"},"tokenType":{"type":"string","description":"The access token type provides the client with the information required to successfully utilize the access token to make a protected resource request (along with type-specific attributes). The client MUST NOT use an access token if it does not understand or does not trust the token type.","example":"bearer"}},"description":"Holds the token info for the user"},"Quote":{"required":["code","creationTime","expirationTime","name","state","threshold","totalItems","updatedTime","version"],"type":"object","properties":{"expirationTime":{"type":"string","description":"Expiration time of the quote.","format":"date-time"},"code":{"type":"string","description":"Code of the quote.","example":"0003005"},"name":{"type":"string","description":"Name of the quote.","example":"Quote 0003005"},"state":{"type":"string","description":"Current state of the quote. Possible state values - DRAFT, SUBMITTED, OFFER, CANCELLED, EXPIRED, etc.. The list of the states can be extended.","example":"CANCELLED"},"description":{"type":"string","description":"Description of the quote.","example":"Quote description"},"version":{"type":"integer","description":"Current version of the quote.","format":"int32","example":1},"threshold":{"type":"number","description":"Minimum subtotal value for the quote in the currency of the store.","format":"double","example":25000},"cartId":{"type":"string","description":"Id of the cart, which is linked to the quote.","example":"000350"},"creationTime":{"type":"string","description":"Date of quote creation.","format":"date-time"},"updatedTime":{"type":"string","description":"Date of the last quote update.","format":"date-time"},"allowedActions":{"type":"array","description":"Actions, which are allowed to perform with the quote.","items":{"type":"string","description":"Actions, which are allowed to perform with the quote."}},"previousEstimatedTotal":{"$ref":"#/components/schemas/Price"},"comments":{"type":"array","description":"List of quote comments.","items":{"$ref":"#/components/schemas/Comment"}},"totalPriceWithTax":{"$ref":"#/components/schemas/Price"},"totalPrice":{"$ref":"#/components/schemas/Price"},"entries":{"type":"array","description":"Entries of the cart.","items":{"$ref":"#/components/schemas/OrderEntry"}},"entryGroups":{"type":"array","description":"List of entry groups","items":{"$ref":"#/components/schemas/EntryGroup"}},"totalItems":{"type":"integer","description":"Total number of the items in the quote.","format":"int32","example":2},"quoteDiscounts":{"$ref":"#/components/schemas/Price"},"sapQuoteDiscountsRate":{"type":"number","description":"Value of the discount","format":"double"},"sapQuoteDiscountsType":{"type":"string","description":"Type of the discount - PERCENT for discount by percentage, ABSOLUTE for discount by amount, TARGET for discount by adjustment of the total value"},"orderDiscounts":{"$ref":"#/components/schemas/Price"},"subTotalWithDiscounts":{"$ref":"#/components/schemas/Price"},"productDiscounts":{"$ref":"#/components/schemas/Price"},"sapSubtotalExcludingOrderLevelDiscount":{"$ref":"#/components/schemas/Price"},"sapAttachments":{"type":"array","description":"List of SAP attachments","items":{"$ref":"#/components/schemas/SAPAttachment"}},"sapOrderCode":{"type":"string","description":"Order Code associated with the Quote. The Order Code is present if the quote was used to place an order.","example":"00000001"}},"description":"Representation of the quote object."},"QuoteAction":{"required":["action"],"type":"object","properties":{"action":{"type":"string","description":"User's actions with the quote. Typical actions are: CANCEL, SUBMIT, ACCEPT, APPROVE, REJECT.","example":"SUBMIT"}},"description":"The action with the quote. The quote action field is mandatory."},"QuoteDiscount":{"type":"object","properties":{"discountType":{"type":"string","description":"Type of the discount - PERCENT for discount by percentage, ABSOLUTE for discount by amount, TARGET for discount by adjustment of the total value","example":"PERCENT"},"discountRate":{"type":"number","description":"Value of the discount","format":"double","example":10}},"description":"Discount applied to the quote - discountType for type of the discount, discountRate for value of the discount "},"QuoteList":{"type":"object","properties":{"quotes":{"type":"array","description":"List of quotes.","items":{"$ref":"#/components/schemas/Quote"}},"pagination":{"$ref":"#/components/schemas/deprecatedPagination"}},"description":"Representation of a Quote result list."},"QuoteMetadata":{"required":["expirationTime","name"],"type":"object","properties":{"name":{"type":"string","description":"Name of the quote.","example":"Quote Name"},"description":{"type":"string","description":"Description of the quote.","example":"Quote Description"},"expirationTime":{"type":"string","description":"Expiration time of the quote.","format":"date-time"}},"description":"Updated name, description or expiry date of the quote"},"QuoteStarter":{"type":"object","properties":{"cartId":{"type":"string","description":"CartId of the cart from which the quote will be created.","example":"0003050"},"quoteCode":{"type":"string","description":"Code of the quote for the requote action.","example":"0003060"}},"description":"Object representing ways of creating new quote - by cartId for creating a new quote from the cart, by quoteCode for the requote action "},"Region":{"type":"object","properties":{"isocode":{"type":"string","description":"Country and Region code in iso format","example":"US-NY"},"isocodeShort":{"type":"string","description":"Region code in short iso form","example":"NY"},"countryIso":{"type":"string","description":"Country code in iso format","example":"US"},"name":{"type":"string","description":"Name of the region","example":"New York"}},"description":"Response body fields which will be returned while fetching the list of country's regions."},"RegionList":{"type":"object","properties":{"regions":{"type":"array","description":"This is the list of Region fields that should be returned in the response body","items":{"$ref":"#/components/schemas/Region"}}},"description":"List of Regions"},"ReplaceLoginIdInput":{"required":["newLoginId","password"],"type":"object","properties":{"newLoginId":{"type":"string","description":"New login id that is a unique string to identify a user.","example":"mark.rivers@pronto-hw.com"},"password":{"type":"string","description":"User password","example":"It'sMyPwd!0"}},"description":"Representation of a request of replacing an existing user's login id."},"ReplacePasswordInput":{"required":["newPassword","oldPassword"],"type":"object","properties":{"oldPassword":{"type":"string","description":"Current password of the customer.","example":"It'sMyPwd!0"},"newPassword":{"type":"string","description":"New password of the customer.","example":"It'sMyPwd!1"}},"description":"Representation of a request of replacing an existing user's password"},"ReplenishmentOrder":{"required":["replenishmentOrderCode"],"type":"object","properties":{"code":{"type":"string","description":"Code number of order"},"net":{"type":"boolean","description":"Flag stating iv value is net-value"},"totalPriceWithTax":{"$ref":"#/components/schemas/Price"},"totalPrice":{"$ref":"#/components/schemas/Price"},"totalTax":{"$ref":"#/components/schemas/Price"},"subTotal":{"$ref":"#/components/schemas/Price"},"deliveryCost":{"$ref":"#/components/schemas/Price"},"entries":{"type":"array","description":"List of order entries","items":{"$ref":"#/components/schemas/OrderEntry"}},"entryGroups":{"type":"array","description":"List of entry groups","items":{"$ref":"#/components/schemas/EntryGroup"}},"totalItems":{"type":"integer","format":"int32"},"deliveryMode":{"$ref":"#/components/schemas/DeliveryMode"},"deliveryAddress":{"$ref":"#/components/schemas/Address"},"paymentInfo":{"$ref":"#/components/schemas/PaymentDetails"},"appliedOrderPromotions":{"type":"array","description":"List of applied order promotions","items":{"$ref":"#/components/schemas/PromotionResult"}},"appliedProductPromotions":{"type":"array","description":"List of applied product promotions","items":{"$ref":"#/components/schemas/PromotionResult"}},"productDiscounts":{"$ref":"#/components/schemas/Price"},"orderDiscounts":{"$ref":"#/components/schemas/Price"},"totalDiscounts":{"$ref":"#/components/schemas/Price"},"site":{"type":"string","description":"Site"},"store":{"type":"string","description":"Store"},"guid":{"type":"string","description":"Guest user id identifier"},"calculated":{"type":"boolean","description":"Flag showing if order is calculated"},"appliedVouchers":{"type":"array","description":"List of applied vouchers","items":{"$ref":"#/components/schemas/Voucher"}},"user":{"$ref":"#/components/schemas/Principal"},"pickupOrderGroups":{"type":"array","description":"List of pickup order entry group","items":{"$ref":"#/components/schemas/PickupOrderEntryGroup"}},"deliveryOrderGroups":{"type":"array","description":"List of delivery order entries group","items":{"$ref":"#/components/schemas/DeliveryOrderEntryGroup"}},"pickupItemsQuantity":{"type":"integer","description":"Quantity of pickup items","format":"int64"},"deliveryItemsQuantity":{"type":"integer","description":"Quantity of delivery items","format":"int64"},"requestedRetrievalAt":{"type":"string","description":"Customer requested date for order retrieval"},"sapBillingAddress":{"$ref":"#/components/schemas/Address"},"sapCustomerEmail":{"type":"string","description":"Email of customer.","example":"xxx.yy@zz.com"},"sapPaymentOptionId":{"type":"string","description":"The payment option identifier. It specifies which option the consumer selected to make the payment for the cart.","example":"123456789"},"paymentType":{"$ref":"#/components/schemas/B2BPaymentTypeData"},"purchaseOrderNumber":{"type":"string"},"deliveryTimeSlot":{"$ref":"#/components/schemas/DeliveryTimeSlot"},"chinesePaymentInfo":{"$ref":"#/components/schemas/ChinesePaymentInfo"},"paymentStatus":{"type":"string","description":"Payment status","example":"PAID"},"taxInvoice":{"$ref":"#/components/schemas/TaxInvoice"},"totalUnitCount":{"type":"integer","description":"Total unit count","format":"int32"},"potentialOrderPromotions":{"type":"array","description":"List of potential order promotions for cart","items":{"$ref":"#/components/schemas/PromotionResult"}},"potentialProductPromotions":{"type":"array","description":"List of potential product promotions for cart","items":{"$ref":"#/components/schemas/PromotionResult"}},"name":{"type":"string","description":"Name of the cart"},"description":{"type":"string","description":"Description of the cart"},"expirationTime":{"type":"string","description":"Date of cart expiration time","format":"date-time"},"saveTime":{"type":"string","description":"Date of saving cart","format":"date-time"},"savedBy":{"$ref":"#/components/schemas/Principal"},"earliestRetrievalAt":{"type":"string","description":"Earliest possible retrieval date available for order"},"_messages":{"type":"array","description":"Messages about supplementary info, warning messages related to the cart","items":{"$ref":"#/components/schemas/ApiMessage"}},"costCenter":{"$ref":"#/components/schemas/B2BCostCenter"},"sapQuote":{"$ref":"#/components/schemas/Quote"},"active":{"type":"boolean","description":"Is the Replenishment Order active","example":false},"trigger":{"$ref":"#/components/schemas/Trigger"},"firstDate":{"type":"string","description":"First date of the replenishment order","format":"date-time"},"replenishmentOrderCode":{"type":"string","description":"Unique code for the replenishment order","example":"502BJ"}},"description":"Request body fields required and optional to operate on Replenishment Order data."},"ReplenishmentOrderList":{"type":"object","properties":{"replenishmentOrders":{"type":"array","description":"List of Replenishment Orders","items":{"$ref":"#/components/schemas/ReplenishmentOrder"}},"sorts":{"type":"array","description":"List of sorts","items":{"$ref":"#/components/schemas/Sort"}},"pagination":{"$ref":"#/components/schemas/deprecatedPagination"}},"description":"Representation of a Replenishment Order List"},"RequisitionFormData":{"required":["browseFormPostUrl","orderAsCXML"],"type":"object","properties":{"browseFormPostUrl":{"type":"string","description":"The url used to submit order into procurement system","example":"https://s1.ariba.com/Buyer/punchout?client=HTML.D6040B280216D0CAD6AF0F349AB37943.Node2app823snv&responseid=k&locale=en_US"},"orderAsCXML":{"type":"string","description":"Order info in base64 encoded cXML format, to submit this to procurement system, you must name this field with name cxml-base64 or cxml-urlencoded.","example":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48IURPQ1RZUEUgY1hNTCBTWVNURU0gImh0dHA6Ly94bWwuY1hNTC5vcmcvc2NoZW1hcy9jWE1MLzEuMi4wNTEvY1hNTC5kdGQiPjxjWE1MIHBheWxvYWRJRD0iMTY1NzE4MDA2NjgxOC4xNDc3QEZZRDRNTjdIMFEiIHRpbWVzdGFtcD0iMjAyMi0wNy0wN1QxNTo0Nzo0NiswODowMCIgeG1sOmxhbmc9ImVuLVVTIj48SGVhZGVyPjxGcm9tPjxDcmVkZW50aWFsIGRvbWFpbj0iYnV5ZXJzeXN0ZW1pZCI+PElkZW50aXR5PnAycF9waXR0PC9JZGVudGl0eT48L0NyZWRlbnRpYWw+PENyZWRlbnRpYWwgZG9tYWluPSJpbnRlcm5hbHN1cHBsaWVyaWQiPjxJZGVudGl0eT5wMnBfcGl0dDwvSWRlbnRpdHk+PC9DcmVkZW50aWFsPjxDcmVkZW50aWFsIGRvbWFpbj0iZHVucyI+PElkZW50aXR5PjI0MjQyNDI0dC10PC9JZGVudGl0eT48L0NyZWRlbnRpYWw+PENyZWRlbnRpYWwgZG9tYWluPSJtYXhpbW8iPjxJZGVudGl0eT4zMDc2OTIwPC9JZGVudGl0eT48L0NyZWRlbnRpYWw+PENyZWRlbnRpYWwgZG9tYWluPSJuZXR3b3JraWQiPjxJZGVudGl0eT5hbjAxNjY1NjMyMDU0LXQ8L0lkZW50aXR5PjwvQ3JlZGVudGlhbD48Q3JlZGVudGlhbCBkb21haW49InRyYW5zYWN0aW9ubmV0d29ya2lkIj48SWRlbnRpdHk+YW4wMTY2NTYzMjA1NC10PC9JZGVudGl0eT48L0NyZWRlbnRpYWw+PC9Gcm9tPjxUbz48Q3JlZGVudGlhbCBkb21haW49IkRVTlMiPjxJZGVudGl0eT4xMjM0NTY3ODk8L0lkZW50aXR5PjwvQ3JlZGVudGlhbD48L1RvPjxTZW5kZXI+PENyZWRlbnRpYWwgZG9tYWluPSJBcmliYU5ldHdvcmtVc2VySWQiPjxJZGVudGl0eT5zeXNhZG1pbkBhcmliYS5jb208L0lkZW50aXR5PjwvQ3JlZGVudGlhbD48VXNlckFnZW50PkJ1eWVyIDE0czI8L1VzZXJBZ2VudD48L1NlbmRlcj48L0hlYWRlcj48TWVzc2FnZT48UHVuY2hPdXRPcmRlck1lc3NhZ2U+PEJ1eWVyQ29va2llPkx3VDZuZkZRbk92ZWpFS25EWnlkS3REbkczZnE1ZmVzMC4yNDUwODQyMDU0NDIxMzg4MjMyPC9CdXllckNvb2tpZT48UHVuY2hPdXRPcmRlck1lc3NhZ2VIZWFkZXIgb3BlcmF0aW9uQWxsb3dlZD0iZWRpdCI+PFRvdGFsPjxNb25leSBjdXJyZW5jeT0iVVNEIj40OC4wPC9Nb25leT48L1RvdGFsPjwvUHVuY2hPdXRPcmRlck1lc3NhZ2VIZWFkZXI+PEl0ZW1JbiBxdWFudGl0eT0iMSI+PEl0ZW1JRD48U3VwcGxpZXJQYXJ0SUQ+Mzc1NTIxOTwvU3VwcGxpZXJQYXJ0SUQ+PC9JdGVtSUQ+PEl0ZW1EZXRhaWw+PFVuaXRQcmljZT48TW9uZXkgY3VycmVuY3k9IlVTRCI+NDguMDwvTW9uZXk+PC9Vbml0UHJpY2U+PERlc2NyaXB0aW9uIHhtbDpsYW5nPSJlbiI+Jmx0O2ImZ3Q7Q29tcGFjdCBhbmQgcG93ZXJmdWwgZm9yIGFsbCBzY3Jld2RyaXZpbmcgd29yayDigJMgd2l0aCBkcmlsbCBzZXR0aW5nJmx0Oy9iJmd0OyZsdDtici8mZ3Q7Jmx0O2JyLyZndDsgICAgKiBQb3dlcmZ1bCA5LjYgViBtb3RvciB3aXRoIHBsYW5ldGFyeSBnZWFycy4mbHQ7YnIvJmd0OyAgICAqIFRvcnF1ZSBwcmUtc2VsZWN0aW9uIHdpdGggNSB0b3JxdWUgc2V0dGluZ3MgcGx1cyBhIGRyaWxsIHNldHRpbmcg4oCTIG9wdGltdW0gcG93ZXIgZm9yIGV2ZXJ5IGFwcGxpY2F0aW9uLiZsdDtici8mZ3Q7ICAgICogVHdpbi1zbGVldmUga2V5bGVzcyBjaHVjayDigJMgZWFzeSwgdG9vbC1mcmVlIGJpdCBjaGFuZ2VzLiZsdDtici8mZ3Q7ICAgICogQm9zY2ggRWxlY3Ryb25pYyBzcGVlZCBjb250cm9sOiAiYWNjZWxlcmF0ZSIgZnJvbSAwIOKAkyBtYXguIHVzaW5nIHRoZSB0cmlnZ2VyIHN3aXRjaC4mbHQ7YnIvJmd0OyAgICAqIFNvZnRncmlwIGZvciBhIGJldHRlciBhbmQgbW9yZSBjb21mb3J0YWJsZSBob2xkLiZsdDtici8mZ3Q7ICAgICogUnVuLW91dCBicmFrZSBhbmQgc3dpdGNoLW9uIGxvY2suJmx0O2JyLyZndDsgICAgKiBRdWljay1jaGFuZ2UgYmF0dGVyeSBwYWNrLiZsdDtici8mZ3Q7ICAgICogQml0IHN0b3JhZ2UgY29tcGFydG1lbnQgb24gdGhlIGhvdXNpbmcuPC9EZXNjcmlwdGlvbj48VW5pdE9mTWVhc3VyZT5DNjI8L1VuaXRPZk1lYXN1cmU+PENsYXNzaWZpY2F0aW9uIGRvbWFpbj0iVU5TUFNDIj4yMzI5MTUwMDwvQ2xhc3NpZmljYXRpb24+PC9JdGVtRGV0YWlsPjwvSXRlbUluPjwvUHVuY2hPdXRPcmRlck1lc3NhZ2U+PC9NZXNzYWdlPjwvY1hNTD4="}},"description":"Representation transaction info of an order, containing the target url to submit cXML order message and base64 encode order info."},"ResetPassword":{"required":["newPassword","token"],"type":"object","properties":{"token":{"type":"string","description":"token value which will be generated as unique string that will be sent with email to allow user for completing reset-password operation"},"newPassword":{"type":"string","description":"new password string which is required to complete process of resetting password"}},"description":"Request body parameter that contains details such as token and new password"},"ReturnRequest":{"type":"object","properties":{"cancellable":{"type":"boolean","description":"Boolean flag for whether the return request is cancellable","example":true},"code":{"type":"string","description":"Return request code","example":"00000001"},"creationTime":{"type":"string","description":"Date of the return request creation","format":"date-time"},"deliveryCost":{"$ref":"#/components/schemas/Price"},"order":{"$ref":"#/components/schemas/Order"},"refundDeliveryCost":{"type":"boolean","description":"Boolean flag for whether there is a delivery cost for refund","example":false},"returnEntries":{"type":"array","description":"Entries of the return request which contains information about the returned product","items":{"$ref":"#/components/schemas/ReturnRequestEntry"}},"returnLabelDownloadUrl":{"type":"string","description":"URL of the return label"},"rma":{"type":"string","description":"Return merchandise authorization number","example":"00000001"},"status":{"type":"string","description":"Status of return request"},"subTotal":{"$ref":"#/components/schemas/Price"},"totalPrice":{"$ref":"#/components/schemas/Price"}},"description":"Representation of a return request for an order"},"ReturnRequestEntry":{"type":"object","properties":{"orderEntry":{"$ref":"#/components/schemas/OrderEntry"},"expectedQuantity":{"type":"integer","description":"Quantity which is expected to be returned for this return request entry","format":"int64","example":5},"refundAmount":{"$ref":"#/components/schemas/Price"}},"description":"Representation of a return request entry which contains information about the returned product"},"ReturnRequestEntryInput":{"required":["orderEntryNumber","quantity"],"type":"object","properties":{"orderEntryNumber":{"type":"integer","description":"Order entry number of the returned product","format":"int32","example":1},"quantity":{"type":"integer","description":"Quantity of the product which belongs to the order entry and is requested to be returned","format":"int64","example":5}},"description":"Representation of a return request entry input for an order"},"ReturnRequestEntryInputList":{"required":["orderCode","returnRequestEntryInputs"],"type":"object","properties":{"orderCode":{"type":"string","description":"Code of the order which return request is related to","example":"00000001"},"returnRequestEntryInputs":{"type":"array","description":"Return request entry inputs which contain information about the order entries which are requested to be returned","items":{"$ref":"#/components/schemas/ReturnRequestEntryInput"}}},"description":"Return request input list for the current order."},"ReturnRequestList":{"type":"object","properties":{"returnRequests":{"type":"array","description":"List of order return requests","items":{"$ref":"#/components/schemas/ReturnRequest"}},"sorts":{"type":"array","description":"List of sorts","items":{"$ref":"#/components/schemas/Sort"}},"pagination":{"$ref":"#/components/schemas/deprecatedPagination"}},"description":"Representation of an Order Return Request List"},"ReturnRequestModification":{"type":"object","properties":{"status":{"type":"string","description":"Status of the return request","enum":["CANCELLING"]}},"description":"Return request modification object."},"Review":{"type":"object","properties":{"id":{"type":"string","description":"Identifier of review"},"headline":{"type":"string","description":"Review headline"},"comment":{"type":"string","description":"Review comment"},"rating":{"type":"number","description":"Review rating value","format":"double"},"date":{"type":"string","description":"Date of the review","format":"date-time"},"alias":{"type":"string","description":"Alias name for the review"},"principal":{"$ref":"#/components/schemas/User"}},"description":"Object contains review details like : rating, alias, headline, comment."},"ReviewList":{"type":"object","properties":{"reviews":{"type":"array","description":"List of reviews","items":{"$ref":"#/components/schemas/Review"}}},"description":"Representation of a Review List"},"SAPAccessCode":{"required":["accessCode"],"type":"object","properties":{"accessCode":{"type":"string","description":"Representation of an SAP access code","example":"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQ"}}},"SAPAccessCodePublicKey":{"required":["publicKey"],"type":"object","properties":{"publicKey":{"type":"string","description":"The public key to decrypt an SAP access code","example":"eyAiY2FydElkIjogIjAwMDAzMDAyIiwgImNyZWF0aW9"}}},"SAPAttachment":{"type":"object","properties":{"id":{"type":"string","description":"Attachment identifier.","example":"e58ed763-928c-4155-bee9-fdbaaadc15f3"},"filename":{"type":"string","description":"The name and the extension of the attached file.","example":"my_file.jpg"}},"description":"Object contains attachment id for sap attachment."},"SAPAvailability":{"type":"object","properties":{"availabilityItems":{"type":"array","description":"List of product availability.","items":{"$ref":"#/components/schemas/SAPProductAvailability"}}},"description":"Representation of availability for a list of products."},"SAPCustomerCouponOperationRequest":{"required":["couponCode"],"type":"object","properties":{"couponCode":{"type":"string","description":"Coupon code. A valid coupon code can be used to get a discount.","example":"VCHR-H8BC-Y3D5-34AL"}},"description":"Customer coupon operation request."},"SAPGuestUserRequest":{"type":"object","properties":{"email":{"type":"string","description":"Email of the guest user. It will be used during the guest checkout process but may be optional when creating a guest user for a cart.","example":"xxx.yy@zz.com"}},"description":"Attributes needed to update for guest user, such as email address "},"SAPInvoice":{"type":"object","properties":{"invoiceId":{"type":"string","description":"Invoice Id","example":"9560887"},"createdAt":{"type":"string","description":"Invoice creation date","format":"date-time","example":"2020-09-16T04:55:09.505Z"},"totalAmount":{"$ref":"#/components/schemas/Price"},"netAmount":{"$ref":"#/components/schemas/Price"},"externalSystemId":{"type":"string","description":"External system identifier where the invoice resides.","example":"S4SALES"}},"description":"Representation of an Invoice"},"SAPInvoiceList":{"type":"object","properties":{"invoices":{"type":"array","description":"list of invoice","items":{"$ref":"#/components/schemas/SAPInvoice"}},"sorts":{"type":"array","description":"sorting information","items":{"$ref":"#/components/schemas/sort"}},"pagination":{"$ref":"#/components/schemas/pagination"}},"description":"Representation of an Invoice List"},"SAPOrderAttachment":{"type":"object","properties":{"sapAttachmentId":{"type":"string","description":"Attachment Id which together with the Order code can be used to obtain content of the file","example":"323920"},"sapFileName":{"type":"string","description":"Attachment File Name","example":"product-manual.pdf"}},"description":"Representation of a metadata of an Order Attachment (a binary file linked to an Order)"},"SAPOrderAttachmentList":{"type":"object","properties":{"sapAttachments":{"type":"array","description":"list of Order Attachment objects","items":{"$ref":"#/components/schemas/SAPOrderAttachment"}},"sorts":{"type":"array","description":"sorting information","items":{"$ref":"#/components/schemas/sort"}},"pagination":{"$ref":"#/components/schemas/pagination"}},"description":"Representation of a search result for Order Attachment metadata"},"SAPPaymentMethod":{"required":["code","name"],"type":"object","properties":{"code":{"type":"string","description":"Payment Method Code","example":"CreditCard"},"name":{"type":"string","description":"Payment Method Name","example":"Credit Card"}},"description":"Payment Method"},"SAPPaymentOptionRequest":{"type":"object","properties":{"sapPaymentOptionId":{"type":"string","description":"The payment option identifier. It specifies which option the consumer selected to make the payment for the cart.","example":"123456789"},"purchaseOrderNumber":{"type":"string","description":"Purchase order number","example":"00000008"}},"description":"The payment option information. If payment option identifier is set, then the payment type will also be set accordingly, and other endpoints can no longer modify the payment type."},"SAPProductAvailability":{"type":"object","properties":{"productCode":{"type":"string","description":"Product identifier.","example":"3318057_A"},"unitAvailabilities":{"type":"array","description":"List of unit availability.","items":{"$ref":"#/components/schemas/SAPUnitAvailability"}}},"description":"Representation of availability for a product."},"SAPSavedCartRequest":{"type":"object","properties":{"name":{"type":"string","description":"Name of the saved cart.","example":"First cart"},"description":{"type":"string","description":"Description of the saved cart.","example":"This is my first saved cart"}},"description":"Representation of information of a saved cart"},"SAPUnit":{"type":"object","properties":{"code":{"type":"string","description":"Code of the unit"},"name":{"type":"string","description":"Name of the unit"},"availabilityCode":{"type":"string","description":"Code of the unit is used to check availability, which can be retrieved either from 'code' without any integration, from 'sapCode' with SAP OMSA integration, or potentially from another source through custom integration with a stock service."},"sapCode":{"type":"string","description":"Code of the SAP unit"}},"description":"Representation of a Unit"},"SAPUnitAvailability":{"type":"object","properties":{"quantity":{"type":"integer","description":"Available quantity.","format":"int64","example":25},"status":{"type":"string","description":"Status of availability. Possible values can be IN_STOCK, OUT_OF_STOCK, LOW_STOCK.","example":"IN_STOCK"},"unit":{"type":"string","description":"Code of the unit of measure.","example":"PC"}},"description":"Representation of availability in a particular unit."},"SAPVoucherOperationRequest":{"required":["voucherCode"],"type":"object","properties":{"voucherCode":{"type":"string","description":"Voucher code. A valid voucher code can be used to get a discount.","example":"WINTER16"}},"description":"Voucher operation request."},"SAPVoucherRequest":{"required":["voucherId"],"type":"object","properties":{"voucherId":{"type":"string","description":"Voucher identifier (code).","example":"VCHR-H8BC-Y3D5-34AL"}},"description":"Representation of information of a voucher"},"SaveCartResult":{"type":"object","properties":{"savedCartData":{"$ref":"#/components/schemas/Cart"}},"description":"Representation of a Save Cart Result"},"ScheduleReplenishmentForm":{"type":"object","properties":{"replenishmentStartDate":{"type":"string","description":"First day for replenishment order","format":"date-time"},"numberOfDays":{"type":"string","description":"How frequent replenishment should be activated expressed in days. Mandatory with 'recurrencePeriod=DAILY'.","example":"14"},"numberOfWeeks":{"type":"string","description":"How frequent replenishment should be activated expressed in weeks. Mandatory with 'recurrencePeriod=WEEKLY'.","example":"1"},"nthDayOfMonth":{"type":"string","description":"On which date of month replenishment should be activated. Mandatory with 'recurrencePeriod=MONTHLY'.","example":"1"},"recurrencePeriod":{"type":"string","description":"Replenishment recurrence period. Available values are DAILY, WEEKLY and MONTHLY. DAILY requires 'numberOfDays'. WEEKLY requires 'daysOfWeek' AND 'numberOfWeeks'. MONTHLY requires 'nthDayOfMonth'.","example":"WEEKLY"},"daysOfWeek":{"type":"array","description":"List of days of week on which replenishment should occur. Mandatory with 'recurrencePeriod=WEEKLY'.","items":{"type":"string","description":"List of days of week on which replenishment should occur. Mandatory with 'recurrencePeriod=WEEKLY'.","enum":["SUNDAY","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY"]}}},"description":"Schedule replenishment form object."},"SearchQuery":{"type":"object","properties":{"value":{"type":"string","description":"Value of search query"}},"description":"Representation of a Search Query"},"SearchState":{"type":"object","properties":{"url":{"type":"string","description":"Url address of search state"},"query":{"$ref":"#/components/schemas/SearchQuery"}},"description":"Representation of a Search State"},"Sort":{"type":"object","properties":{"code":{"type":"string","description":"Code of Sort"},"name":{"type":"string","description":"Name of Sort"},"selected":{"type":"boolean","description":"Flag stating when Sort is selected"}},"description":"Representation a Sort option"},"SpecialOpeningDay":{"type":"object","properties":{"openingTime":{"$ref":"#/components/schemas/Time"},"closingTime":{"$ref":"#/components/schemas/Time"},"date":{"type":"string","description":"Date of special opening day","format":"date-time"},"formattedDate":{"type":"string","description":"Text representation of the date of special opening day"},"closed":{"type":"boolean","description":"Flag stating if special opening day is closed"},"name":{"type":"string","description":"Name of the special opening day event"},"comment":{"type":"string","description":"Comment field"}},"description":"Representation of a special opening day"},"SpellingSuggestion":{"type":"object","properties":{"suggestion":{"type":"string","description":"Spelling suggestion"},"query":{"type":"string","description":"Query for spelling suggestion"}},"description":"Representation of a Spell Checker Suggestion"},"StatusSummary":{"type":"object","properties":{"status":{"type":"string","description":"Status or severity indicator, can be one of ERROR, WARNING, INFO or SUCCESS","example":"ERROR"},"numberOfIssues":{"type":"integer","description":"Number of issues per status","format":"int32","example":3}},"description":"Representation of a status summary, an aggregated view on issues for a specific status or severity. These issues are attached to configurations of products or order entries"},"Stock":{"type":"object","properties":{"stockLevelStatus":{"type":"string","description":"Status of stock level","example":"inStock"},"stockLevel":{"type":"integer","description":"Stock level expressed as number","format":"int64","example":25},"isValueRounded":{"type":"boolean","description":"Indicate whether Stock level value is rounded","example":false}},"description":"Representation of a Stock"},"StoreCount":{"type":"object","properties":{"type":{"type":"string","description":"Type of store count"},"name":{"type":"string","description":"Name of store count"},"isoCode":{"type":"string","description":"Iso code of store"},"count":{"type":"integer","description":"Count","format":"int32"},"storeCountDataList":{"type":"array","description":"List of store counts","items":{"$ref":"#/components/schemas/StoreCount"}}},"description":"Representation of a Store Count"},"StoreCountList":{"type":"object","properties":{"countriesAndRegionsStoreCount":{"type":"array","description":"List of store counts","items":{"$ref":"#/components/schemas/StoreCount"}}},"description":"Representation of a Store Count List"},"StoreFinderSearchPage":{"type":"object","properties":{"stores":{"type":"array","description":"List of stores","items":{"$ref":"#/components/schemas/PointOfService"}},"sorts":{"type":"array","description":"List of sortings","items":{"$ref":"#/components/schemas/Sort"}},"pagination":{"$ref":"#/components/schemas/deprecatedPagination"},"locationText":{"type":"string","description":"Location text"},"sourceLatitude":{"type":"number","description":"Source latitude","format":"double"},"sourceLongitude":{"type":"number","description":"Source longitude","format":"double"},"boundNorthLatitude":{"type":"number","description":"Bound north latitude","format":"double"},"boundEastLongitude":{"type":"number","description":"Bound east longitude","format":"double"},"boundSouthLatitude":{"type":"number","description":"Bound south latitude","format":"double"},"boundWestLongitude":{"type":"number","description":"Bound west longitude","format":"double"}},"description":"Representation of a Store finder search page"},"StoreFinderStockSearchPage":{"type":"object","properties":{"stores":{"type":"array","description":"List of stores","items":{"$ref":"#/components/schemas/PointOfServiceStock"}},"sorts":{"type":"array","description":"List of sorts","items":{"$ref":"#/components/schemas/Sort"}},"pagination":{"$ref":"#/components/schemas/deprecatedPagination"},"locationText":{"type":"string","description":"Location text"},"sourceLatitude":{"type":"number","description":"Source latitude","format":"double"},"sourceLongitude":{"type":"number","description":"Source longitude","format":"double"},"boundNorthLatitude":{"type":"number","description":"Bound to north latitude","format":"double"},"boundEastLongitude":{"type":"number","description":"Bound to east longitude","format":"double"},"boundSouthLatitude":{"type":"number","description":"Bound to south latitude","format":"double"},"boundWestLongitude":{"type":"number","description":"Bound to west longitude","format":"double"},"product":{"$ref":"#/components/schemas/Product"}},"description":"Representation of a Store Finder Stock Search Page"},"Suggestion":{"type":"object","properties":{"value":{"type":"string","description":"Suggestion value"}},"description":"Representation of a Suggestion"},"SuggestionList":{"type":"object","properties":{"suggestions":{"type":"array","description":"List of suggestions","items":{"$ref":"#/components/schemas/Suggestion"}}},"description":"Representation of a Suggestion List"},"TaxInvoice":{"type":"object","properties":{"recipientType":{"type":"string","description":"recipient type","example":"INDIVIDUAL"},"recipient":{"type":"string","description":"name of recipient"},"taxpayerID":{"type":"string","description":"taxpayer identification number"}},"description":"data type of tax invoice"},"Ticket":{"type":"object","properties":{"id":{"type":"string","description":"Ticket identifier.","example":"00000001"},"customerId":{"type":"string","description":"Customer identifier.","example":"1000001"},"subject":{"type":"string","description":"Subject of ticket.","example":"My drill is broken."},"createdAt":{"type":"string","description":"Date and time of ticket creation.","format":"date-time"},"modifiedAt":{"type":"string","description":"Date and time of last modification.","format":"date-time"},"availableStatusTransitions":{"type":"array","items":{"$ref":"#/components/schemas/TicketStatus"}},"associatedTo":{"$ref":"#/components/schemas/TicketAssociatedObject"},"status":{"$ref":"#/components/schemas/TicketStatus"},"ticketEvents":{"type":"array","items":{"$ref":"#/components/schemas/TicketEvent"}},"ticketCategory":{"$ref":"#/components/schemas/TicketCategory"}},"description":"Ticket object."},"TicketAssociatedObject":{"required":["code","type"],"type":"object","properties":{"code":{"type":"string","description":"Associated object code.","example":"00001000"},"type":{"type":"string","description":"Type of associated object: Cart, SavedCart or Order.","example":"Cart"},"modifiedAt":{"type":"string","description":"Date and time of last modification.","format":"date-time"}},"description":"Object that can be associated with a ticket. The object can be a cart or an order."},"TicketAssociatedObjectList":{"type":"object","properties":{"ticketAssociatedObjects":{"type":"array","items":{"$ref":"#/components/schemas/TicketAssociatedObject"}}},"description":"List of ticket associated objects."},"TicketCategory":{"required":["id"],"type":"object","properties":{"name":{"type":"string","description":"Localized ticket category name.","example":"Enquiry"},"id":{"type":"string","description":"Ticket category identifier.","example":"ENQUIRY"}},"description":"Ticket category details."},"TicketCategoryList":{"type":"object","properties":{"ticketCategories":{"type":"array","items":{"$ref":"#/components/schemas/TicketCategory"}}},"description":"List of ticket categories."},"TicketEvent":{"required":["message"],"type":"object","properties":{"code":{"type":"string","description":"Event code is specific to each event. It is used to identify an event.","example":"00000A15"},"author":{"type":"string","description":"Name of user who created this ticket event.","example":"Mark Rivers"},"createdAt":{"type":"string","description":"Date and time of event creation.","format":"date-time"},"message":{"type":"string","description":"Detailed description of the question.","example":"The drill was damaged when I received it. Could you please send me a replacement?"},"addedByAgent":{"type":"boolean","description":"Whether an agent added this event.","example":false},"ticketEventAttachments":{"type":"array","items":{"$ref":"#/components/schemas/TicketEventAttachment"}},"toStatus":{"$ref":"#/components/schemas/TicketStatus"}},"description":"Basic information about the ticket event."},"TicketEventAttachment":{"type":"object","properties":{"id":{"type":"string","description":"Attachment identifier.","example":"001"},"filename":{"type":"string","description":"The name and the extension of the attached file.","example":"my_file.jpg"}},"description":"Object containing a set of fields for ticket attachment."},"TicketList":{"type":"object","properties":{"tickets":{"type":"array","description":"List of tickets.","items":{"$ref":"#/components/schemas/Ticket"}},"pagination":{"$ref":"#/components/schemas/deprecatedPagination"},"sorts":{"type":"array","description":"Ticket list sorting details.","items":{"$ref":"#/components/schemas/Sort"}}},"description":"List of ticket results."},"TicketStarter":{"required":["message","subject"],"type":"object","properties":{"subject":{"type":"string","description":"Subject of ticket.","example":"My drill is broken."},"message":{"type":"string","description":"Detailed description of the question.","example":"The drill was damaged when I received it. Could you please send me a replacement?"},"ticketCategory":{"$ref":"#/components/schemas/TicketCategory"},"associatedTo":{"$ref":"#/components/schemas/TicketAssociatedObject"}},"description":"Basic information of the ticket."},"TicketStatus":{"required":["id"],"type":"object","properties":{"name":{"type":"string","description":"Localized ticket status name.","example":"Closed"},"id":{"type":"string","description":"Ticket status identifier.","example":"CLOSED"}},"description":"Ticket status details."},"Time":{"type":"object","properties":{"hour":{"type":"string","description":"Hour part of the time data","format":"byte"},"minute":{"type":"string","description":"Minute part of the time data","format":"byte"},"formattedHour":{"type":"string","description":"Formatted hour"},"meridiemIndicator":{"type":"string","description":"Meridiem indicator"}},"description":"Representation of a Time"},"Title":{"type":"object","properties":{"code":{"type":"string","description":"Title code"},"name":{"type":"string","description":"Title name"}},"description":"Representation of a Title"},"TitleList":{"type":"object","properties":{"titles":{"type":"array","description":"List of titles","items":{"$ref":"#/components/schemas/Title"}}},"description":"Representation of a Title List"},"Trigger":{"type":"object","properties":{"activationTime":{"type":"string","description":"The time the trigger will be activated","format":"date-time"},"displayTimeTable":{"type":"string","description":"Description of when the trigger is being activated","example":"Every Monday at 00:00:00"}},"description":"Representation of a Trigger"},"User":{"type":"object","properties":{"uid":{"type":"string","description":"Unique user identifier"},"name":{"type":"string","description":"Name of the user"},"defaultAddress":{"$ref":"#/components/schemas/Address"},"titleCode":{"type":"string","description":"User title code"},"title":{"type":"string","description":"User title"},"firstName":{"type":"string","description":"User first name"},"lastName":{"type":"string","description":"User last name"},"currency":{"$ref":"#/components/schemas/Currency"},"language":{"$ref":"#/components/schemas/Language"},"displayUid":{"type":"string","description":"User identifier"},"customerId":{"type":"string","description":"Customer identifier"},"deactivationDate":{"type":"string","description":"Deactivation date","format":"date-time"},"defaultPointOfServiceName":{"type":"string","description":"Name of the default pick up location","example":"Misato"},"lastCartId":{"type":"string","description":"The latest cart operated by customer","example":"000000001"},"hasOrder":{"type":"boolean","description":"Indicates whether customer has order. Default value is false.","example":false},"userAvatar":{"$ref":"#/components/schemas/UserAvatar"},"orgUnit":{"$ref":"#/components/schemas/B2BUnit"},"roles":{"type":"array","items":{"type":"string"}},"approvers":{"type":"array","description":"List of organizational approvers","items":{"$ref":"#/components/schemas/User"}},"selected":{"type":"boolean","description":"Boolean flag of whether the user is selected","example":true},"active":{"type":"boolean","description":"Boolean flag of whether the user is active/enabled or not","example":true},"email":{"type":"string","description":"Email of the user","example":"mark.rivers@rustic-hw.com"},"mobileNumber":{"type":"string","description":"Mobile Number"},"emailLanguage":{"type":"string","description":"Email Language"}},"description":"User's object."},"UserAvatar":{"type":"object","properties":{"url":{"type":"string","description":"URL of customer profile image in media server. It's optional.","example":"/medias/?context=bWFzdGVyfHJvb3R8NTMyMDB8aW1hZ2UvanBlZ3xhRGM1TDJneFl5ODROemszTlRNd016a3dOVFU0TG1wd1p3fDViODZlNmFiZTkyNzFjZDFmM2I5ZWU3OGJhZWEzMjViZDBiZTQ2NjM3YzIyMTg"},"format":{"type":"string","description":"Image format. It's optional.","example":"jpg"}},"description":"Representation of a profile picture."},"UserGroup":{"type":"object","properties":{"uid":{"type":"string","description":"Unique user identifier"},"name":{"type":"string","description":"Name of the user"},"members":{"type":"array","description":"List of members","items":{"$ref":"#/components/schemas/Principal"}},"membersCount":{"type":"integer","description":"Number of members","format":"int32"}},"description":"User group object with id and name."},"UserGroupList":{"type":"object","properties":{"userGroups":{"type":"array","description":"List of user groups","items":{"$ref":"#/components/schemas/UserGroup"}},"totalNumber":{"type":"integer","description":"Total number","format":"int32"},"pageSize":{"type":"integer","description":"Page size","format":"int32"},"numberOfPages":{"type":"integer","description":"Number of pages","format":"int32"},"currentPage":{"type":"integer","description":"Current page","format":"int32"}},"description":"Representation of a User Group List"},"UserSignUp":{"required":["firstName","lastName","password","uid"],"type":"object","properties":{"uid":{"type":"string","description":"user id, unique string required to create new user. It can be email","example":"akiro.nakamura@rustic-hw.com"},"firstName":{"type":"string","description":"first name of the user","example":"Arika"},"lastName":{"type":"string","description":"last name of the user","example":"Nakamura"},"titleCode":{"type":"string","example":"mr"},"password":{"type":"string","description":"User password."},"verificationTokenId":{"type":"string","description":"Authentication identifier of a new B2C customer registration. Only needed when OTP for registration is enabled.","example":"<REG[nZbnrnhMWy2uBbzKWU/SQRVBZ7mJaiXX9/87PegvovM=]>"},"verificationTokenCode":{"type":"string","description":"Code included in the email sent to the customer to be registered. Only needed when OTP for registration is enabled.","example":"W2Lihg36"}},"description":"User's object."},"VariantCategory":{"type":"object","properties":{"name":{"type":"string","description":"Variant category name"},"hasImage":{"type":"boolean","description":"Flag if varian category has image assigned"},"priority":{"type":"integer","description":"Priority number of variant category","format":"int32"}},"description":"Representation of a Variant Category"},"VariantMatrixElement":{"type":"object","properties":{"variantValueCategory":{"$ref":"#/components/schemas/VariantValueCategory"},"parentVariantCategory":{"$ref":"#/components/schemas/VariantCategory"},"variantOption":{"$ref":"#/components/schemas/VariantOption"},"elements":{"type":"array","description":"List of elements with the type of variant matrix element","items":{"$ref":"#/components/schemas/VariantMatrixElement"}},"isLeaf":{"type":"boolean"}},"description":"Representation of a Variant Matrix Element"},"VariantOption":{"type":"object","properties":{"code":{"type":"string","description":"Code of the variant option"},"stock":{"$ref":"#/components/schemas/Stock"},"url":{"type":"string","description":"Url address of the variant option"},"priceData":{"$ref":"#/components/schemas/Price"},"variantOptionQualifiers":{"type":"array","description":"List of variant option qualifiers","items":{"$ref":"#/components/schemas/VariantOptionQualifier"}}},"description":"Representation of a Variant Option"},"VariantOptionQualifier":{"type":"object","properties":{"qualifier":{"type":"string","description":"Qualifier"},"name":{"type":"string","description":"Name of variant option qualifier"},"value":{"type":"string","description":"Value of variant option qualifier"},"image":{"$ref":"#/components/schemas/Image"}},"description":"Representation of a Variant Option Qualifier"},"VariantValueCategory":{"type":"object","properties":{"name":{"type":"string","description":"Name of the variant value category"},"sequence":{"type":"integer","description":"Sequence number of variant value category","format":"int32"},"superCategories":{"type":"array","description":"Parent category of variant value category","items":{"$ref":"#/components/schemas/VariantCategory"}}},"description":"Representation of a Variant Value Category"},"VerificationToken":{"required":["expiresIn","tokenId"],"type":"object","properties":{"tokenId":{"type":"string","description":"Unique token ID generated for verification request, which is used for authentication along with the token code.","example":"<LGN[nZbnrnhMWy2uBbzKWU/SQRVBZ7mJaiXX9/87PegvovM=]>"},"expiresIn":{"type":"integer","description":"Verification token expiration time in seconds.","format":"int32","example":300}},"description":"Representation of information for obtained verification token."},"Voucher":{"type":"object","properties":{"code":{"type":"string","description":"The identifier of the Voucher. This is the first part of voucher code which holds first 3 letters, like: 123"},"voucherCode":{"type":"string","description":"Voucher code, is the holder for keeping specific occasional voucher related to business usage. It can be generated and looks like: 123-H8BC-Y3D5-34AL"},"name":{"type":"string","description":"Name of the voucher"},"description":{"type":"string","description":"Description of the voucher"},"value":{"type":"number","description":"Value of the voucher. Example of such value is: 15.0d","format":"double"},"valueFormatted":{"type":"string","description":"Formatted value of the voucher"},"valueString":{"type":"string","description":"The value of the voucher to display. Example: 15.0%"},"freeShipping":{"type":"boolean","description":"Specifies if the order this voucher is applied to is shipped for free (true) or not (false). Defaults to false."},"currency":{"$ref":"#/components/schemas/Currency"},"appliedValue":{"$ref":"#/components/schemas/Price"}},"description":"Representation of a Voucher"},"VoucherList":{"type":"object","properties":{"vouchers":{"type":"array","description":"List of vouchers","items":{"$ref":"#/components/schemas/Voucher"}}},"description":"Representation of a Voucher List"},"WeekdayOpeningDay":{"type":"object","properties":{"openingTime":{"$ref":"#/components/schemas/Time"},"closingTime":{"$ref":"#/components/schemas/Time"},"weekDay":{"type":"string","description":"Text representation of week day opening day"},"closed":{"type":"boolean","description":"Flag stating if weekday opening day is closed"}},"description":"Representation of a Weekday Opening Day"},"carrier":{"type":"object","properties":{"code":{"type":"string","description":"Carrier code"},"name":{"type":"string","description":"Carrier name"}},"description":"Carrier"},"consignmentTracking":{"type":"object","properties":{"statusDisplay":{"type":"string","description":"Consignment status","example":"inTransit"},"carrierDetails":{"$ref":"#/components/schemas/carrier"},"trackingID":{"type":"string","description":"Tracking identifier"},"trackingUrl":{"type":"string","description":"The tracking url provided by the carrier"},"targetArrivalDate":{"type":"string","description":"Target arrival date","format":"date-time"},"trackingEvents":{"type":"array","description":"Logistics tracking information","items":{"$ref":"#/components/schemas/consignmentTrackingEvent"}}},"description":"Consignment tracking data"},"consignmentTrackingEvent":{"type":"object","properties":{"eventDate":{"type":"string","description":"Date of tracking event","format":"date-time"},"detail":{"type":"string","description":"Tracking detail"},"location":{"type":"string","description":"Consignment location"},"referenceCode":{"type":"string","description":"Logistics status"}},"description":"Consignment tracking event"},"conversation":{"type":"object","properties":{"id":{"type":"string","description":"conversation identifier"},"status":{"type":"string","description":"conversation status"},"agent":{"$ref":"#/components/schemas/Principal"},"customer":{"$ref":"#/components/schemas/Principal"},"createDate":{"type":"string","description":"create date","format":"date-time"},"closeDate":{"type":"string","description":"close date","format":"date-time"},"latestMessage":{"$ref":"#/components/schemas/conversationMessage"}},"description":"Conversation"},"conversationList":{"type":"object","properties":{"conversations":{"type":"array","description":"conversation data","items":{"$ref":"#/components/schemas/conversation"}}},"description":"Conversation list"},"conversationMessage":{"type":"object","properties":{"content":{"type":"string","description":"message content"},"sentTime":{"type":"string","description":"sent time","format":"date-time"},"sender":{"$ref":"#/components/schemas/Principal"}},"description":"Conversation message"},"conversationMessageList":{"type":"object","properties":{"conversationId":{"type":"string","description":"conversation identifier"},"messages":{"type":"array","description":"the messages list of this conversation","items":{"$ref":"#/components/schemas/conversationMessage"}}},"description":"the list of messages"},"customerInterestsSearchPage":{"type":"object","properties":{"results":{"type":"array","description":"List of product interest relation","items":{"$ref":"#/components/schemas/productInterestRelation"}},"sorts":{"type":"array","description":"Sorting information","items":{"$ref":"#/components/schemas/sort"}},"pagination":{"$ref":"#/components/schemas/pagination"}},"description":"Customer interests search page"},"deprecatedPagination":{"type":"object","properties":{"pageSize":{"type":"integer","description":"The number of results per page. A page may have less results if there are less than a full page of results, only on the last page in the results","format":"int32"},"currentPage":{"type":"integer","description":"The current page number. The first page is number zero (0), the second page is number one (1), and so on","format":"int32"},"sort":{"type":"string","description":"The selected sort code"},"totalPages":{"type":"integer","description":"The total number of pages. This is the number of pages, each of pageSize, required to display the totalResults.","format":"int32"},"totalResults":{"type":"integer","description":"The total number of matched results across all pages","format":"int64"}},"description":"Representation of a search results pagination"},"error":{"type":"object","properties":{"type":{"type":"string","description":"Type of the error e.g. 'LowStockError'."},"reason":{"type":"string","description":"Additional classification specific for each error type e.g. 'noStock'."},"message":{"type":"string","description":"Descriptive, human readable error message."},"subjectType":{"type":"string","description":"Type of the object related to the error e.g. 'entry'."},"subject":{"type":"string","description":"Identifier of the related object e.g. '1'."},"errorCode":{"type":"string","description":"Error code"},"language":{"type":"string","example":"English"},"position":{"type":"integer","format":"int32","example":1},"exceptionMessage":{"type":"string"}},"description":"Error message"},"errorList":{"type":"object","properties":{"errors":{"type":"array","items":{"$ref":"#/components/schemas/error"}}},"description":"List of errors"},"notificationPreference":{"type":"object","properties":{"channel":{"type":"string","description":"preference channel","example":"email, sms, site_message"},"value":{"type":"string","description":"the corresponding value of current channel, for example, for SMS it should be a mobile number; for email it should be an email address"},"enabled":{"type":"boolean","description":"if true, the channel is on; if false, the channel is off"},"visible":{"type":"boolean","description":"if true, the channel is visible; if false, the channel is invisible"}},"description":"Notification preference"},"notificationPreferenceList":{"type":"object","properties":{"preferences":{"type":"array","description":"notification preferences","items":{"$ref":"#/components/schemas/notificationPreference"}}},"description":"Notification preference list"},"pagination":{"type":"object","properties":{"count":{"type":"integer","description":"Number of elements on this page","format":"int32"},"totalCount":{"type":"integer","description":"Total number of elements","format":"int64"},"page":{"type":"integer","description":"Current page number","format":"int32"},"totalPages":{"type":"integer","description":"Total number of pages","format":"int32"},"hasNext":{"type":"boolean","description":"Indicates if there is next page"},"hasPrevious":{"type":"boolean","description":"Indicates if there is previous page"}},"description":"Pagination info"},"productInterestEntry":{"type":"object","properties":{"interestType":{"type":"string","description":"Product interest type"},"dateAdded":{"type":"string","description":"Added date of product interest","format":"date-time"},"expirationDate":{"type":"string","description":"Expiration date of product interest","format":"date-time"}},"description":"Product interest entry"},"productInterestRelation":{"type":"object","properties":{"product":{"$ref":"#/components/schemas/Product"},"productInterestEntry":{"type":"array","description":"List of product interest entry","items":{"$ref":"#/components/schemas/productInterestEntry"}}},"description":"Product interest relation"},"siteMessage":{"type":"object","properties":{"uid":{"type":"string","description":"message uid"},"subject":{"type":"string","description":"message subject"},"body":{"type":"string","description":"message body"},"notificationType":{"type":"string","description":"notification type used for this message","enum":["BACK_IN_STOCK","COUPON_EFFECTIVE","NOTIFICATION","COUPON_EXPIRE"]},"sentDate":{"type":"string","description":"sent date","format":"date-time"}},"description":"Site message"},"siteMessageSearchResult":{"type":"object","properties":{"messages":{"type":"array","description":"site messages","items":{"$ref":"#/components/schemas/siteMessage"}},"sorts":{"type":"array","description":"sorting information","items":{"$ref":"#/components/schemas/sort"}},"pagination":{"$ref":"#/components/schemas/pagination"}},"description":"Site message search result"},"sort":{"type":"object","properties":{"code":{"type":"string"},"asc":{"type":"boolean"}},"description":"Sort option"}},"securitySchemes":{"oauth2_Password":{"type":"oauth2","flows":{"password":{"tokenUrl":"/authorizationserver/oauth/token","scopes":{"basic":""}}}},"oauth2_client_credentials":{"type":"oauth2","flows":{"clientCredentials":{"tokenUrl":"/authorizationserver/oauth/token","scopes":{"extended":""}}}}}},"x-sap-api-type":"REST","x-sap-shortText":"Enables you to manage all of the common commerce functionality.","x-sap-stateInfo":{"state":"Active"},"x-servers":[{"templates":{"url":{"description":"SAP Commerce Cloud server URL where the application is deployed."}},"description":"Commerce Webservices v2 REST API endpoint","url":"https://{url}/occ/v2"}]}